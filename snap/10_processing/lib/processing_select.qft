<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.4">
  <include>qfs.qft</include>
  <include>processing_main.qft</include>
  <dependency>processing_main.qft</dependency>
  <dependency>processing_do_click.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1pMj" name="select">
      <Package id="_1pl8" name="binning">
        <Procedure id="_1p+i" name="tab">
          <variable name="tab"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogBinning.tabbed.tab"
                          event="MOUSE_MPRC" id="_1p+k" modifiers="16"/>
        </Procedure>
        <Package id="_1pl9" name="io_parameters"/>
        <Package id="_1plM" name="filter">
          <Procedure id="_1pzG" name="time_filter_method">
            <variable name="time_filter_method"/>
            <comment>@teststep Select time filter method.</comment>
            <TryStep id="_1p-m">
              <ProcedureCall id="_1p-l"
                             procedure="utility.binning.time_filter_method">
                <variable name="time_filter_method">$(time_filter_method)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1p-o"
                             maxerror="0">
                <TryStep id="_1p-p">
                  <ProcedureCall id="_1p-t"
                                 procedure="utility.binning.time_filter_method">
                    <variable name="time_filter_method">$(time_filter_method)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1p-r"
                                 maxerror="0">
                    <ProcedureCall id="_1p-s" procedure="run-log.logError">
                      <variable name="message">$(time_filter_method) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
        </Package>
        <Package id="_1plw" name="configuration">
          <Package id="_1pzn" name="source_bands">
            <Procedure id="_1q6U" name="all_aggregators">
              <comment>@teststep Check-in checkbox 'Save as'</comment>
              <ProcedureCall id="_1q6V"
                             procedure="check.binning.visible.checkbox_aggregator"/>
              <IfSequence id="_1q6e"
                          test="&#34;$(checkbox_aggregator_visible)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1q6k"
                               procedure="do_click.binning.configuration.source_bands.show_hide_selection_column"/>
              </IfSequence>
              <ProcedureCall id="_1q6d"
                             procedure="check.binning.visible.checkbox_aggregator"/>
              <IfSequence id="_1q6Z"
                          test="&#34;$(checkbox_aggregator_visible)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1q6n"
                               procedure="check.binning.enabled.configuration.source_bands.checkbox_aggregator"/>
                <IfSequence id="_1q6m"
                            test="&#34;$(checkbox_aggregator_enabled)&#34;==&#34;true&#34;">
                  <ProcedureCall id="_1q6b"
                                 procedure="check.binning.checked.configuration.checkbox_aggregator"/>
                  <IfSequence id="_1q6W"
                              test="&#34;$(checkbox_aggregator)&#34;==&#34;false&#34;">
                    <ProcedureCall id="_1q6X"
                                   procedure="do_click.binning.configuration.source_bands.checkbox_aggregator"/>
                  </IfSequence>
                  <ProcedureCall id="_1q6c"
                                 procedure="check.binning.checked.configuration.checkbox_aggregator_selected_status">
                    <variable name="selected">true</variable>
                  </ProcedureCall>
                </IfSequence>
                <ElseSequence id="_1q6a">
                  <ProcedureCall id="_1q6l" procedure="run-log.logError">
                    <variable name="message">Aggregator checkbox is not visible</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </Procedure>
          </Package>
          <Package id="_1pzo" name="intermediate_source_bands">
            <Procedure id="_1q8w" name="all_intermediate_source_bands">
              <comment>@teststep Check 'Name' checkbox is enabled.</comment>
              <ProcedureCall id="_1q8-"
                             procedure="check.binning.visible.checkbox_name"/>
              <IfSequence id="_1q90"
                          test="&#34;$(checkbox_name_visible)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1q91"
                               procedure="do_click.binning.configuration.intermediate_source_bands.show_hide_selection_column"/>
              </IfSequence>
              <ProcedureCall id="_1q9C"
                             procedure="check.binning.visible.checkbox_name"/>
              <IfSequence id="_1q93"
                          test="&#34;$(checkbox_name_visible)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1q94"
                               procedure="check.binning.enabled.configuration.intermediate_source_bands.checkbox_name"/>
                <IfSequence id="_1q95"
                            test="&#34;$(checkbox_name_enabled)&#34;==&#34;true&#34;">
                  <ProcedureCall id="_1q96"
                                 procedure="check.binning.checked.configuration.checkbox_name"/>
                  <IfSequence id="_1q97"
                              test="&#34;$(checkbox_name)&#34;==&#34;false&#34;">
                    <ProcedureCall id="_1q98"
                                   procedure="do_click.binning.configuration.intermediate_source_bands.checkbox_name"/>
                  </IfSequence>
                  <ProcedureCall id="_1q9E"
                                 procedure="check.binning.checked.configuration.checkbox_name_selected_status">
                    <variable name="selected">true</variable>
                  </ProcedureCall>
                </IfSequence>
                <ElseSequence id="_1q9A">
                  <ProcedureCall id="_1q9B" procedure="run-log.logError">
                    <variable name="message">'Intermediate source bands name' checkbox is not visible</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1q5G" name="edit_aggregator">
          <Procedure id="_1q5n" name="output_sums">
            <comment>@teststep Check-in checkbox 'output sums'</comment>
            <ProcedureCall id="_1q5r"
                           procedure="check.edit_aggregator.checked.output_sums"/>
            <IfSequence id="_1q5u"
                        test="&#34;$(output_sums)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1q5p"
                             procedure="do_click.binning.edit_aggregator.output_sums"/>
            </IfSequence>
            <ProcedureCall id="_1q5t"
                           procedure="check.edit_aggregator.checked.output_sums_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1q5H" name="output_counts">
            <comment>@teststep Check-in checkbox 'output counts'</comment>
            <ProcedureCall id="_1q5j"
                           procedure="check.edit_aggregator.checked.output_counts"/>
            <IfSequence id="_1q5v"
                        test="&#34;$(output_counts)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1q5h"
                             procedure="do_click.binning.edit_aggregator.output_counts"/>
            </IfSequence>
            <ProcedureCall id="_1q5l"
                           procedure="check.edit_aggregator.checked.output_counts_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1q65" name="aggregator">
            <variable name="aggregator"/>
            <comment>@teststep Select aggregator.</comment>
            <TryStep id="_1q6B">
              <ProcedureCall id="_1q6A"
                             procedure="utility.binning.aggregator">
                <variable name="aggregator">$(aggregator)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1q6C"
                             maxerror="0">
                <TryStep id="_1q6D">
                  <ProcedureCall id="_1q6E"
                                 procedure="utility.binning.aggregator">
                    <variable name="aggregator">$(aggregator)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1q6F"
                                 maxerror="0">
                    <ProcedureCall id="_1q6G" procedure="run-log.logError">
                      <variable name="message">$(aggregator) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1q6I" name="source_band">
            <variable name="band"/>
            <comment>@teststep Select source band</comment>
            <TryStep id="_1q6O">
              <ProcedureCall id="_1q6N"
                             procedure="utility.binning.source_band_in_edit_aggregator">
                <variable name="band">$(band)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1q6P"
                             maxerror="0">
                <TryStep id="_1q6Q">
                  <ProcedureCall id="_1q6R"
                                 procedure="utility.binning.source_band_in_edit_aggregator">
                    <variable name="band">$(band)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1q6S"
                                 maxerror="0">
                    <ProcedureCall id="_1q6T" procedure="run-log.logError">
                      <variable name="message">$(band) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1pMl" name="collocation">
        <Procedure id="_1pMm" name="resampling_type">
          <variable name="resampling_type"/>
          <comment>@teststep Select resampling type</comment>
          <ProcedureCall id="_1pOk" procedure="variables.resampling_types"/>
          <SetGlobalStep id="_1pOl" varname="restype">
            <default>${resampling:$(resampling_type)}</default>
          </SetGlobalStep>
          <TryStep id="_1pMo">
            <ProcedureCall id="_1pMp"
                           procedure="utility.collocation.resampling_type_collocation">
              <variable name="resampling_type">$(restype)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pMq" maxerror="0">
              <TryStep id="_1pMr">
                <ProcedureCall id="_1pOj"
                               procedure="utility.collocation.resampling_type_collocation">
                  <variable name="resampling_type">$(restype)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pMt"
                               maxerror="0">
                  <ProcedureCall id="_1pMu" procedure="run-log.logError">
                    <variable name="message">$(restype) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pOX" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1pOZ">
            <ProcedureCall id="_1pOa"
                           procedure="utility.collocation.output_format_collocation">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pOb" maxerror="0">
              <TryStep id="_1pOc">
                <ProcedureCall id="_1pOd"
                               procedure="utility.collocation.output_format_collocation">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pOe"
                               maxerror="0">
                  <ProcedureCall id="_1pOf" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pMv" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1pMw"
                         procedure="check.collocation.checked.save_as"/>
          <IfSequence id="_1pMx" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pMy"
                           procedure="do_click.collocation.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pMz"
                         procedure="check.collocation.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pN3" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pN4"
                         procedure="check.collocation.checked.open_in_snap"/>
          <IfSequence id="_1pN5"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXT"
                           procedure="check.collocation.enabled.open_in_snap"/>
            <IfSequence id="_1qXU"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXV" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXW"
                             procedure="select.collocation.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pN6"
                           procedure="do_click.collocation.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pN7"
                         procedure="check.collocation.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pND" name="rename_master_components">
          <comment>@teststep Check-in checkbox 'Rename master components'</comment>
          <ProcedureCall id="_1pNE"
                         procedure="check.collocation.checked.rename_master_components"/>
          <IfSequence id="_1pNF"
                      test="&#34;$(rename_master_components)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pNG"
                           procedure="do_click.collocation.rename_master_components"/>
          </IfSequence>
          <ProcedureCall id="_1pNH"
                         procedure="check.collocation.checked.rename_master_components_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pOI" name="rename_slave_components">
          <comment>@teststep Check-in checkbox 'Rename slave components'</comment>
          <ProcedureCall id="_1pOJ"
                         procedure="check.collocation.checked.rename_slave_components"/>
          <IfSequence id="_1pOK"
                      test="&#34;$(rename_slave_components)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pOL"
                           procedure="do_click.collocation.rename_slave_components"/>
          </IfSequence>
          <ProcedureCall id="_1pOM"
                         procedure="check.collocation.checked.rename_slave_components_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pOm" name="spectral_unmixing">
        <Procedure id="_1pOx" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1pOy">
            <ProcedureCall id="_1pOz"
                           procedure="utility.spectral_unmixing.output_format_spectral_unmixing">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pO+" maxerror="0">
              <TryStep id="_1pO-">
                <ProcedureCall id="_1pP0"
                               procedure="utility.spectral_unmixing.output_format_spectral_unmixing">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pP1"
                               maxerror="0">
                  <ProcedureCall id="_1pP2" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pP3" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1pP4"
                         procedure="check.spectral_unmixing.checked.save_as"/>
          <IfSequence id="_1pP5" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pP6"
                           procedure="do_click.spectral_unmixing.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pP7"
                         procedure="check.spectral_unmixing.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pP8" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pP9"
                         procedure="check.spectral_unmixing.checked.open_in_snap"/>
          <IfSequence id="_1pPA"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXb"
                           procedure="check.spectral_unmixing.enabled.open_in_snap"/>
            <IfSequence id="_1qXc"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXd" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXe"
                             procedure="select.spectral_unmixing.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pPB"
                           procedure="do_click.spectral_unmixing.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pPC"
                         procedure="check.spectral_unmixing.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pQy" name="compute_error_bands">
          <comment>@teststep Check-in checkbox 'Compute error bands'</comment>
          <ProcedureCall id="_1pQz"
                         procedure="check.spectral_unmixing.checked.compute_error_bands"/>
          <IfSequence id="_1pQ+"
                      test="&#34;$(compute_error_bands)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pR1"
                           procedure="do_click.spectral_unmixing.compute_error_bands"/>
          </IfSequence>
          <ProcedureCall id="_1pR0"
                         procedure="check.spectral_unmixing.checked.compute_error_bands_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pRo" name="unmixing_model_name">
          <variable name="unmixing_model_name"/>
          <variable name="example">Unconstrained LSU; Fully Constrained LSU;Constrained LSU</variable>
          <TryStep id="_1pRq">
            <ProcedureCall id="_1pRp"
                           procedure="utility.spectral_unmixing.unmixing_model_name_spectral_unmixing">
              <variable name="unmixing_model_name">$(unmixing_model_name)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pRr" maxerror="0">
              <TryStep id="_1pRs">
                <ProcedureCall id="_1pRw"
                               procedure="utility.spectral_unmixing.unmixing_model_name_spectral_unmixing">
                  <variable name="unmixing_model_name">$(unmixing_model_name)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pRu"
                               maxerror="0">
                  <ProcedureCall id="_1pRv" procedure="run-log.logError">
                    <variable name="message">$(unmixing_model_name) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
      <Package id="_1pS1" name="ndvi_processor">
        <Procedure id="_1pS4" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.tabbed_tab" event="MOUSE_MPRC"
                          id="_1pV-" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pW0" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1pW1">
            <ProcedureCall id="_1pW2"
                           procedure="utility.ndvi.output_format_ndvi_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pW3" maxerror="0">
              <TryStep id="_1pW4">
                <ProcedureCall id="_1pWJ"
                               procedure="utility.ndvi.output_format_ndvi_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pW6"
                               maxerror="0">
                  <ProcedureCall id="_1pW7" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pW8" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1pW9"
                         procedure="check.ndvi_processor.checked.save_as"/>
          <IfSequence id="_1pWA" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pWB"
                           procedure="do_click.ndvi_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pWC"
                         procedure="check.ndvi_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pWD" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pWE"
                         procedure="check.ndvi_processor.checked.open_in_snap"/>
          <IfSequence id="_1pWF"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXj"
                           procedure="check.ndvi_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qXk"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXl" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXm"
                             procedure="select.ndvi_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pWG"
                           procedure="do_click.ndvi_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pWH"
                         procedure="check.ndvi_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pWb" name="red_source_band">
          <variable name="red_source_band"/>
          <TryStep id="_1pWf">
            <ProcedureCall id="_1pWm"
                           procedure="utility.ndvi.red_source_band_ndvi_processor">
              <variable name="red_source_band">$(red_source_band)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pWh" maxerror="0">
              <TryStep id="_1pWi">
                <ProcedureCall id="_1pWn"
                               procedure="utility.ndvi.red_source_band_ndvi_processor">
                  <variable name="red_source_band">$(red_source_band)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pWk"
                               maxerror="0">
                  <ProcedureCall id="_1pWl" procedure="run-log.logError">
                    <variable name="message">$(red_source_band) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pWd" name="nir_source_band">
          <variable name="nir_source_band"/>
          <TryStep id="_1pWo">
            <ProcedureCall id="_1pWp"
                           procedure="utility.ndvi.nir_source_band_ndvi_processor">
              <variable name="nir_source_band">$(nir_source_band)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pWq" maxerror="0">
              <TryStep id="_1pWr">
                <ProcedureCall id="_1pWv"
                               procedure="utility.ndvi.nir_source_band_ndvi_processor">
                  <variable name="nir_source_band">$(nir_source_band)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pWt"
                               maxerror="0">
                  <ProcedureCall id="_1pWu" procedure="run-log.logError">
                    <variable name="message">$(nir_source_band) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
      <Package id="_1pW-" name="reprojection">
        <Procedure id="_1pX2" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Reprojection Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.tabbed.tab"
                          event="MOUSE_MPRC" id="_1pXT" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pX4" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1pX5">
            <ProcedureCall id="_1pX6"
                           procedure="utility.reprojection.output_format_reproj">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pX7" maxerror="0">
              <TryStep id="_1pX8">
                <ProcedureCall id="_1pXR"
                               procedure="utility.reprojection.output_format_reproj">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pXA"
                               maxerror="0">
                  <ProcedureCall id="_1pXB" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pXC" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1pXD"
                         procedure="check.reprojection.checked.save_as"/>
          <IfSequence id="_1pXE" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pXF"
                           procedure="do_click.reprojection.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pXG"
                         procedure="check.reprojection.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pXH" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pXI"
                         procedure="check.reprojection.checked.open_in_snap"/>
          <IfSequence id="_1pXJ"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXr"
                           procedure="check.reprojection.enabled.open_in_snap"/>
            <IfSequence id="_1qXs"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXt" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXu"
                             procedure="select.reprojection.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pXK"
                           procedure="do_click.reprojection.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pXL"
                         procedure="check.reprojection.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pbj" name="projection">
          <variable name="projection"/>
          <comment>@teststep Select projection</comment>
          <TryStep id="_1pev">
            <ProcedureCall id="_1pew"
                           procedure="utility.reprojection.projection">
              <variable name="projection">$(projection)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pex" maxerror="0">
              <TryStep id="_1pey">
                <ProcedureCall id="_1pfH"
                               procedure="utility.reprojection.projection">
                  <variable name="projection">$(projection)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pe+"
                               maxerror="0">
                  <ProcedureCall id="_1pe-" procedure="run-log.logError">
                    <variable name="message">$(projection) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pdJ" name="geodetic_datum">
          <variable name="geodetic_datum"/>
          <comment>@teststep Select geodetic datum</comment>
          <ProcedureCall id="_1pfO"
                         procedure="check.reprojection.enabled.geodetic_datum"/>
          <IfSequence id="_1pfP"
                      test="&#34;$(geodetic_datum)&#34;==&#34;true&#34;">
            <TryStep id="_1pf0">
              <ProcedureCall id="_1pfJ"
                             procedure="utility.reprojection.datum">
                <variable name="geodetic_datum">$(geodetic_datum)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1pf2"
                             maxerror="0">
                <TryStep id="_1pf3">
                  <ProcedureCall id="_1pfK"
                                 procedure="utility.reprojection.datum">
                    <variable name="geodetic_datum">$(geodetic_datum)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1pf5"
                                 maxerror="0">
                    <ProcedureCall id="_1pf6" procedure="run-log.logError">
                      <variable name="message">$(geodetic_datum) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </IfSequence>
        </Procedure>
        <Procedure id="_1pXe" name="resampling_method">
          <variable name="resampling_method"/>
          <variable name="example">Nearest; Bicubic; Bilinear</variable>
          <comment>@teststep Select resampling method</comment>
          <TryStep id="_1pf7">
            <ProcedureCall id="_1pfM"
                           procedure="utility.reprojection.resampling">
              <variable name="resampling_method">$(resampling_method)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pf9" maxerror="0">
              <TryStep id="_1pfA">
                <ProcedureCall id="_1pfN"
                               procedure="utility.reprojection.resampling">
                  <variable name="resampling_method">$(resampling_method)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pfC"
                               maxerror="0">
                  <ProcedureCall id="_1pfD" procedure="run-log.logError">
                    <variable name="message">$(resampling_method) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pZL" name="preserve_resolution">
          <comment>@teststep Check-in checkbox 'Preserve resolution'.</comment>
          <ProcedureCall id="_1pfX"
                         procedure="check.reprojection.checked.preserve_resolution"/>
          <IfSequence id="_1pfU"
                      test="&#34;$(preserve_resolution)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pfV"
                           procedure="do_click.reprojection.preserve_resolution"/>
          </IfSequence>
          <ProcedureCall id="_1pfY"
                         procedure="check.reprojection.checked.preserve_resolution_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pZM" name="reproject_tie_point_grids">
          <comment>@teststep Check-in checkbox 'Reproject tie-point grids'.</comment>
          <ProcedureCall id="_1pfZ"
                         procedure="check.reprojection.checked.reproject_tie_point_grids"/>
          <IfSequence id="_1pfd"
                      test="&#34;$(reproject_tie_point_grids)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pfe"
                           procedure="do_click.reprojection.reproject_tie_point_grids"/>
          </IfSequence>
          <ProcedureCall id="_1pfa"
                         procedure="check.reprojection.checked.reproject_tie_point_grids_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pZJ" name="add_delta_lat_lon_bands">
          <comment>@teststep Check-in checkbox 'Add delta lat/lon bands'.</comment>
          <ProcedureCall id="_1pfb"
                         procedure="check.reprojection.checked.add_delta_lat_lon_bands"/>
          <IfSequence id="_1pff"
                      test="&#34;$(add_delta_lat_lon_bands)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pfg"
                           procedure="do_click.reprojection.add_delta_lat_lon_bands"/>
          </IfSequence>
          <ProcedureCall id="_1pfc"
                         procedure="check.reprojection.checked.add_delta_lat_lon_bands_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pfw" name="mosaicing">
        <Procedure id="_1pfx" name="tab">
          <variable name="tab"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.tabbed.tab"
                          event="MOUSE_MPRC" id="_1pVo" modifiers="16"/>
        </Procedure>
        <Package id="_1phq" name="io_parameters">
          <Procedure id="_1pfz" name="output_format">
            <variable name="output_format"/>
            <comment>@teststep Select output format</comment>
            <TryStep id="_1pf+">
              <ProcedureCall id="_1piH"
                             procedure="utility.mosaicing.output_format_mosaic">
                <variable name="output_format_name">$(output_format)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1pg0"
                             maxerror="0">
                <TryStep id="_1pg1">
                  <ProcedureCall id="_1piI"
                                 procedure="utility.mosaicing.output_format_mosaic">
                    <variable name="output_format_name">$(output_format)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1pg3"
                                 maxerror="0">
                    <ProcedureCall id="_1pg4" procedure="run-log.logError">
                      <variable name="message">$(output_format) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pg5" name="save_as">
            <comment>@teststep Check-in checkbox 'Save as'</comment>
            <ProcedureCall id="_1pg6"
                           procedure="check.mosaicing.checked.io_parameters.save_as"/>
            <IfSequence id="_1pg7"
                        test="&#34;$(save_as)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pht"
                             procedure="check.mosaicing.enabled.io_parameters.save_as"/>
              <IfSequence id="_1phu"
                          test="&#34;$(save_as_enabled)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1pg8"
                               procedure="do_click.mosaicing.io_parameters.save_as"/>
                <ElseSequence id="_1phv">
                  <ProcedureCall id="_1phw" procedure="run-log.logError">
                    <variable name="message">Save As Checkbox is disabled</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1piW"
                           procedure="check.mosaicing.checked.io_parameters.save_as_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pgA" name="open_in_snap">
            <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
            <ProcedureCall id="_1piT"
                           procedure="check.mosaicing.checked.io_parameters.open_in_snap"/>
            <IfSequence id="_1pgC"
                        test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1phx"
                             procedure="check.mosaicing.enabled.io_parameters.open_in_snap"/>
              <IfSequence id="_1phy"
                          test="&#34;$(open_in_snap_en)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1piU"
                               procedure="do_click.mosaicing.io_parameters.open_in_snap"/>
                <ElseSequence id="_1ph+">
                  <ProcedureCall id="_1piJ"
                                 procedure="daten_format.beam_dimap"/>
                  <ProcedureCall id="_1pi0"
                                 procedure="select.mosaicing.io_parameters.output_format">
                    <variable name="output_format">$(beam_dimap)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_1piV"
                                 procedure="do_click.mosaicing.io_parameters.open_in_snap"/>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1piX"
                           procedure="check.mosaicing.checked.io_parameters.open_in_snap_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1piK" name="update_target_product">
            <comment>@teststep Check-in checkbox 'Update target product'</comment>
            <ProcedureCall id="_1piL"
                           procedure="check.mosaicing.checked.io_parameters.update_target_product"/>
            <IfSequence id="_1piM"
                        test="&#34;$(update_target_product)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1piP"
                             procedure="do_click.mosaicing.io_parameters.update_target_product"/>
            </IfSequence>
            <ProcedureCall id="_1piY"
                           procedure="check.mosaicing.checked.io_parameters.update_target_product_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1phr" name="map_definition">
          <Procedure id="_1pjA" name="display_source_products">
            <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
            <ProcedureCall id="_1pjB"
                           procedure="check.mosaicing.checked.map_definition.display_source_products"/>
            <IfSequence id="_1pjC"
                        test="&#34;$(display_source_products)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pjF"
                             procedure="do_click.mosaicing.map_definition.display_source_products_checkbox"/>
            </IfSequence>
            <ProcedureCall id="_1pjK"
                           procedure="check.mosaicing.checked.map_definition.display_source_products_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pgF" name="projection">
            <variable name="projection"/>
            <comment>@teststep Select projection</comment>
            <TryStep id="_1pgG">
              <ProcedureCall id="_1pgH"
                             procedure="utility.mosaicing.projection">
                <variable name="projection">$(projection)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1pgI"
                             maxerror="0">
                <TryStep id="_1pgJ">
                  <ProcedureCall id="_1pjQ"
                                 procedure="utility.mosaicing.projection">
                    <variable name="projection">$(projection)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1pgL"
                                 maxerror="0">
                    <ProcedureCall id="_1pgM" procedure="run-log.logError">
                      <variable name="message">$(projection) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pgN" name="geodetic_datum">
            <variable name="geodetic_datum"/>
            <comment>@teststep Select geodetic datum</comment>
            <ProcedureCall id="_1pgO"
                           procedure="check.mosaicing.enabled.map_definition.geodetic_datum"/>
            <IfSequence id="_1pgP"
                        test="&#34;$(geodetic_datum_enabled)&#34;==&#34;true&#34;">
              <TryStep id="_1pgQ">
                <ProcedureCall id="_1pgR" procedure="utility.mosaicing.datum">
                  <variable name="geodetic_datum">$(geodetic_datum)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pgS"
                               maxerror="0">
                  <TryStep id="_1pgT">
                    <ProcedureCall id="_1pjR"
                                   procedure="utility.mosaicing.datum">
                      <variable name="geodetic_datum">$(geodetic_datum)</variable>
                    </ProcedureCall>
                    <CatchSequence exception="TestException" id="_1pgV"
                                   maxerror="0">
                      <ProcedureCall id="_1pgW" procedure="run-log.logError">
                        <variable name="message">$(geodetic_datum) can not be selected</variable>
                        <variable name="withScreenshots">true</variable>
                      </ProcedureCall>
                    </CatchSequence>
                  </TryStep>
                </CatchSequence>
              </TryStep>
            </IfSequence>
          </Procedure>
          <Procedure id="_1q9F" name="elevation_model">
            <variable name="elevation_model"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMosaicing.elevationModelName"
                            event="MOUSE_MPRC" id="_1prU" modifiers="16"
                            x="143" y="9"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMosaicing.listInvokerName:_elevationModelName.elevation_model"
                            event="MOUSE_MPRC" id="_1prV" modifiers="16"/>
          </Procedure>
        </Package>
        <Package id="_1phs" name="variables_conditions"/>
      </Package>
      <Package id="_1q9G" name="flh_mci_processor">
        <Procedure id="_1q9H" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.tabbed.tab"
                          event="MOUSE_MPRC" id="_1q9r" modifiers="16"/>
        </Procedure>
        <Procedure id="_1q9J" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1q9K">
            <ProcedureCall id="_1qAX"
                           procedure="utility.flh_mci.output_format_flh_mci_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1q9M" maxerror="0">
              <TryStep id="_1q9N">
                <ProcedureCall id="_1qAY"
                               procedure="utility.flh_mci.output_format_flh_mci_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1q9P"
                               maxerror="0">
                  <ProcedureCall id="_1q9Q" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1q9R" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1q9S"
                         procedure="check.flh_mci_processor.checked.save_as"/>
          <IfSequence id="_1q9T" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1q9U"
                           procedure="do_click.flh_mci_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1q9V"
                         procedure="check.flh_mci_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1q9W" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1q9X"
                         procedure="check.flh_mci_processor.checked.open_in_snap"/>
          <IfSequence id="_1q9Y"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qY1"
                           procedure="check.flh_mci_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qY2"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qY3" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qY4"
                             procedure="select.flh_mci_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qAZ"
                           procedure="do_click.flh_mci_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1q9a"
                         procedure="check.flh_mci_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qAa" name="generate_slope_band">
          <comment>@teststep Check-in checkbox 'Generate slope band'</comment>
          <ProcedureCall id="_1qAb"
                         procedure="check.flh_mci_processor.checked.generate_slope_band"/>
          <IfSequence id="_1qAc"
                      test="&#34;$(generate_slope_band)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qAf"
                           procedure="do_click.flh_mci_processor.generate_slope_band"/>
          </IfSequence>
          <ProcedureCall id="_1qAe"
                         procedure="check.flh_mci_processor.checked.generate_slope_band_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qBs" name="preset">
          <variable name="preset"/>
          <TryStep id="_1qC7">
            <ProcedureCall id="_1qCK" procedure="utility.flh_mci.preset">
              <variable name="preset">$(preset)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qC9" maxerror="0">
              <TryStep id="_1qCA">
                <ProcedureCall id="_1qCL" procedure="utility.flh_mci.preset">
                  <variable name="preset">$(preset)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qCC"
                               maxerror="0">
                  <ProcedureCall id="_1qCD" procedure="run-log.logError">
                    <variable name="message">Preset $(preset) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
      <Package id="_1qCM" name="meris_radiometric_correction">
        <Procedure id="_1qCN" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1psM" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qCP" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1qCQ">
            <ProcedureCall id="_1qDW"
                           procedure="utility.meris_radiometric_correction.output_format_meris_radiometric_correction">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qCS" maxerror="0">
              <TryStep id="_1qCT">
                <ProcedureCall id="_1qDX"
                               procedure="utility.meris_radiometric_correction.output_format_meris_radiometric_correction">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qCV"
                               maxerror="0">
                  <ProcedureCall id="_1qCW" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qCX" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qCY"
                         procedure="check.meris_radiometric_correction.checked.save_as"/>
          <IfSequence id="_1qCZ" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJc"
                           procedure="do_click.meris_radiometric_correction.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qJ0"
                         procedure="check.meris_radiometric_correction.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qCc" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qJ1"
                         procedure="check.meris_radiometric_correction.checked.open_in_snap"/>
          <IfSequence id="_1qCe"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qY5"
                           procedure="check.meris_radiometric_correction.enabled.open_in_snap"/>
            <IfSequence id="_1qY6"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qY7" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qY8"
                             procedure="select.meris_radiometric_correction.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qJb"
                           procedure="do_click.meris_radiometric_correction.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qJ2"
                         procedure="check.meris_radiometric_correction.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qJP" name="reprocessing_version">
          <variable name="reprocessing_version"/>
          <comment>@teststep Select reprocessing version.</comment>
          <TryStep id="_1qJQ">
            <ProcedureCall id="_1qJZ"
                           procedure="utility.meris_radiometric_correction.reprocessing_version">
              <variable name="reprocessing_version">$(reprocessing_version)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qJS" maxerror="0">
              <TryStep id="_1qJT">
                <ProcedureCall id="_1qJa"
                               procedure="utility.meris_radiometric_correction.reprocessing_version">
                  <variable name="reprocessing_version">$(reprocessing_version)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qJV"
                               maxerror="0">
                  <ProcedureCall id="_1qJW" procedure="run-log.logError">
                    <variable name="message">$(reprocessing_version) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qJ3" name="perform_calibration">
          <comment>@teststep Check-in checkbox 'Perform calibration'.</comment>
          <ProcedureCall id="_1qJ4"
                         procedure="check.meris_radiometric_correction.checked.perform_calibration"/>
          <IfSequence id="_1qJ5"
                      test="&#34;$(perform_calibration)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJd"
                           procedure="do_click.meris_radiometric_correction.perform_calibration"/>
          </IfSequence>
          <ProcedureCall id="_1qJ7"
                         procedure="check.meris_radiometric_correction.checked.perform_calibration_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qJ8" name="perform_smile_effect">
          <comment>@teststep Check-in checkbox 'Perform smile-effect correction'.</comment>
          <ProcedureCall id="_1qJ9"
                         procedure="check.meris_radiometric_correction.checked.perform_smile_effect"/>
          <IfSequence id="_1qJA"
                      test="&#34;$(perform_smile_effect)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJe"
                           procedure="do_click.meris_radiometric_correction.perform_smile_effect"/>
          </IfSequence>
          <ProcedureCall id="_1qJC"
                         procedure="check.meris_radiometric_correction.checked.perform_smile_effect_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qJD" name="perform_equalisation">
          <comment>@teststep Check-in checkbox 'Perform equalisation'.</comment>
          <ProcedureCall id="_1qJE"
                         procedure="check.meris_radiometric_correction.checked.perform_equalisation"/>
          <IfSequence id="_1qJF"
                      test="&#34;$(perform_equalization)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJf"
                           procedure="do_click.meris_radiometric_correction.perform_equalization"/>
          </IfSequence>
          <ProcedureCall id="_1qJH"
                         procedure="check.meris_radiometric_correction.checked.perform_equalisation_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qJI" name="perform_rad_to_refl">
          <comment>@teststep Check-in checkbox 'Perform radiance to reflectance'</comment>
          <ProcedureCall id="_1qJJ"
                         procedure="check.meris_radiometric_correction.checked.perform_rad_to_refl"/>
          <IfSequence id="_1qJK"
                      test="&#34;$(perform_rad_to_refl)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJg"
                           procedure="do_click.meris_radiometric_correction.perform_rad_to_refl"/>
          </IfSequence>
          <ProcedureCall id="_1qJM"
                         procedure="check.meris_radiometric_correction.checked.perform_rad_to_refl_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qLR" name="meris_cloud_probability">
        <Procedure id="_1qMp" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1qMq">
            <ProcedureCall id="_1qPw"
                           procedure="utility.meris_cloud_probability.output_format_meris_cloud_probability">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qMs" maxerror="0">
              <TryStep id="_1qMt">
                <ProcedureCall id="_1qPx"
                               procedure="utility.meris_cloud_probability.output_format_meris_cloud_probability">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qMv"
                               maxerror="0">
                  <ProcedureCall id="_1qMw" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qMx" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qMy"
                         procedure="check.meris_cloud_probability.checked.save_as"/>
          <IfSequence id="_1qMz" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qM+"
                           procedure="do_click.meris_cloud_probability.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qM-"
                         procedure="check.meris_cloud_probability.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qN0" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qN1"
                         procedure="check.meris_cloud_probability.checked.open_in_snap"/>
          <IfSequence id="_1qN2"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qYH"
                           procedure="check.meris_cloud_probability.enabled.open_in_snap"/>
            <IfSequence id="_1qYI"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qYJ" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qYK"
                             procedure="select.meris_cloud_probability.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qN3"
                           procedure="do_click.meris_cloud_probability.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qN4"
                         procedure="check.meris_cloud_probability.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qN9" name="smac">
        <Procedure id="_1qPz" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1pvk" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qP-" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1qQ0">
            <ProcedureCall id="_1qQ1"
                           procedure="utility.smac.output_format_smac">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qQ2" maxerror="0">
              <TryStep id="_1qQ3">
                <ProcedureCall id="_1qRW"
                               procedure="utility.smac.output_format_smac">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qQ5"
                               maxerror="0">
                  <ProcedureCall id="_1qQ6" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qQ7" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qQ8" procedure="check.smac.checked.save_as"/>
          <IfSequence id="_1qQ9" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qQA" procedure="do_click.smac.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qQB"
                         procedure="check.smac.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qQC" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qQD"
                         procedure="check.smac.checked.open_in_snap"/>
          <IfSequence id="_1qQE"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qSs"
                           procedure="check.smac.enabled.open_in_snap"/>
            <IfSequence id="_1qSt"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qSw" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qSx" procedure="select.smac.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qQF" procedure="do_click.smac.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qQG"
                         procedure="check.smac.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qRX" name="use_meris_ecmwf">
          <comment>@teststep Check-in checkbox 'Use MERIS ECMWF data'</comment>
          <ProcedureCall id="_1qRY"
                         procedure="check.smac.checked.use_meris_ecmwf"/>
          <IfSequence id="_1qRZ"
                      test="&#34;$(use_meris_ecmwf)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qRa"
                           procedure="do_click.smac.use_meris_ecmwf"/>
          </IfSequence>
          <ProcedureCall id="_1qRb"
                         procedure="check.smac.checked.use_meris_ecmwf_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qRc" name="aerosol_type">
          <variable name="aerosol_type"/>
          <comment>@teststep Selected aerosol type.</comment>
          <TryStep id="_1qRj">
            <ProcedureCall id="_1qRk" procedure="utility.smac.aerosol_type">
              <variable name="aerosol_type">$(aerosol_type)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qRl" maxerror="0">
              <TryStep id="_1qRm">
                <ProcedureCall id="_1qRq"
                               procedure="utility.smac.aerosol_type">
                  <variable name="aerosol_type">$(aerosol_type)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qRo"
                               maxerror="0">
                  <ProcedureCall id="_1qRp" procedure="run-log.logError">
                    <variable name="message">$(aerosol_type) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qSN" name="all_bands">
          <variable name="band"/>
          <comment>@teststep Selected all bands.</comment>
          <BasicSequence id="_1pwn" name="select_all_bands">
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_MPRC" id="_1pwo" modifiers="16"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1pwp" keychar="65535"
                          keycode="17" modifiers="2"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PTR" id="_1pwq" keychar="1" keycode="65"
                          modifiers="2"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_RELEASED" id="_1pwr" keychar="65535"
                          keycode="17" modifiers="0"/>
          </BasicSequence>
        </Procedure>
        <Procedure id="_1qSO" name="three_bands">
          <variable name="band1"/>
          <variable name="band2"/>
          <variable name="band3"/>
          <comment>@teststep Selected 3 bands.</comment>
          <BasicSequence id="_1pxr" name="select_3_bands">
            <SetGlobalStep id="_1qSy" varname="band">
              <default>$(band1)</default>
            </SetGlobalStep>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_PRESSED" id="_1pxt" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1pxu" keychar="65535"
                          keycode="17" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_RELEASED" id="_1pxv" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_CLICKED" id="_1pxw" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1pxx" keychar="65535"
                          keycode="17" modifiers="2"/>
            <SetGlobalStep id="_1qSz" varname="band">
              <default>$(band2)</default>
            </SetGlobalStep>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_PRESSED" id="_1pxy" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1pxz" keychar="65535"
                          keycode="17" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_RELEASED" id="_1px+" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_CLICKED" id="_1px-" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1py0" keychar="65535"
                          keycode="17" modifiers="2"/>
            <SetGlobalStep id="_1qS+" varname="band">
              <default>$(band3)</default>
            </SetGlobalStep>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_PRESSED" id="_1py1" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1py2" keychar="65535"
                          keycode="17" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_RELEASED" id="_1py3" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_CLICKED" id="_1py4" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1py5" keychar="65535"
                          keycode="17" modifiers="2"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_RELEASED" id="_1py6" keychar="65535"
                          keycode="17" modifiers="0"/>
          </BasicSequence>
        </Procedure>
        <Procedure id="_1qSg" name="one_band">
          <variable name="band"/>
          <comment>@teststep Selected one band.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                          event="MOUSE_MPRC" id="_1qSj" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qTv" name="aatsr_sst_processor">
        <Procedure id="_1qWB" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1qWe" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qWD" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1qWE">
            <ProcedureCall id="_1qXL"
                           procedure="utility.aatsr_sst_processor.output_format_aatsr_sst_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qWG" maxerror="0">
              <TryStep id="_1qWH">
                <ProcedureCall id="_1qXM"
                               procedure="utility.aatsr_sst_processor.output_format_aatsr_sst_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qWJ"
                               maxerror="0">
                  <ProcedureCall id="_1qWK" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qWL" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qWM"
                         procedure="check.aatsr_sst_processor.checked.save_as"/>
          <IfSequence id="_1qWN" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qWO"
                           procedure="do_click.aatsr_sst_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qWP"
                         procedure="check.aatsr_sst_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qWQ" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qWR"
                         procedure="check.aatsr_sst_processor.checked.open_in_snap"/>
          <IfSequence id="_1qWS"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXN"
                           procedure="check.aatsr_sst_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qXO"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXR" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXS"
                             procedure="select.aatsr_sst_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qWT"
                           procedure="do_click.aatsr_sst_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qWU"
                         procedure="check.aatsr_sst_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qV9" name="generate_nadir_view_sst">
          <comment>@teststep Check-in checkbox 'Generate nadir-view SST'.</comment>
          <ProcedureCall id="_1qYV"
                         procedure="check.aatsr_sst_processor.checked.generate_nadir_view_sst"/>
          <IfSequence id="_1qYW"
                      test="&#34;$(generate_nadir_view_sst)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qYX"
                           procedure="do_click.aatsr_sst_processor.generate_nadir_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1qYY"
                         procedure="check.aatsr_sst_processor.checked.generate_nadir_view_sst_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qUP" name="generate_dual_view_sst">
          <comment>@teststep Check-in checkbox 'Generate dual-view SST'.</comment>
          <ProcedureCall id="_1qYZ"
                         procedure="check.aatsr_sst_processor.checked.generate_dual_view_sst"/>
          <IfSequence id="_1qYa"
                      test="&#34;$(generate_dual_view_sst)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qYb"
                           procedure="do_click.aatsr_sst_processor.generate_dual_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1qYc"
                         procedure="check.aatsr_sst_processor.checked.generate_dual_view_sst_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qYP" name="dual_view_coefficient_file">
          <variable name="dual_view_file"/>
          <comment>@teststep Select dual-view coefficient file.</comment>
          <TryStep id="_1qYd">
            <ProcedureCall id="_1qYe"
                           procedure="utility.aatsr_sst_processor.dual_view_coefficient_file">
              <variable name="dual_view_file">$(dual_view_file)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qYf" maxerror="0">
              <TryStep id="_1qYg">
                <ProcedureCall id="_1qYk"
                               procedure="utility.aatsr_sst_processor.dual_view_coefficient_file">
                  <variable name="dual_view_file">$(dual_view_file)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qYi"
                               maxerror="0">
                  <ProcedureCall id="_1qYj" procedure="run-log.logError">
                    <variable name="message">Dual-view file $(dual_view_file) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qYS" name="nadir_view_coefficient_file">
          <variable name="nadir_view_file"/>
          <comment>@teststep Select nadir-view coefficient file.</comment>
          <TryStep id="_1qYl">
            <ProcedureCall id="_1qYm"
                           procedure="utility.aatsr_sst_processor.nadir_view_coefficient_file">
              <variable name="nadir_view_file">$(nadir_view_file)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qYn" maxerror="0">
              <TryStep id="_1qYo">
                <ProcedureCall id="_1qYs"
                               procedure="utility.aatsr_sst_processor.nadir_view_coefficient_file">
                  <variable name="nadir_view_file">$(nadir_view_file)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qYq"
                               maxerror="0">
                  <ProcedureCall id="_1qYr" procedure="run-log.logError">
                    <variable name="message">Nadir-view file $(nadir_view_file) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
      <Package id="_1q9O" name="principle_component_analysis">
        <Procedure id="_1qaL" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1qao" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qaN" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format.</comment>
          <TryStep id="_1qaO">
            <ProcedureCall id="_1qaP"
                           procedure="utility.principle_component_analysis.output_format_principle_component_analysis">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qaQ" maxerror="0">
              <TryStep id="_1qaR">
                <ProcedureCall id="_1qcM"
                               procedure="utility.principle_component_analysis.output_format_principle_component_analysis">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qaT"
                               maxerror="0">
                  <ProcedureCall id="_1qaU" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qaV" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qaW"
                         procedure="check.principle_component_analysis.checked.save_as"/>
          <IfSequence id="_1qaX" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qaY"
                           procedure="do_click.principal_component_analysis.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qaZ"
                         procedure="check.principle_component_analysis.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qaa" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qab"
                         procedure="check.principle_component_analysis.checked.open_in_snap"/>
          <IfSequence id="_1qac"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qad"
                           procedure="check.principle_component_analysis.enabled.open_in_snap"/>
            <IfSequence id="_1qae"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qaf" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qag"
                             procedure="select.principle_component_analysis.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qah"
                           procedure="do_click.principal_component_analysis.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qai"
                         procedure="check.principle_component_analysis.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qaj" name="remove_non_roi_pixels">
          <comment>@teststep Check-in checkbox 'Remove non-ROI pixels'.</comment>
          <ProcedureCall id="_1qak"
                         procedure="check.principle_component_analysis.checked.remove_non_roi_pixels"/>
          <IfSequence id="_1qal"
                      test="&#34;$(remove_non_roi_pixels)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qam"
                           procedure="do_click.principal_component_analysis.remove_non_roi_pixels"/>
          </IfSequence>
          <ProcedureCall id="_1qan"
                         procedure="check.principle_component_analysis.checked.remove_non_roi_pixels_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qcN" name="roi_mask_name">
          <variable name="roi_mask_name"/>
          <comment>@teststep Select ROI mask.</comment>
          <TryStep id="_1qcO">
            <ProcedureCall id="_1qcP"
                           procedure="utility.principle_component_analysis.roi_mask_name_principle_component_analysis">
              <variable name="roi_mask_name">$(roi_mask_name)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qcQ" maxerror="0">
              <TryStep id="_1qcR">
                <ProcedureCall id="_1qcV"
                               procedure="utility.principle_component_analysis.roi_mask_name_principle_component_analysis">
                  <variable name="roi_mask_name">$(roi_mask_name)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qcT"
                               maxerror="0">
                  <ProcedureCall id="_1qcU" procedure="run-log.logError">
                    <variable name="message">$(roi_mask_name) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qdC" name="source_band">
          <variable name="source_band"/>
          <comment>@teststep Select source band.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.sourceBandNames.source_band"
                          event="MOUSE_MPRC" id="_1qdD" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qdB" name="all_source_bands">
          <variable name="source_band"/>
          <comment>@teststep Select all source bands.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.sourceBandNames.source_band"
                          event="MOUSE_MPRC" id="_1qWx" modifiers="16"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_PRESSED" id="_1qWy" keychar="65535"
                        keycode="17" modifiers="2"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_PTR" id="_1qWz" keychar="1" keycode="65"
                        modifiers="2"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_RELEASED" id="_1qW+" keychar="65535"
                        keycode="17" modifiers="0"/>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1pMk" name="deselect">
      <Package id="_1pNW" name="collocation">
        <Procedure id="_1pNl" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1pNm"
                         procedure="check.collocation.checked.save_as"/>
          <IfSequence id="_1pNn" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pNo"
                           procedure="do_click.collocation.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pNp"
                         procedure="check.collocation.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pNv" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pNw"
                         procedure="check.collocation.checked.open_in_snap"/>
          <IfSequence id="_1pNx"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXX"
                           procedure="check.collocation.enabled.open_in_snap"/>
            <IfSequence id="_1qXY"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXZ" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXa"
                             procedure="select.collocation.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pNy"
                           procedure="do_click.collocation.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pNz"
                         procedure="check.collocation.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pON" name="rename_master_components">
          <comment>@teststep Check-out checkbox 'Rename master components'</comment>
          <ProcedureCall id="_1pOO"
                         procedure="check.collocation.checked.rename_master_components"/>
          <IfSequence id="_1pOP"
                      test="&#34;$(rename_master_components)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pOQ"
                           procedure="do_click.collocation.rename_master_components"/>
          </IfSequence>
          <ProcedureCall id="_1pOR"
                         procedure="check.collocation.checked.rename_master_components_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pOS" name="rename_slave_components">
          <comment>@teststep Check-out checkbox 'Rename slave components'</comment>
          <ProcedureCall id="_1pOT"
                         procedure="check.collocation.checked.rename_slave_components"/>
          <IfSequence id="_1pOU"
                      test="&#34;$(rename_slave_components)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pOV"
                           procedure="do_click.collocation.rename_slave_components"/>
          </IfSequence>
          <ProcedureCall id="_1pOW"
                         procedure="check.collocation.checked.rename_slave_components_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pQf" name="spectral_unmixing">
        <Procedure id="_1pQo" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1pQp"
                         procedure="check.spectral_unmixing.checked.save_as"/>
          <IfSequence id="_1pQq" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pQr"
                           procedure="do_click.spectral_unmixing.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pQs"
                         procedure="check.spectral_unmixing.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pQt" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pQu"
                         procedure="check.spectral_unmixing.checked.open_in_snap"/>
          <IfSequence id="_1pQv"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXf"
                           procedure="check.spectral_unmixing.enabled.open_in_snap"/>
            <IfSequence id="_1qXg"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXh" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXi"
                             procedure="select.spectral_unmixing.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pQw"
                           procedure="do_click.spectral_unmixing.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pQx"
                         procedure="check.spectral_unmixing.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pR2" name="compute_error_bands">
          <comment>@teststep Check-out checkbox 'Compute error bands'</comment>
          <ProcedureCall id="_1pR3"
                         procedure="check.spectral_unmixing.checked.compute_error_bands"/>
          <IfSequence id="_1pR4"
                      test="&#34;$(compute_error_bands)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pR5"
                           procedure="do_click.spectral_unmixing.compute_error_bands"/>
          </IfSequence>
          <ProcedureCall id="_1pR6"
                         procedure="check.spectral_unmixing.checked.compute_error_bands_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pS2" name="ndvi_processor">
        <Procedure id="_1pWK" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1pWL"
                         procedure="check.ndvi_processor.checked.save_as"/>
          <IfSequence id="_1pWM" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pWN"
                           procedure="do_click.ndvi_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pWO"
                         procedure="check.ndvi_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pWP" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pWQ"
                         procedure="check.ndvi_processor.checked.open_in_snap"/>
          <IfSequence id="_1pWR"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXn"
                           procedure="check.ndvi_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qXo"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXp" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXq"
                             procedure="select.ndvi_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pWS"
                           procedure="do_click.ndvi_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pWT"
                         procedure="check.ndvi_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pX0" name="reprojection">
        <Procedure id="_1pXU" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1pXV"
                         procedure="check.reprojection.checked.save_as"/>
          <IfSequence id="_1pXW" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pXX"
                           procedure="do_click.reprojection.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pXY"
                         procedure="check.reprojection.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pXZ" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pXa"
                         procedure="check.reprojection.checked.open_in_snap"/>
          <IfSequence id="_1pXb"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXv"
                           procedure="check.reprojection.enabled.open_in_snap"/>
            <IfSequence id="_1qXw"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXx" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXy"
                             procedure="select.reprojection.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pXc"
                           procedure="do_click.reprojection.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pXd"
                         procedure="check.reprojection.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pfh" name="preserve_resolution">
          <comment>@teststep Check-out checkbox  'Preserve resolution'.</comment>
          <ProcedureCall id="_1pfi"
                         procedure="check.reprojection.checked.preserve_resolution"/>
          <IfSequence id="_1pfj"
                      test="&#34;$(preserve_resolution)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pfk"
                           procedure="do_click.reprojection.preserve_resolution"/>
          </IfSequence>
          <ProcedureCall id="_1pfl"
                         procedure="check.reprojection.checked.preserve_resolution_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pfm" name="reproject_tie_point_grids">
          <comment>@teststep Check-out checkbox 'Reproject tie-point grids'.</comment>
          <ProcedureCall id="_1pfn"
                         procedure="check.reprojection.checked.reproject_tie_point_grids"/>
          <IfSequence id="_1pfo"
                      test="&#34;$(reproject_tie_point_grids)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pfp"
                           procedure="do_click.reprojection.reproject_tie_point_grids"/>
          </IfSequence>
          <ProcedureCall id="_1pfq"
                         procedure="check.reprojection.checked.reproject_tie_point_grids_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pfr" name="add_delta_lat_lon_bands">
          <comment>@teststep Check-out checkbox 'Add delta lat/lon bands'.</comment>
          <ProcedureCall id="_1pfs"
                         procedure="check.reprojection.checked.add_delta_lat_lon_bands"/>
          <IfSequence id="_1pft"
                      test="&#34;$(add_delta_lat_lon_bands)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pfu"
                           procedure="do_click.reprojection.add_delta_lat_lon_bands"/>
          </IfSequence>
          <ProcedureCall id="_1pfv"
                         procedure="check.reprojection.checked.add_delta_lat_lon_bands_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1piZ" name="mosaicing">
        <Package id="_1pic" name="io_parameters">
          <Procedure id="_1pil" name="save_as">
            <comment>@teststep Check-out checkbox 'Save as'</comment>
            <ProcedureCall id="_1pim"
                           procedure="check.mosaicing.checked.io_parameters.save_as"/>
            <IfSequence id="_1pin"
                        test="&#34;$(save_as)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pio"
                             procedure="check.mosaicing.enabled.io_parameters.save_as"/>
              <IfSequence id="_1pip"
                          test="&#34;$(save_as_enabled)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1piq"
                               procedure="do_click.mosaicing.io_parameters.save_as"/>
                <ElseSequence id="_1pir">
                  <ProcedureCall id="_1pis" procedure="run-log.logError">
                    <variable name="message">Save As Checkbox is disabled</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1pit"
                           procedure="check.mosaicing.checked.io_parameters.save_as_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1piu" name="open_in_snap">
            <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
            <ProcedureCall id="_1piv"
                           procedure="check.mosaicing.checked.io_parameters.open_in_snap"/>
            <IfSequence id="_1piw"
                        test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pix"
                             procedure="check.mosaicing.enabled.io_parameters.open_in_snap"/>
              <IfSequence id="_1piy"
                          test="&#34;$(open_in_snap_en)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1piz"
                               procedure="do_click.mosaicing.io_parameters.open_in_snap"/>
                <ElseSequence id="_1pi+">
                  <ProcedureCall id="_1pi-"
                                 procedure="daten_format.beam_dimap"/>
                  <ProcedureCall id="_1pj0"
                                 procedure="select.mosaicing.io_parameters.output_format">
                    <variable name="output_format">$(beam_dimap)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_1pj1"
                                 procedure="do_click.mosaicing.io_parameters.open_in_snap"/>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1pj2"
                           procedure="check.mosaicing.checked.io_parameters.open_in_snap_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pj3" name="update_target_product">
            <comment>@teststep Check-out checkbox 'Update target product'</comment>
            <ProcedureCall id="_1pj4"
                           procedure="check.mosaicing.checked.io_parameters.update_target_product"/>
            <IfSequence id="_1pj5"
                        test="&#34;$(update_target_product)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pj6"
                             procedure="do_click.mosaicing.io_parameters.update_target_product"/>
            </IfSequence>
            <ProcedureCall id="_1pj7"
                           procedure="check.mosaicing.checked.io_parameters.update_target_product_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1pj8" name="map_definition">
          <Procedure id="_1pjL" name="display_source_products">
            <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
            <ProcedureCall id="_1pjM"
                           procedure="check.mosaicing.checked.map_definition.display_source_products"/>
            <IfSequence id="_1pjN"
                        test="&#34;$(display_source_products)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pjO"
                             procedure="do_click.mosaicing.map_definition.display_source_products_checkbox"/>
            </IfSequence>
            <ProcedureCall id="_1pjP"
                           procedure="check.mosaicing.checked.map_definition.display_source_products_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1pj9" name="variables_conditions"/>
      </Package>
      <Package id="_1q5w" name="edit_aggregator">
        <Procedure id="_1q5x" name="output_sums">
          <comment>@teststep Check-out checkbox 'output sums'.</comment>
          <ProcedureCall id="_1q5y"
                         procedure="check.edit_aggregator.checked.output_sums"/>
          <IfSequence id="_1q5z"
                      test="&#34;$(output_sums)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1q5+"
                           procedure="do_click.binning.edit_aggregator.output_sums"/>
          </IfSequence>
          <ProcedureCall id="_1q5-"
                         procedure="check.edit_aggregator.checked.output_sums_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1q60" name="output_counts">
          <comment>@teststep Check-out checkbox 'output counts'.</comment>
          <ProcedureCall id="_1q61"
                         procedure="check.edit_aggregator.checked.output_counts"/>
          <IfSequence id="_1q62"
                      test="&#34;$(output_counts)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1q63"
                           procedure="do_click.binning.edit_aggregator.output_counts"/>
          </IfSequence>
          <ProcedureCall id="_1q64"
                         procedure="check.edit_aggregator.checked.output_counts_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qAg" name="flh_mci_processor">
        <Procedure id="_1qAr" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qAs"
                         procedure="check.flh_mci_processor.checked.save_as"/>
          <IfSequence id="_1qAt" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qAu"
                           procedure="do_click.flh_mci_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qAv"
                         procedure="check.flh_mci_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qAw" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qAx"
                         procedure="check.flh_mci_processor.checked.open_in_snap"/>
          <IfSequence id="_1qAy"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXz"
                           procedure="check.flh_mci_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qX+"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qX-" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qY0"
                             procedure="select.flh_mci_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qAz"
                           procedure="do_click.flh_mci_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qA+"
                         procedure="check.flh_mci_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qA-" name="generate_slope_band">
          <comment>@teststep Check-out checkbox 'Generate slope band'</comment>
          <ProcedureCall id="_1qB0"
                         procedure="check.flh_mci_processor.checked.generate_slope_band"/>
          <IfSequence id="_1qB1"
                      test="&#34;$(generate_slope_band)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qB2"
                           procedure="do_click.flh_mci_processor.generate_slope_band"/>
          </IfSequence>
          <ProcedureCall id="_1qB3"
                         procedure="check.flh_mci_processor.checked.generate_slope_band_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qKF" name="meris_radiometric_correction">
        <Procedure id="_1qKQ" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qKR"
                         procedure="check.meris_radiometric_correction.checked.save_as"/>
          <IfSequence id="_1qKS" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qKT"
                           procedure="do_click.meris_radiometric_correction.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qKU"
                         procedure="check.meris_radiometric_correction.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKV" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qKW"
                         procedure="check.meris_radiometric_correction.checked.open_in_snap"/>
          <IfSequence id="_1qKX"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qY9"
                           procedure="check.meris_radiometric_correction.enabled.open_in_snap"/>
            <IfSequence id="_1qYA"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qYB" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qYC"
                             procedure="select.meris_radiometric_correction.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qKY"
                           procedure="do_click.meris_radiometric_correction.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qKZ"
                         procedure="check.meris_radiometric_correction.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKi" name="perform_calibration">
          <comment>@teststep Check-out checkbox 'Perform calibration'.</comment>
          <ProcedureCall id="_1qKj"
                         procedure="check.meris_radiometric_correction.checked.perform_calibration"/>
          <IfSequence id="_1qKk"
                      test="&#34;$(perform_calibration)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qKl"
                           procedure="do_click.meris_radiometric_correction.perform_calibration"/>
          </IfSequence>
          <ProcedureCall id="_1qKm"
                         procedure="check.meris_radiometric_correction.checked.perform_calibration_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKn" name="perform_smile_effect">
          <comment>@teststep Check-out checkbox 'Perform smile-effect correction'.</comment>
          <ProcedureCall id="_1qKo"
                         procedure="check.meris_radiometric_correction.checked.perform_smile_effect"/>
          <IfSequence id="_1qKp"
                      test="&#34;$(perform_smile_effect)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qKq"
                           procedure="do_click.meris_radiometric_correction.perform_smile_effect"/>
          </IfSequence>
          <ProcedureCall id="_1qKr"
                         procedure="check.meris_radiometric_correction.checked.perform_smile_effect_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKs" name="perform_equalisation">
          <comment>@teststep Check-out checkbox 'Perform equalisation'.</comment>
          <ProcedureCall id="_1qKt"
                         procedure="check.meris_radiometric_correction.checked.perform_equalisation"/>
          <IfSequence id="_1qKu"
                      test="&#34;$(perform_equalization)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qKv"
                           procedure="do_click.meris_radiometric_correction.perform_equalization"/>
          </IfSequence>
          <ProcedureCall id="_1qKw"
                         procedure="check.meris_radiometric_correction.checked.perform_equalisation_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKx" name="perform_rad_to_refl">
          <comment>@teststep Check-out checkbox 'Perform radiance to reflectance'</comment>
          <ProcedureCall id="_1qKy"
                         procedure="check.meris_radiometric_correction.checked.perform_rad_to_refl"/>
          <IfSequence id="_1qKz"
                      test="&#34;$(perform_rad_to_refl)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qK+"
                           procedure="do_click.meris_radiometric_correction.perform_rad_to_refl"/>
          </IfSequence>
          <ProcedureCall id="_1qK-"
                         procedure="check.meris_radiometric_correction.checked.perform_rad_to_refl_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qN5" name="meris_cloud_probability">
        <Procedure id="_1qNE" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qNF"
                         procedure="check.meris_cloud_probability.checked.save_as"/>
          <IfSequence id="_1qNG" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qNH"
                           procedure="do_click.meris_cloud_probability.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qNI"
                         procedure="check.meris_cloud_probability.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qNJ" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qNK"
                         procedure="check.meris_cloud_probability.checked.open_in_snap"/>
          <IfSequence id="_1qNL"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qYD"
                           procedure="check.meris_cloud_probability.enabled.open_in_snap"/>
            <IfSequence id="_1qYE"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qYF" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qYG"
                             procedure="select.meris_cloud_probability.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qNM"
                           procedure="do_click.meris_cloud_probability.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qNN"
                         procedure="check.meris_cloud_probability.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qRr" name="smac">
        <Procedure id="_1qS0" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qS1" procedure="check.smac.checked.save_as"/>
          <IfSequence id="_1qS2" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qS3" procedure="do_click.smac.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qS4"
                         procedure="check.smac.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qS5" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qS6"
                         procedure="check.smac.checked.open_in_snap"/>
          <IfSequence id="_1qS7"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qYL"
                           procedure="check.smac.enabled.open_in_snap"/>
            <IfSequence id="_1qYM"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qYN" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qYO" procedure="select.smac.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qS8" procedure="do_click.smac.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qS9"
                         procedure="check.smac.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qSA" name="use_meris_ecmwf">
          <comment>@teststep Check-out checkbox 'Use MERIS ECMWF data'</comment>
          <ProcedureCall id="_1qSB"
                         procedure="check.smac.checked.use_meris_ecmwf"/>
          <IfSequence id="_1qSC"
                      test="&#34;$(use_meris_ecmwf)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qSD"
                           procedure="do_click.smac.use_meris_ecmwf"/>
          </IfSequence>
          <ProcedureCall id="_1qSE"
                         procedure="check.smac.checked.use_meris_ecmwf_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qYt" name="aatsr_sst_processor">
        <Procedure id="_1qZ2" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qZ3"
                         procedure="check.aatsr_sst_processor.checked.save_as"/>
          <IfSequence id="_1qZ4" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qZ5"
                           procedure="do_click.aatsr_sst_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qZ6"
                         procedure="check.aatsr_sst_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qZ7" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qZ8"
                         procedure="check.aatsr_sst_processor.checked.open_in_snap"/>
          <IfSequence id="_1qZ9"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qZA"
                           procedure="check.aatsr_sst_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qZB"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qZC" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qZD"
                             procedure="select.aatsr_sst_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qZE"
                           procedure="do_click.aatsr_sst_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qZF"
                         procedure="check.aatsr_sst_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qZG" name="generate_nadir_view_sst">
          <comment>@teststep Check-out checkbox 'Generate nadir-view SST'.</comment>
          <ProcedureCall id="_1qZH"
                         procedure="check.aatsr_sst_processor.checked.generate_nadir_view_sst"/>
          <IfSequence id="_1qZI"
                      test="&#34;$(generate_nadir_view_sst)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qZJ"
                           procedure="do_click.aatsr_sst_processor.generate_nadir_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1qZK"
                         procedure="check.aatsr_sst_processor.checked.generate_nadir_view_sst_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qZL" name="generate_dual_view_sst">
          <comment>@teststep Check-out checkbox 'Generate dual-view SST'.</comment>
          <ProcedureCall id="_1qZM"
                         procedure="check.aatsr_sst_processor.checked.generate_dual_view_sst"/>
          <IfSequence id="_1qZN"
                      test="&#34;$(generate_dual_view_sst)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qZO"
                           procedure="do_click.aatsr_sst_processor.generate_dual_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1qZP"
                         procedure="check.aatsr_sst_processor.checked.generate_dual_view_sst_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qcW" name="principle_component_analysis">
        <Procedure id="_1qch" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qci"
                         procedure="check.principle_component_analysis.checked.save_as"/>
          <IfSequence id="_1qcj" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qck"
                           procedure="do_click.principal_component_analysis.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qcl"
                         procedure="check.principle_component_analysis.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qcm" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qcn"
                         procedure="check.principle_component_analysis.checked.open_in_snap"/>
          <IfSequence id="_1qco"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qcp"
                           procedure="check.principle_component_analysis.enabled.open_in_snap"/>
            <IfSequence id="_1qcq"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qcr" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qcs"
                             procedure="select.principle_component_analysis.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qct"
                           procedure="do_click.principal_component_analysis.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qcu"
                         procedure="check.principle_component_analysis.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qd6" name="remove_non_roi_pixels">
          <comment>@teststep Check-out checkbox 'Remove non-ROI pixels'.</comment>
          <ProcedureCall id="_1qd7"
                         procedure="check.principle_component_analysis.checked.remove_non_roi_pixels"/>
          <IfSequence id="_1qd8"
                      test="&#34;$(remove_non_roi_pixels)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qd9"
                           procedure="do_click.principal_component_analysis.remove_non_roi_pixels"/>
          </IfSequence>
          <ProcedureCall id="_1qdA"
                         procedure="check.principle_component_analysis.checked.remove_non_roi_pixels_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1pNS" name="utility">
      <Package id="_1p+t" name="binning">
        <Procedure id="_1p+y" name="time_filter_method">
          <variable name="time_filter_method"/>
          <comment>@teststep Select time filter method.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogBinning.timeFilterMethod"
                          event="MOUSE_MPRC" id="_1p+z" modifiers="16" x="68"
                          y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogBinning.listInvokerName:_timeFilterMethod.time_filter_method"
                          event="MOUSE_MPRC" id="_1p++" modifiers="16"/>
        </Procedure>
        <Procedure id="_1q66" name="aggregator">
          <variable name="aggregator"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogEdit_Aggregator.comboSource_band_name:"
                          event="MOUSE_MPRC" id="_1q6H" modifiers="16" x="199"
                          y="5"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogEdit_Aggregator.listInvokerClass:_ComboBox.aggregator"
                          event="MOUSE_MPRC" id="_1q69" modifiers="16"/>
        </Procedure>
        <Procedure id="_1q6K" name="source_band_in_edit_aggregator">
          <variable name="band"/>
          <comment>@teststep Select source band</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogEdit_Aggregator.varName"
                          event="MOUSE_MPRC" id="_1q6L" modifiers="16" x="53"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogEdit_Aggregator.listInvokerName:_varName.band"
                          event="MOUSE_MPRC" id="_1q6M" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pi3" name="mosaicing">
        <Procedure id="_1pi4" name="output_format_mosaic">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.formatName"
                          event="MOUSE_MPRC" id="_1piG" modifiers="16" x="25"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1pW5" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pi7" name="projection">
          <variable name="projection"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.operationWrapper"
                          event="MOUSE_MPRC" id="_1phm" modifiers="16" x="119"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.listInvokerName:_operationWrapper.projection"
                          event="MOUSE_MPRC" id="_1phn" modifiers="16"/>
        </Procedure>
        <Procedure id="_1piA" name="datum">
          <variable name="geodetic_datum"/>
          <comment>World_Geodetic_System_1972</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.datum" event="MOUSE_MPRC"
                          id="_1pjS" modifiers="16" x="324" y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.listInvokerName:_datum.geodetic_datum"
                          event="MOUSE_MPRC" id="_1pjT" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pX1" name="reprojection">
        <Procedure id="_1pXM" name="output_format_reproj">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.formatName"
                          event="MOUSE_MPRC" id="_1pXP" modifiers="16" x="62"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.listInvokerName_output_format_name"
                          event="MOUSE_MPRC" id="_1pXQ" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pfE" name="projection">
          <variable name="projection"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.operationWrapper"
                          event="MOUSE_MPRC" id="_1pfF" modifiers="16" x="94"
                          y="4"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.listInvokerName:_operationWrapper.projection"
                          event="MOUSE_MPRC" id="_1pfG" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pfI" name="datum">
          <variable name="geodetic_datum"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.datum"
                          event="MOUSE_MPRC" id="_1peZ" modifiers="16" x="92"
                          y="15"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.listInvokerName:_datum.geodetic_datum"
                          event="MOUSE_MPRC" id="_1pea" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pfL" name="resampling">
          <variable name="resampling_method"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.resamplingName"
                          event="MOUSE_MPRC" id="_1pbT" modifiers="16" x="76"
                          y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.listInvokerName_resamplingName"
                          event="MOUSE_MPRC" id="_1pbU" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pWw" name="ndvi">
        <Procedure id="_1pS3" name="output_format_ndvi_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.formatName" event="MOUSE_MPRC"
                          id="_1pUV" modifiers="16" x="59" y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.listInvokerName_formatName"
                          event="MOUSE_MPRC" id="_1pUW" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pWI" name="red_source_band_ndvi_processor">
          <variable name="red_source_band"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.redSourceBand"
                          event="MOUSE_MPRC" id="_1pWz" modifiers="16" x="52"
                          y="15"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.listInvokerName_redSourceBand"
                          event="MOUSE_MPRC" id="_1pW+" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pWX" name="nir_source_band_ndvi_processor">
          <variable name="nir_source_band"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.nirSourceBand"
                          event="MOUSE_MPRC" id="_1pVO" modifiers="16" x="31"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.listInvokerName_nirSourceBand"
                          event="MOUSE_MPRC" id="_1pVP" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pWx" name="collocation">
        <Procedure id="_1pNT" name="output_format_collocation">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogCollocation2.formatName"
                          event="MOUSE_MPRC" id="_1pNU" modifiers="16" x="87"
                          y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogCollocation.listInvokerName_output_format_name"
                          event="MOUSE_MPRC" id="_1pNV" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pOg" name="resampling_type_collocation">
          <variable name="resampling_type"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogCollocation2.resamplingType"
                          event="MOUSE_MPRC" id="_1p8l" modifiers="16" x="34"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogCollocation.listInvokerName_resamplingType"
                          event="MOUSE_MPRC" id="_1p8m" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pWy" name="spectral_unmixing">
        <Procedure id="_1pPN" name="output_format_spectral_unmixing">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSpectral_Unmixing.formatName"
                          event="MOUSE_MPRC" id="_1pQd" modifiers="16" x="53"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSpectral_Unmixing.listInvokerName_formatName"
                          event="MOUSE_MPRC" id="_1pQe" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pR7" name="unmixing_model_name_spectral_unmixing">
          <variable name="unmixing_model_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSpectral_Unmixing.unmixingModelName"
                          event="MOUSE_MPRC" id="_1pRm" modifiers="16" x="40"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSpectral_Unmixing.listInvokerName_unmixingModelName"
                          event="MOUSE_MPRC" id="_1pRn" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qCH" name="flh_mci">
        <Procedure id="_1qAU" name="output_format_flh_mci_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.formatName"
                          event="MOUSE_MPRC" id="_1qAS" modifiers="16" x="67"
                          y="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1qAT" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qCE" name="preset">
          <variable name="preset"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.preset"
                          event="MOUSE_MPRC" id="_1qCI" modifiers="16" x="35"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.listInvokerName:_preset.preset"
                          event="MOUSE_MPRC" id="_1qCJ" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qCx" name="meris_radiometric_correction">
        <Procedure id="_1qDT"
                   name="output_format_meris_radiometric_correction">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.formatName"
                          event="MOUSE_MPRC" id="_1psv" modifiers="16" x="59"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1psw" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qJN" name="reprocessing_version">
          <variable name="reprocessing_version"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.reproVersion"
                          event="MOUSE_MPRC" id="_1qJX" modifiers="16" x="30"
                          y="6"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.listInvokerName:_reproVersion.reprocessing_version"
                          event="MOUSE_MPRC" id="_1qJY" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qOU" name="meris_cloud_probability">
        <Procedure id="_1qPt" name="output_format_meris_cloud_probability">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_Cloud_Probability_Processor2.formatName"
                          event="MOUSE_MPRC" id="_1qPi" modifiers="16" x="48"
                          y="7"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_Cloud_Probability_Processor2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1qPj" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qQj" name="smac">
        <Procedure id="_1qQm" name="output_format_smac">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.formatName"
                          event="MOUSE_MPRC" id="_1pvu" modifiers="16" x="49"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1pvv" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qRh" name="aerosol_type">
          <variable name="aerosol_type"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.aerosolType"
                          event="MOUSE_MPRC" id="_1pwC" modifiers="16" x="154"
                          y="17"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.listInvokerName_aerosol_type"
                          event="MOUSE_MPRC" id="_1pwD" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qTw" name="aatsr_sst_processor">
        <Procedure id="_1qXI" name="output_format_aatsr_sst_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.formatName"
                          event="MOUSE_MPRC" id="_1qWm" modifiers="16" x="77"
                          y="13"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1qWn" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qVL" name="dual_view_coefficient_file">
          <variable name="dual_view_file"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.dualCoefficientsFile"
                          event="MOUSE_MPRC" id="_1qWu" modifiers="16" x="202"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.listInvokerName:_dualCoefficientsFile.dual_view_file"
                          event="MOUSE_MPRC" id="_1qWv" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qUp" name="nadir_view_coefficient_file">
          <variable name="nadir_view_file"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.nadirCoefficientsFile"
                          event="MOUSE_MPRC" id="_1qW-" modifiers="16" x="99"
                          y="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.listInvokerName:_nadirCoefficientsFile.nadir_view_file"
                          event="MOUSE_MPRC" id="_1qX0" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qap" name="principle_component_analysis">
        <Procedure id="_1qas"
                   name="output_format_principle_component_analysis">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.formatName"
                          event="MOUSE_MPRC" id="_1qbM" modifiers="16" x="62"
                          y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1qbN" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qcA"
                   name="roi_mask_name_principle_component_analysis">
          <variable name="roi_mask_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.roiMaskName"
                          event="MOUSE_MPRC" id="_1qX8" modifiers="16" x="119"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.listInvokerName:_roiMaskName.roi_mask_name"
                          event="MOUSE_MPRC" id="_1qX7" modifiers="16"/>
        </Procedure>
      </Package>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <IfSequence id="_1op7" test="${qftest:windows}">
      <ElseifSequence id="_1op8" name="MAC?"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
      <ElseSequence id="_1op9"/>
    </IfSequence>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
