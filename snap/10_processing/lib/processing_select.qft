<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.11">
  <include>qfs.qft</include>
  <include>processing_main.qft</include>
  <dependency>processing_main.qft</dependency>
  <dependency>processing_do_click.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1pMk" name="deselect">
      <Package id="_1qYt" name="aatsr_sst_processor">
        <Procedure id="_1qZL" name="generate_dual_view_sst">
          <comment>@teststep Check-out checkbox 'Generate dual-view SST'.</comment>
          <ProcedureCall id="_1qZM"
                         procedure="check.aatsr_sst_processor.checked.generate_dual_view_sst"/>
          <IfSequence id="_1qZN"
                      test="&#34;$(generate_dual_view_sst)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qZO"
                           procedure="do_click.aatsr_sst_processor.generate_dual_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1qZP"
                         procedure="check.aatsr_sst_processor.checked.generate_dual_view_sst_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qZG" name="generate_nadir_view_sst">
          <comment>@teststep Check-out checkbox 'Generate nadir-view SST'.</comment>
          <ProcedureCall id="_1qZH"
                         procedure="check.aatsr_sst_processor.checked.generate_nadir_view_sst"/>
          <IfSequence id="_1qZI"
                      test="&#34;$(generate_nadir_view_sst)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qZJ"
                           procedure="do_click.aatsr_sst_processor.generate_nadir_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1qZK"
                         procedure="check.aatsr_sst_processor.checked.generate_nadir_view_sst_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qZ7" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qZ8"
                         procedure="check.aatsr_sst_processor.checked.open_in_snap"/>
          <IfSequence id="_1qZ9"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qZA"
                           procedure="check.aatsr_sst_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qZB"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qZC" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qZD"
                             procedure="select.aatsr_sst_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qZE"
                           procedure="do_click.aatsr_sst_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qZF"
                         procedure="check.aatsr_sst_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qZ2" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qZ3"
                         procedure="check.aatsr_sst_processor.checked.save_as"/>
          <IfSequence id="_1qZ4" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qZ5"
                           procedure="do_click.aatsr_sst_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qZ6"
                         procedure="check.aatsr_sst_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1saW" name="arc_sst_processor">
        <Procedure id="_1saf" name="generate_dual_view_sst">
          <comment>@teststep Check-out checkbox 'Generate dual-view SST'.</comment>
          <ProcedureCall id="_1sag"
                         procedure="check.arc_sst_processor.checked.generate_dual_view_sst"/>
          <IfSequence id="_1sah"
                      test="&#34;$(generate_dual_view_sst)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sai"
                           procedure="do_click.arc_sst_processor.generate_dual_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1saj"
                         procedure="check.arc_sst_processor.checked.generate_dual_view_sst_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sak" name="generate_nadir_view_sst">
          <comment>@teststep Check-out checkbox 'Generate nadir-view SST'.</comment>
          <ProcedureCall id="_1sal"
                         procedure="check.arc_sst_processor.checked.generate_nadir_view_sst"/>
          <IfSequence id="_1sam"
                      test="&#34;$(generate_nadir_view_sst)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1san"
                           procedure="do_click.arc_sst_processor.generate_nadir_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1sao"
                         procedure="check.arc_sst_processor.checked.generate_nadir_view_sst_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sax" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1say"
                         procedure="check.arc_sst_processor.checked.open_in_snap"/>
          <IfSequence id="_1saz"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sa+"
                           procedure="check.arc_sst_processor.enabled.open_in_snap"/>
            <IfSequence id="_1sa-"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sb0" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sb1"
                             procedure="select.arc_sst_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sb2"
                           procedure="do_click.arc_sst_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sb3"
                         procedure="check.arc_sst_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sbC" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1sbD"
                         procedure="check.arc_sst_processor.checked.save_as"/>
          <IfSequence id="_1sbE" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sbF"
                           procedure="do_click.arc_sst_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sbG"
                         procedure="check.arc_sst_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pNW" name="collocation">
        <Procedure id="_1pNv" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pNw"
                         procedure="check.collocation.checked.open_in_snap"/>
          <IfSequence id="_1pNx"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXX"
                           procedure="check.collocation.enabled.open_in_snap"/>
            <IfSequence id="_1qXY"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXZ" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXa"
                             procedure="select.collocation.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pNy"
                           procedure="do_click.collocation.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pNz"
                         procedure="check.collocation.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pON" name="rename_master_components">
          <comment>@teststep Check-out checkbox 'Rename master components'</comment>
          <ProcedureCall id="_1pOO"
                         procedure="check.collocation.checked.rename_master_components"/>
          <IfSequence id="_1pOP"
                      test="&#34;$(rename_master_components)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pOQ"
                           procedure="do_click.collocation.rename_master_components"/>
          </IfSequence>
          <ProcedureCall id="_1pOR"
                         procedure="check.collocation.checked.rename_master_components_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pOS" name="rename_slave_components">
          <comment>@teststep Check-out checkbox 'Rename slave components'</comment>
          <ProcedureCall id="_1pOT"
                         procedure="check.collocation.checked.rename_slave_components"/>
          <IfSequence id="_1pOU"
                      test="&#34;$(rename_slave_components)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pOV"
                           procedure="do_click.collocation.rename_slave_components"/>
          </IfSequence>
          <ProcedureCall id="_1pOW"
                         procedure="check.collocation.checked.rename_slave_components_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pNl" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1pNm"
                         procedure="check.collocation.checked.save_as"/>
          <IfSequence id="_1pNn" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pNo"
                           procedure="do_click.collocation.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pNp"
                         procedure="check.collocation.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1q5w" name="edit_aggregator">
        <Procedure id="_1q60" name="output_counts">
          <comment>@teststep Check-out checkbox 'output counts'.</comment>
          <ProcedureCall id="_1q61"
                         procedure="check.edit_aggregator.checked.output_counts"/>
          <IfSequence id="_1q62"
                      test="&#34;$(output_counts)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1q63"
                           procedure="do_click.binning.edit_aggregator.output_counts"/>
          </IfSequence>
          <ProcedureCall id="_1q64"
                         procedure="check.edit_aggregator.checked.output_counts_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1q5x" name="output_sums">
          <comment>@teststep Check-out checkbox 'output sums'.</comment>
          <ProcedureCall id="_1q5y"
                         procedure="check.edit_aggregator.checked.output_sums"/>
          <IfSequence id="_1q5z"
                      test="&#34;$(output_sums)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1q5+"
                           procedure="do_click.binning.edit_aggregator.output_sums"/>
          </IfSequence>
          <ProcedureCall id="_1q5-"
                         procedure="check.edit_aggregator.checked.output_sums_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qAg" name="flh_mci_processor">
        <Procedure id="_1qA-" name="generate_slope_band">
          <comment>@teststep Check-out checkbox 'Generate slope band'</comment>
          <ProcedureCall id="_1qB0"
                         procedure="check.flh_mci_processor.checked.generate_slope_band"/>
          <IfSequence id="_1qB1"
                      test="&#34;$(generate_slope_band)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qB2"
                           procedure="do_click.flh_mci_processor.generate_slope_band"/>
          </IfSequence>
          <ProcedureCall id="_1qB3"
                         procedure="check.flh_mci_processor.checked.generate_slope_band_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qAw" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qAx"
                         procedure="check.flh_mci_processor.checked.open_in_snap"/>
          <IfSequence id="_1qAy"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXz"
                           procedure="check.flh_mci_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qX+"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qX-" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qY0"
                             procedure="select.flh_mci_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qAz"
                           procedure="do_click.flh_mci_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qA+"
                         procedure="check.flh_mci_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qAr" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qAs"
                         procedure="check.flh_mci_processor.checked.save_as"/>
          <IfSequence id="_1qAt" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qAu"
                           procedure="do_click.flh_mci_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qAv"
                         procedure="check.flh_mci_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_2JYz" name="fub_wew_processor">
        <Procedure id="_2JY+" name="compute_chl_band">
          <comment>@teststep Check-out checkbox 'Compute chlorophill-a concentration band'.</comment>
          <ProcedureCall id="_2JY-"
                         procedure="check.fub_wew_processor.checked.compute_chl_band"/>
          <IfSequence id="_2JZ0"
                      test="&#34;$(compute_chl_band)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JZ1"
                           procedure="do_click.fub_wew_processor.compute_chl_band"/>
          </IfSequence>
          <ProcedureCall id="_2JZ2"
                         procedure="check.fub_wew_processor.checked.compute_chl_band_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JZ3" name="compute_tsm_band">
          <comment>@teststep Check-out checkbox 'Compute total suspended matter band'.</comment>
          <ProcedureCall id="_2JZ4"
                         procedure="check.fub_wew_processor.checked.compute_tsm_band"/>
          <IfSequence id="_2JZ5"
                      test="&#34;$(compute_tsm_band)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JZ6"
                           procedure="do_click.fub_wew_processor.compute_tsm_band"/>
          </IfSequence>
          <ProcedureCall id="_2JZ7"
                         procedure="check.fub_wew_processor.checked.compute_tsm_band_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JZ8" name="compute_ys_band">
          <comment>@teststep Check-out checkbox 'Compute yellow substances band'.</comment>
          <ProcedureCall id="_2JZ9"
                         procedure="check.fub_wew_processor.checked.compute_ys_band"/>
          <IfSequence id="_2JZA"
                      test="&#34;$(compute_ys_band)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JZB"
                           procedure="do_click.fub_wew_processor.compute_ys_band"/>
          </IfSequence>
          <ProcedureCall id="_2JZC"
                         procedure="check.fub_wew_processor.checked.compute_ys_band_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JZD" name="compute_aot_band">
          <comment>@teststep Check-out checkbox 'Compute water leaving reflectances and AOT bands'.</comment>
          <ProcedureCall id="_2JZE"
                         procedure="check.fub_wew_processor.checked.compute_aot_band"/>
          <IfSequence id="_2JZF"
                      test="&#34;$(compute_aot_band)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JZG"
                           procedure="do_click.fub_wew_processor.compute_aot_band"/>
          </IfSequence>
          <ProcedureCall id="_2JZH"
                         procedure="check.fub_wew_processor.checked.compute_aot_band_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JZI" name="check_whether_suspectIs_valid">
          <comment>@teststep Check-out checkbox 'Check whether l1_flags.SUSPECT is valid'.</comment>
          <ProcedureCall id="_2JZJ"
                         procedure="check.fub_wew_processor.checked.check_whether_suspectIs_valid"/>
          <IfSequence id="_2JZK"
                      test="&#34;$(check_whether_suspectIs_valid)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JZL"
                           procedure="do_click.fub_wew_processor.check_whether_suspectIs_valid"/>
          </IfSequence>
          <ProcedureCall id="_2JZM"
                         procedure="check.fub_wew_processor.checked.check_whether_suspectIs_valid_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JZN" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_2JZO"
                         procedure="check.fub_wew_processor.checked.open_in_snap"/>
          <IfSequence id="_2JZP"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JZQ"
                           procedure="check.fub_wew_processor.enabled.open_in_snap"/>
            <IfSequence id="_2JZR"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_2JZS" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_2JZT"
                             procedure="select.fub_wew_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_2JZU"
                           procedure="do_click.fub_wew_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_2JZV"
                         procedure="check.fub_wew_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JZe" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_2JZf"
                         procedure="check.fub_wew_processor.checked.save_as"/>
          <IfSequence id="_2JZg" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JZh"
                           procedure="do_click.fub_wew_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_2JZi"
                         procedure="check.fub_wew_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1s2x" name="fu_classification">
        <Procedure id="_1s3K" name="copy_all_source_bands">
          <comment>@teststep Check-out checkbox 'Copy all source bands'.</comment>
          <ProcedureCall id="_1s3L"
                         procedure="check.fu_classification.checked.copy_all_source_bands"/>
          <IfSequence id="_1s3M"
                      test="&#34;$(copy_all_source_bands)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1s3N"
                           procedure="do_click.fu_classification.copy_all_source_bands"/>
          </IfSequence>
          <ProcedureCall id="_1s3O"
                         procedure="check.fu_classification.checked.copy_all_source_bands_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s3P" name="input_is_irradiance_reflectance">
          <comment>@teststep Check-out checkbox 'Input is irradiance reflectance'.</comment>
          <ProcedureCall id="_1s3Q"
                         procedure="check.fu_classification.checked.input_is_irradiance_reflectance"/>
          <IfSequence id="_1s3R"
                      test="&#34;$(inputIs_irradiance_reflectance)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1s3S"
                           procedure="do_click.fu_classification.input_is_irradiance_reflectance"/>
          </IfSequence>
          <ProcedureCall id="_1s3T"
                         procedure="check.fu_classification.checked.input_is_irradiance_reflectance_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sXs" name="include_intermediate_results">
          <comment>@teststep Check-out checkbox 'Include intermediate results in output'.</comment>
          <ProcedureCall id="_1sXt"
                         procedure="check.fu_classification.checked.include_intermediate_results"/>
          <IfSequence id="_1sXu"
                      test="&#34;$(include_intermediate_results)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sXv"
                           procedure="do_click.fu_classification.include_intermediate_results"/>
          </IfSequence>
          <ProcedureCall id="_1sXw"
                         procedure="check.fu_classification.checked.include_intermediate_results_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s3B" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1s3C"
                         procedure="check.fu_classification.checked.open_in_snap"/>
          <IfSequence id="_1s3D"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1s3E"
                           procedure="check.fu_classification.enabled.open_in_snap"/>
            <IfSequence id="_1s3F"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1s3G" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1s3H"
                             procedure="select.fu_classification.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1s3I"
                           procedure="do_click.fu_classification.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1s3J"
                         procedure="check.fu_classification.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s36" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1s37"
                         procedure="check.fu_classification.checked.save_as"/>
          <IfSequence id="_1s38" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1s39"
                           procedure="do_click.fu_classification.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1s3A"
                         procedure="check.fu_classification.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1rrc" name="kmean_cluster_analysis">
        <Procedure id="_1rrs" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1rrt"
                         procedure="check.k_means_cluster_analysis.checked.open_in_snap"/>
          <IfSequence id="_1rru"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1rrv"
                           procedure="check.k_means_cluster_analysis.enabled.open_in_snap"/>
            <IfSequence id="_1rrw"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1rrx" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1rry"
                             procedure="select.kmean_cluster_analysis.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1rrz"
                           procedure="do_click.kmean_cluster_analysis.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1rr+"
                         procedure="check.k_means_cluster_analysis.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1rrn" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1rro"
                         procedure="check.k_means_cluster_analysis.checked.save_as"/>
          <IfSequence id="_1rrp" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1rrq"
                           procedure="do_click.kmean_cluster_analysis.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1rrr"
                         procedure="check.k_means_cluster_analysis.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1roY" name="land_water_mask">
        <Procedure id="_1roo" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1rop"
                         procedure="check.land_water_mask.checked.open_in_snap"/>
          <IfSequence id="_1roq"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1ror"
                           procedure="check.land_water_mask.enabled.open_in_snap"/>
            <IfSequence id="_1ros"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1rot" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1rou"
                             procedure="select.land_water_mask.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1rov"
                           procedure="do_click.land_water_mask.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1row"
                         procedure="check.land_water_mask.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1roj" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1rok"
                         procedure="check.land_water_mask.checked.save_as"/>
          <IfSequence id="_1rol" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1rom"
                           procedure="do_click.land_water_mask.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1ron"
                         procedure="check.land_water_mask.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qN5" name="meris_cloud_probability">
        <Procedure id="_1qNJ" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qNK"
                         procedure="check.meris_cloud_probability.checked.open_in_snap"/>
          <IfSequence id="_1qNL"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qYD"
                           procedure="check.meris_cloud_probability.enabled.open_in_snap"/>
            <IfSequence id="_1qYE"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qYF" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qYG"
                             procedure="select.meris_cloud_probability.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qNM"
                           procedure="do_click.meris_cloud_probability.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qNN"
                         procedure="check.meris_cloud_probability.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qNE" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qNF"
                         procedure="check.meris_cloud_probability.checked.save_as"/>
          <IfSequence id="_1qNG" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qNH"
                           procedure="do_click.meris_cloud_probability.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qNI"
                         procedure="check.meris_cloud_probability.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qKF" name="meris_radiometric_correction">
        <Procedure id="_1qKV" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qKW"
                         procedure="check.meris_radiometric_correction.checked.open_in_snap"/>
          <IfSequence id="_1qKX"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qY9"
                           procedure="check.meris_radiometric_correction.enabled.open_in_snap"/>
            <IfSequence id="_1qYA"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qYB" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qYC"
                             procedure="select.meris_radiometric_correction.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qKY"
                           procedure="do_click.meris_radiometric_correction.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qKZ"
                         procedure="check.meris_radiometric_correction.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKi" name="perform_calibration">
          <comment>@teststep Check-out checkbox 'Perform calibration'.</comment>
          <ProcedureCall id="_1qKj"
                         procedure="check.meris_radiometric_correction.checked.perform_calibration"/>
          <IfSequence id="_1qKk"
                      test="&#34;$(perform_calibration)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qKl"
                           procedure="do_click.meris_radiometric_correction.perform_calibration"/>
          </IfSequence>
          <ProcedureCall id="_1qKm"
                         procedure="check.meris_radiometric_correction.checked.perform_calibration_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKs" name="perform_equalisation">
          <comment>@teststep Check-out checkbox 'Perform equalisation'.</comment>
          <ProcedureCall id="_1qKt"
                         procedure="check.meris_radiometric_correction.checked.perform_equalisation"/>
          <IfSequence id="_1qKu"
                      test="&#34;$(perform_equalization)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qKv"
                           procedure="do_click.meris_radiometric_correction.perform_equalization"/>
          </IfSequence>
          <ProcedureCall id="_1qKw"
                         procedure="check.meris_radiometric_correction.checked.perform_equalisation_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKx" name="perform_rad_to_refl">
          <comment>@teststep Check-out checkbox 'Perform radiance to reflectance'</comment>
          <ProcedureCall id="_1qKy"
                         procedure="check.meris_radiometric_correction.checked.perform_rad_to_refl"/>
          <IfSequence id="_1qKz"
                      test="&#34;$(perform_rad_to_refl)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qK+"
                           procedure="do_click.meris_radiometric_correction.perform_rad_to_refl"/>
          </IfSequence>
          <ProcedureCall id="_1qK-"
                         procedure="check.meris_radiometric_correction.checked.perform_rad_to_refl_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKn" name="perform_smile_effect">
          <comment>@teststep Check-out checkbox 'Perform smile-effect correction'.</comment>
          <ProcedureCall id="_1qKo"
                         procedure="check.meris_radiometric_correction.checked.perform_smile_effect"/>
          <IfSequence id="_1qKp"
                      test="&#34;$(perform_smile_effect)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qKq"
                           procedure="do_click.meris_radiometric_correction.perform_smile_effect"/>
          </IfSequence>
          <ProcedureCall id="_1qKr"
                         procedure="check.meris_radiometric_correction.checked.perform_smile_effect_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qKQ" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qKR"
                         procedure="check.meris_radiometric_correction.checked.save_as"/>
          <IfSequence id="_1qKS" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qKT"
                           procedure="do_click.meris_radiometric_correction.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qKU"
                         procedure="check.meris_radiometric_correction.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1piZ" name="mosaicing">
        <Package id="_1pic" name="io_parameters">
          <Procedure id="_1piu" name="open_in_snap">
            <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
            <ProcedureCall id="_1piv"
                           procedure="check.mosaicing.checked.io_parameters.open_in_snap"/>
            <IfSequence id="_1piw"
                        test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pix"
                             procedure="check.mosaicing.enabled.io_parameters.open_in_snap"/>
              <IfSequence id="_1piy"
                          test="&#34;$(open_in_snap_en)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1piz"
                               procedure="do_click.mosaicing.io_parameters.open_in_snap"/>
                <ElseSequence id="_1pi+">
                  <ProcedureCall id="_1pi-"
                                 procedure="daten_format.beam_dimap"/>
                  <ProcedureCall id="_1pj0"
                                 procedure="select.mosaicing.io_parameters.output_format">
                    <variable name="output_format">$(beam_dimap)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_1pj1"
                                 procedure="do_click.mosaicing.io_parameters.open_in_snap"/>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1pj2"
                           procedure="check.mosaicing.checked.io_parameters.open_in_snap_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pil" name="save_as">
            <comment>@teststep Check-out checkbox 'Save as'</comment>
            <ProcedureCall id="_1pim"
                           procedure="check.mosaicing.checked.io_parameters.save_as"/>
            <IfSequence id="_1pin"
                        test="&#34;$(save_as)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pio"
                             procedure="check.mosaicing.enabled.io_parameters.save_as"/>
              <IfSequence id="_1pip"
                          test="&#34;$(save_as_enabled)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1piq"
                               procedure="do_click.mosaicing.io_parameters.save_as"/>
                <ElseSequence id="_1pir">
                  <ProcedureCall id="_1pis" procedure="run-log.logError">
                    <variable name="message">Save As Checkbox is disabled</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1pit"
                           procedure="check.mosaicing.checked.io_parameters.save_as_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pj3" name="update_target_product">
            <comment>@teststep Check-out checkbox 'Update target product'</comment>
            <ProcedureCall id="_1pj4"
                           procedure="check.mosaicing.checked.io_parameters.update_target_product"/>
            <IfSequence id="_1pj5"
                        test="&#34;$(update_target_product)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pj6"
                             procedure="do_click.mosaicing.io_parameters.update_target_product"/>
            </IfSequence>
            <ProcedureCall id="_1pj7"
                           procedure="check.mosaicing.checked.io_parameters.update_target_product_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1pj8" name="map_definition">
          <Procedure id="_1pjL" name="display_source_products">
            <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
            <ProcedureCall id="_1pjM"
                           procedure="check.mosaicing.checked.map_definition.display_source_products"/>
            <IfSequence id="_1pjN"
                        test="&#34;$(display_source_products)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pjO"
                             procedure="do_click.mosaicing.map_definition.display_source_products_checkbox"/>
            </IfSequence>
            <ProcedureCall id="_1pjP"
                           procedure="check.mosaicing.checked.map_definition.display_source_products_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1pj9" name="variables_conditions"/>
      </Package>
      <Package id="_1pS2" name="ndvi_processor">
        <Procedure id="_1pWP" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pWQ"
                         procedure="check.ndvi_processor.checked.open_in_snap"/>
          <IfSequence id="_1pWR"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXn"
                           procedure="check.ndvi_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qXo"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXp" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXq"
                             procedure="select.ndvi_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pWS"
                           procedure="do_click.ndvi_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pWT"
                         procedure="check.ndvi_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pWK" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1pWL"
                         procedure="check.ndvi_processor.checked.save_as"/>
          <IfSequence id="_1pWM" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pWN"
                           procedure="do_click.ndvi_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pWO"
                         procedure="check.ndvi_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1sEs" name="olci_smile_correction">
        <Procedure id="_1sEt" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sEu"
                         procedure="check.olci_smile_correction.checked.open_in_snap"/>
          <IfSequence id="_1sEv"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sE+"
                           procedure="do_click.olci_smile_correction.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sE-"
                         procedure="check.olci_smile_correction.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sF8" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1sF9"
                         procedure="check.olci_smile_correction.checked.save_as"/>
          <IfSequence id="_1sFA" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sFB"
                           procedure="do_click.olci_smile_correction.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sFC"
                         procedure="check.olci_smile_correction.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sFD" name="perform_rad_to_refl">
          <comment>@teststep Check-out checkbox 'Perform radiance to reflectance conversion'.</comment>
          <ProcedureCall id="_1sFE"
                         procedure="check.olci_smile_correction.checked.perform_rad_to_refl"/>
          <IfSequence id="_1sFF"
                      test="&#34;$(perform_rad_to_refl)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sFG"
                           procedure="do_click.olci_smile_correction.perform_rad_to_refl"/>
          </IfSequence>
          <ProcedureCall id="_1sFH"
                         procedure="check.olci_smile_correction.checked.perform_rad_to_refl_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1sDp" name="pdu_stitching">
        <Procedure id="_1sDq" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sDr"
                         procedure="check.pdu_stitching.checked.open_in_snap"/>
          <IfSequence id="_1sDs"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sDt"
                           procedure="do_click.pdu_stitching.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sDu"
                         procedure="check.pdu_stitching.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qcW" name="principle_component_analysis">
        <Procedure id="_1qcm" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qcn"
                         procedure="check.principle_component_analysis.checked.open_in_snap"/>
          <IfSequence id="_1qco"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qcp"
                           procedure="check.principle_component_analysis.enabled.open_in_snap"/>
            <IfSequence id="_1qcq"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qcr" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qcs"
                             procedure="select.principle_component_analysis.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qct"
                           procedure="do_click.principal_component_analysis.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qcu"
                         procedure="check.principle_component_analysis.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qd6" name="remove_non_roi_pixels">
          <comment>@teststep Check-out checkbox 'Remove non-ROI pixels'.</comment>
          <ProcedureCall id="_1qd7"
                         procedure="check.principle_component_analysis.checked.remove_non_roi_pixels"/>
          <IfSequence id="_1qd8"
                      test="&#34;$(remove_non_roi_pixels)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qd9"
                           procedure="do_click.principal_component_analysis.remove_non_roi_pixels"/>
          </IfSequence>
          <ProcedureCall id="_1qdA"
                         procedure="check.principle_component_analysis.checked.remove_non_roi_pixels_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qch" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qci"
                         procedure="check.principle_component_analysis.checked.save_as"/>
          <IfSequence id="_1qcj" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qck"
                           procedure="do_click.principal_component_analysis.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qcl"
                         procedure="check.principle_component_analysis.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pX0" name="reprojection">
        <Procedure id="_1pfr" name="add_delta_lat_lon_bands">
          <comment>@teststep Check-out checkbox 'Add delta lat/lon bands'.</comment>
          <ProcedureCall id="_1pfs"
                         procedure="check.reprojection.checked.add_delta_lat_lon_bands"/>
          <IfSequence id="_1pft"
                      test="&#34;$(add_delta_lat_lon_bands)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pfu"
                           procedure="do_click.reprojection.add_delta_lat_lon_bands"/>
          </IfSequence>
          <ProcedureCall id="_1pfv"
                         procedure="check.reprojection.checked.add_delta_lat_lon_bands_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pXZ" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pXa"
                         procedure="check.reprojection.checked.open_in_snap"/>
          <IfSequence id="_1pXb"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXv"
                           procedure="check.reprojection.enabled.open_in_snap"/>
            <IfSequence id="_1qXw"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXx" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXy"
                             procedure="select.reprojection.output_format_reprojection_tool">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pXc"
                           procedure="do_click.reprojection.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pXd"
                         procedure="check.reprojection.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pfh" name="preserve_resolution">
          <comment>@teststep Check-out checkbox  'Preserve resolution'.</comment>
          <ProcedureCall id="_1pfi"
                         procedure="check.reprojection.checked.preserve_resolution"/>
          <IfSequence id="_1pfj"
                      test="&#34;$(preserve_resolution)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pfk"
                           procedure="do_click.reprojection.preserve_resolution"/>
          </IfSequence>
          <ProcedureCall id="_1pfl"
                         procedure="check.reprojection.checked.preserve_resolution_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pfm" name="reproject_tie_point_grids">
          <comment>@teststep Check-out checkbox 'Reproject tie-point grids'.</comment>
          <ProcedureCall id="_1pfn"
                         procedure="check.reprojection.checked.reproject_tie_point_grids"/>
          <IfSequence id="_1pfo"
                      test="&#34;$(reproject_tie_point_grids)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pfp"
                           procedure="do_click.reprojection.reproject_tie_point_grids"/>
          </IfSequence>
          <ProcedureCall id="_1pfq"
                         procedure="check.reprojection.checked.reproject_tie_point_grids_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pXU" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1pXV"
                         procedure="check.reprojection.checked.save_as"/>
          <IfSequence id="_1pXW" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pXX"
                           procedure="do_click.reprojection.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pXY"
                         procedure="check.reprojection.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1r--" name="resampling">
        <Procedure id="_1s0F" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1s0G"
                         procedure="check.resampling.checked.open_in_snap"/>
          <IfSequence id="_1s0H"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1s0I"
                           procedure="check.resampling.enabled.open_in_snap"/>
            <IfSequence id="_1s0J"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1s0K" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1s0L"
                             procedure="select.resampling.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1s0M"
                           procedure="do_click.resampling.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1s0N"
                         procedure="check.resampling.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s0A" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1s0B"
                         procedure="check.resampling.checked.save_as"/>
          <IfSequence id="_1s0C" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1s0D"
                           procedure="do_click.resampling.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1s0E"
                         procedure="check.resampling.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1s9G" name="scape_m">
        <Procedure id="_1sCq" name="calculate_lakes">
          <comment>@teststep Check-out checkbox 'Calculate lakes'.</comment>
          <ProcedureCall id="_1sCr"
                         procedure="check.scape_m.checked.calculate_lakes"/>
          <IfSequence id="_1sCs"
                      test="&#34;$(calculate_lakes)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sCt"
                           procedure="do_click.scape_m.calculate_lakes"/>
          </IfSequence>
          <ProcedureCall id="_1sCu"
                         procedure="check.scape_m.checked.calculate_lakes_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sCI" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sCJ"
                         procedure="check.scape_m.checked.open_in_snap"/>
          <IfSequence id="_1sCK"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sCP"
                           procedure="do_click.fu_classification.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sCQ"
                         procedure="check.scape_m.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s9o" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1s9p"
                         procedure="check.scape_m.checked.save_as"/>
          <IfSequence id="_1s9q" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1s9r" procedure="do_click.scape_m.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1s9s"
                         procedure="check.scape_m.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sCW" name="skip_gap_filling">
          <comment>@teststep Check-out checkbox 'Skip gap filling'.</comment>
          <ProcedureCall id="_1sCX"
                         procedure="check.scape_m.checked.skip_gap_filling"/>
          <IfSequence id="_1sCY"
                      test="&#34;$(skip_gap_filling)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sCZ"
                           procedure="do_click.scape_m.skip_gap_filling"/>
          </IfSequence>
          <ProcedureCall id="_1sCa"
                         procedure="check.scape_m.checked.skip_gap_filling_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sCb" name="skip_visibility_smoothing">
          <comment>@teststep Check-out checkbox 'Skip visibility smoothing'.</comment>
          <ProcedureCall id="_1sCc"
                         procedure="check.scape_m.checked.skip_visibility_smoothing"/>
          <IfSequence id="_1sCd"
                      test="&#34;$(skip_visibility_smoothing)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sCe"
                           procedure="do_click.scape_m.skip_visibility_smoothing"/>
          </IfSequence>
          <ProcedureCall id="_1sCf"
                         procedure="check.scape_m.checked.skip_visibility_smoothing_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sCR" name="use_getasse_DEM">
          <comment>@teststep Check-out checkbox 'Use getasse DEM'.</comment>
          <ProcedureCall id="_1sCS"
                         procedure="check.scape_m.checked.use_getasse_DEM"/>
          <IfSequence id="_1sCT"
                      test="&#34;$(use_getasse_DEM)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sCU"
                           procedure="do_click.scape_m.use_getasse_DEM"/>
          </IfSequence>
          <ProcedureCall id="_1sCV"
                         procedure="check.scape_m.checked.use_getasse_DEM_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sCl" name="write_443nm_reflec">
          <comment>@teststep Check-out checkbox 'Write 443nm reflectance band'.</comment>
          <ProcedureCall id="_1sCm"
                         procedure="check.scape_m.checked.write_443nm_reflec"/>
          <IfSequence id="_1sCn"
                      test="&#34;$(write_443nm_reflec)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sCo"
                           procedure="do_click.scape_m.write_443nm_reflec"/>
          </IfSequence>
          <ProcedureCall id="_1sCp"
                         procedure="check.scape_m.checked.write_443nm_reflec_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sCg" name="write_rho_toa">
          <comment>@teststep Check-out checkbox 'Write rhoTOA'.</comment>
          <ProcedureCall id="_1sCh"
                         procedure="check.scape_m.checked.write_rho_toa"/>
          <IfSequence id="_1sCi"
                      test="&#34;$(write_rho_toa)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sCj"
                           procedure="do_click.scape_m.write_rho_toa"/>
          </IfSequence>
          <ProcedureCall id="_1sCk"
                         procedure="check.scape_m.checked.write_rho_toa_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qRr" name="smac">
        <Procedure id="_1qS5" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qS6"
                         procedure="check.smac.checked.open_in_snap"/>
          <IfSequence id="_1qS7"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qYL"
                           procedure="check.smac.enabled.open_in_snap"/>
            <IfSequence id="_1qYM"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qYN" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qYO" procedure="select.smac.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qS8" procedure="do_click.smac.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qS9"
                         procedure="check.smac.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qS0" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1qS1" procedure="check.smac.checked.save_as"/>
          <IfSequence id="_1qS2" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qS3" procedure="do_click.smac.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qS4"
                         procedure="check.smac.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qSA" name="use_meris_ecmwf">
          <comment>@teststep Check-out checkbox 'Use MERIS ECMWF data'</comment>
          <ProcedureCall id="_1qSB"
                         procedure="check.smac.checked.use_meris_ecmwf"/>
          <IfSequence id="_1qSC"
                      test="&#34;$(use_meris_ecmwf)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qSD"
                           procedure="do_click.smac.use_meris_ecmwf"/>
          </IfSequence>
          <ProcedureCall id="_1qSE"
                         procedure="check.smac.checked.use_meris_ecmwf_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pQf" name="spectral_unmixing">
        <Procedure id="_1pR2" name="compute_error_bands">
          <comment>@teststep Check-out checkbox 'Compute error bands'</comment>
          <ProcedureCall id="_1pR3"
                         procedure="check.spectral_unmixing.checked.compute_error_bands"/>
          <IfSequence id="_1pR4"
                      test="&#34;$(compute_error_bands)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pR5"
                           procedure="do_click.spectral_unmixing.compute_error_bands"/>
          </IfSequence>
          <ProcedureCall id="_1pR6"
                         procedure="check.spectral_unmixing.checked.compute_error_bands_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pQt" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pQu"
                         procedure="check.spectral_unmixing.checked.open_in_snap"/>
          <IfSequence id="_1pQv"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qXf"
                           procedure="check.spectral_unmixing.enabled.open_in_snap"/>
            <IfSequence id="_1qXg"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXh" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXi"
                             procedure="select.spectral_unmixing.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pQw"
                           procedure="do_click.spectral_unmixing.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pQx"
                         procedure="check.spectral_unmixing.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pQo" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1pQp"
                         procedure="check.spectral_unmixing.checked.save_as"/>
          <IfSequence id="_1pQq" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1pQr"
                           procedure="do_click.spectral_unmixing.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pQs"
                         procedure="check.spectral_unmixing.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1sT3" name="sentinel2_radiometric_uncertainty_tool">
        <Procedure id="_1sT4" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sT5"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.open_in_snap"/>
          <IfSequence id="_1sT6"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sT7"
                           procedure="check.sentinel2_radiometric_uncertainty_tool.enabled.open_in_snap"/>
            <IfSequence id="_1sT8"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sT9" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sTA"
                             procedure="select.sentinel2_radiometric_uncertainty_tool.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sTB"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sTC"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sTL" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1sTM"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.save_as"/>
          <IfSequence id="_1sTN" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sTO"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sTP"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sTS" name="instrument_noise">
          <comment>@teststep Check-out checkbox 'Instrument noise'.</comment>
          <ProcedureCall id="_1sTT"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.instrument_noise"/>
          <IfSequence id="_1sTU"
                      test="&#34;$(instrument_noise)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sTV"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.instrument_noise"/>
          </IfSequence>
          <ProcedureCall id="_1sTW"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.instrument_noise_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sTX" name="oof_straylight_systematic">
          <comment>@teststep Check-out checkbox 'OOF straylight-systematic'.</comment>
          <ProcedureCall id="_1sTY"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.oof_straylight_systematic"/>
          <IfSequence id="_1sTZ"
                      test="&#34;$(oof_straylight_systematic)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sTa"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.oof_straylight_systematic"/>
          </IfSequence>
          <ProcedureCall id="_1sTb"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.oof_straylight_systematic_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sTc" name="oof_straylight_random">
          <comment>@teststep Check-out checkbox 'OOF straylight-random'.</comment>
          <ProcedureCall id="_1sTd"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.oof_straylight_random"/>
          <IfSequence id="_1sTe"
                      test="&#34;$(oof_straylight_random)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sTf"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.oof_straylight_random"/>
          </IfSequence>
          <ProcedureCall id="_1sTg"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.oof_straylight_random_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sTh" name="crosstalk">
          <comment>@teststep Check-out checkbox 'Crosstalk'.</comment>
          <ProcedureCall id="_1sTi"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.crosstalk"/>
          <IfSequence id="_1sTj"
                      test="&#34;$(crosstalk)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sTk"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.crosstalk"/>
          </IfSequence>
          <ProcedureCall id="_1sTl"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.crosstalk_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sTm" name="adc_quantisation">
          <comment>@teststep Check-out checkbox 'ADC quantisation'.</comment>
          <ProcedureCall id="_1sTn"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.adc_quantisation"/>
          <IfSequence id="_1sTo"
                      test="&#34;$(adc_quantisation)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sTp"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.adc_quantisation"/>
          </IfSequence>
          <ProcedureCall id="_1sTq"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.adc_quantisation_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sTr" name="ds_stability">
          <comment>@teststep Check-out checkbox 'DS stability'.</comment>
          <ProcedureCall id="_1sTs"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.ds_stability"/>
          <IfSequence id="_1sTt"
                      test="&#34;$(ds_stability)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sTu"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.ds_stability"/>
          </IfSequence>
          <ProcedureCall id="_1sTv"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.ds_stability_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sTw" name="gamma_knowledge">
          <comment>@teststep Check-out checkbox 'Gamma knowledge'.</comment>
          <ProcedureCall id="_1sTx"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.gamma_knowledge"/>
          <IfSequence id="_1sTy"
                      test="&#34;$(gamma_knowledge)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sTz"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.gamma_knowledge"/>
          </IfSequence>
          <ProcedureCall id="_1sT+"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.gamma_knowledge_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sT-" name="diffuser_absolute_knowledge">
          <comment>@teststep Check-out checkbox 'Diffuser-absolute knowledge'.</comment>
          <ProcedureCall id="_1sU0"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_absolute_knowledge"/>
          <IfSequence id="_1sU1"
                      test="&#34;$(diffuser_absolute_knowledge)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sU2"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.diffuser_absolute_knowledge"/>
          </IfSequence>
          <ProcedureCall id="_1sU3"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_absolute_knowledge_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sU4" name="diffuser_temporal_knowledge">
          <comment>@teststep Check-out checkbox 'Diffuser-temporal knowledge'.</comment>
          <ProcedureCall id="_1sU5"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_temporal_knowledge"/>
          <IfSequence id="_1sU6"
                      test="&#34;$(diffuser_temporal_knowledge)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sU7"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.diffuser_temporal_knowledge"/>
          </IfSequence>
          <ProcedureCall id="_1sU8"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_temporal_knowledge_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sU9" name="diffuser_cosine_effect">
          <comment>@teststep Check-out checkbox 'Diffuser-cosine effect'.</comment>
          <ProcedureCall id="_1sUA"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_cosine_effect"/>
          <IfSequence id="_1sUB"
                      test="&#34;$(diffuser_cosine_effect)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sUC"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.diffuser_cosine_effect"/>
          </IfSequence>
          <ProcedureCall id="_1sUD"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_cosine_effect_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sUE" name="diffuser_straylight_residual">
          <comment>@teststep Check-out checkbox 'Diffuser-straylight residual'.</comment>
          <ProcedureCall id="_1sUF"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_straylight_residual"/>
          <IfSequence id="_1sUG"
                      test="&#34;$(diffuser_straylight_residual)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sUH"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.diffuser_straylight_residual"/>
          </IfSequence>
          <ProcedureCall id="_1sUI"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_straylight_residual_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sUJ" name="l1c_image_quantisation">
          <comment>@teststep Check-out checkbox 'L1C image quantisation'.</comment>
          <ProcedureCall id="_1sUK"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.l1c_image_quantisation"/>
          <IfSequence id="_1sUL"
                      test="&#34;$(l1c_image_quantisation)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sUM"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.l1c_image_quantisation"/>
          </IfSequence>
          <ProcedureCall id="_1sUN"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.l1c_image_quantisation_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1sUn" name="rayleigh_correction">
        <Procedure id="_1sUo" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sVG"
                         procedure="check.rayleigh_correction.checked.open_in_snap"/>
          <IfSequence id="_1sVH"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sVI"
                           procedure="check.rayleigh_correction.enabled.open_in_snap"/>
            <IfSequence id="_1sVJ"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sVK" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sVL"
                             procedure="select.rayleigh_correction.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sVM"
                           procedure="do_click.rayleigh_correction.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sVN"
                         procedure="check.rayleigh_correction.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sVW" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1sVX"
                         procedure="check.rayleigh_correction.checked.save_as"/>
          <IfSequence id="_1sVY" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sVZ"
                           procedure="do_click.rayleigh_correction.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sVa"
                         procedure="check.rayleigh_correction.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1sVn" name="gaseous_absorption">
        <Procedure id="_1sVo" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sVp"
                         procedure="check.gaseous_absorption.checked.open_in_snap"/>
          <IfSequence id="_1sVq"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sVr"
                           procedure="check.gaseous_absorption.enabled.open_in_snap"/>
            <IfSequence id="_1sVs"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sVt" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sVu"
                             procedure="select.gaseous_absorption.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sVv"
                           procedure="do_click.gaseous_absorption.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sVw"
                         procedure="check.gaseous_absorption.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sW3" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1sW4"
                         procedure="check.gaseous_absorption.checked.save_as"/>
          <IfSequence id="_1sW5" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sW6"
                           procedure="do_click.gaseous_absorption.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sW7"
                         procedure="check.gaseous_absorption.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1sX0" name="radiance-to-reflectance_processor">
        <Procedure id="_1sX1" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sX2"
                         procedure="check.radiance-to-reflectance_processor.checked.open_in_snap"/>
          <IfSequence id="_1sX3"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sX4"
                           procedure="check.radiance-to-reflectance_processor.enabled.open_in_snap"/>
            <IfSequence id="_1sX5"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sX6" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sX7"
                             procedure="select.radiance-to-reflectance_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sX8"
                           procedure="do_click.radiance-to-reflectance_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sX9"
                         procedure="check.radiance-to-reflectance_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sXI" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_1sXJ"
                         procedure="check.radiance-to-reflectance_processor.checked.save_as"/>
          <IfSequence id="_1sXK" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sXL"
                           procedure="do_click.radiance-to-reflectance_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sXM"
                         procedure="check.radiance-to-reflectance_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sXl" name="copy_non_spectral_bands">
          <comment>@teststep Check-out checkbox 'Copy non spectral bands'.</comment>
          <ProcedureCall id="_1sXm"
                         procedure="check.radiance-to-reflectance_processor.checked.copy_non_spectral_bands"/>
          <IfSequence id="_1sXn"
                      test="&#34;$(copy_non_spectral_bands)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1sXo"
                           procedure="do_click.radiance-to-reflectance_processor.copy_non_spectral_bands"/>
          </IfSequence>
          <ProcedureCall id="_1sXp"
                         procedure="check.radiance-to-reflectance_processor.checked.copy_non_spectral_bands_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_2Jch" name="owt_classification">
        <Procedure id="_2JdQ" name="write_input_reflectances">
          <comment>@teststep Check-out checkbox 'Write input reflectances'</comment>
          <ProcedureCall id="_2JdR"
                         procedure="check.owt_classification.checked.write_input_reflectances"/>
          <IfSequence id="_2JdS"
                      test="&#34;$(write_input_reflectances)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JdT"
                           procedure="do_click.owt_classification.write_input_reflectances"/>
          </IfSequence>
          <ProcedureCall id="_2JdU"
                         procedure="check.owt_classification.checked.write_input_reflectances_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JdV" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_2JdW"
                         procedure="check.owt_classification.checked.open_in_snap"/>
          <IfSequence id="_2JdX"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JdY"
                           procedure="check.owt_classification.enabled.open_in_snap"/>
            <IfSequence id="_2JdZ"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_2Jda" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_2Jdb"
                             procedure="select.owt_classification.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_2Jdc"
                           procedure="do_click.owt_classification.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_2Jdd"
                         procedure="check.owt_classification.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jdm" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_2Jdn"
                         procedure="check.owt_classification.checked.save_as"/>
          <IfSequence id="_2Jdo" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2Jdp"
                           procedure="do_click.owt_classification.save_as"/>
          </IfSequence>
          <ProcedureCall id="_2Jdq"
                         procedure="check.owt_classification.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_2JfH" name="s2_mci_processor">
        <Procedure id="_2JfI" name="open_in_snap">
          <comment>@teststep Check-out checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_2JfJ"
                         procedure="check.s2_mci_processor.checked.open_in_snap"/>
          <IfSequence id="_2JfK"
                      test="&#34;$(open_in_snap)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2JfL"
                           procedure="check.s2_mci_processor.enabled.open_in_snap"/>
            <IfSequence id="_2JfM"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_2JfN" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_2JfO"
                             procedure="select.s2_mci_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_2JfP"
                           procedure="do_click.s2_mci_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_2JfQ"
                         procedure="check.s2_mci_processor.checked.open_in_snap_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JfZ" name="save_as">
          <comment>@teststep Check-out checkbox 'Save as'</comment>
          <ProcedureCall id="_2Jfa"
                         procedure="check.s2_mci_processor.checked.save_as"/>
          <IfSequence id="_2Jfb" test="&#34;$(save_as)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2Jfc"
                           procedure="do_click.s2_mci_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_2Jfd"
                         procedure="check.s2_mci_processor.checked.save_as_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jfe" name="generate_slope_band">
          <comment>@teststep Check-out checkbox 'Generate slope band'</comment>
          <ProcedureCall id="_2Jff"
                         procedure="check.s2_mci_processor.checked.generate_slope_parameter"/>
          <IfSequence id="_2Jfg"
                      test="&#34;$(generate_slope_parameter)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2Jfh"
                           procedure="do_click.s2_mci_processor.generate_slope_band"/>
          </IfSequence>
          <ProcedureCall id="_2Jfi"
                         procedure="check.s2_mci_processor.checked.generate_slope_parameter_selected_status">
            <variable name="selected">false</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1pMj" name="select">
      <Package id="_1sZ0" name="aatsr_sst_processor">
        <Procedure id="_1sZi" name="dual_view_coefficient_file">
          <variable name="dual_view_file"/>
          <comment>@teststep Select dual-view coefficient file.</comment>
          <TryStep id="_1sZj">
            <ProcedureCall id="_1sZk"
                           procedure="utility.aatsr_sst_processor.dual_view_coefficient_file">
              <variable name="dual_view_file">$(dual_view_file)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sZl" maxerror="0">
              <TryStep id="_1sZm">
                <ProcedureCall id="_1sZn"
                               procedure="utility.aatsr_sst_processor.dual_view_coefficient_file">
                  <variable name="dual_view_file">$(dual_view_file)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sZo"
                               maxerror="0">
                  <ProcedureCall id="_1sZp" procedure="run-log.logError">
                    <variable name="message">Dual-view file $(dual_view_file) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sZq" name="generate_dual_view_sst">
          <comment>@teststep Check-in checkbox 'Generate dual-view SST'.</comment>
          <ProcedureCall id="_1sZr"
                         procedure="check.aatsr_sst_processor.checked.generate_dual_view_sst"/>
          <IfSequence id="_1sZs"
                      test="&#34;$(generate_dual_view_sst)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sZt"
                           procedure="do_click.aatsr_sst_processor.generate_dual_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1sZu"
                         procedure="check.aatsr_sst_processor.checked.generate_dual_view_sst_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sZv" name="generate_nadir_view_sst">
          <comment>@teststep Check-in checkbox 'Generate nadir-view SST'.</comment>
          <ProcedureCall id="_1sZw"
                         procedure="check.aatsr_sst_processor.checked.generate_nadir_view_sst"/>
          <IfSequence id="_1sZx"
                      test="&#34;$(generate_nadir_view_sst)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sZy"
                           procedure="do_click.aatsr_sst_processor.generate_nadir_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1sZz"
                         procedure="check.aatsr_sst_processor.checked.generate_nadir_view_sst_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sZ+" name="nadir_view_coefficient_file">
          <variable name="nadir_view_file"/>
          <comment>@teststep Select nadir-view coefficient file.</comment>
          <TryStep id="_1sZ-">
            <ProcedureCall id="_1sa0"
                           procedure="utility.aatsr_sst_processor.nadir_view_coefficient_file">
              <variable name="nadir_view_file">$(nadir_view_file)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sa1" maxerror="0">
              <TryStep id="_1sa2">
                <ProcedureCall id="_1sa3"
                               procedure="utility.aatsr_sst_processor.nadir_view_coefficient_file">
                  <variable name="nadir_view_file">$(nadir_view_file)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sa4"
                               maxerror="0">
                  <ProcedureCall id="_1sa5" procedure="run-log.logError">
                    <variable name="message">Nadir-view file $(nadir_view_file) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sa6" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sa7"
                         procedure="check.aatsr_sst_processor.checked.open_in_snap"/>
          <IfSequence id="_1sa8"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sa9"
                           procedure="check.aatsr_sst_processor.enabled.open_in_snap"/>
            <IfSequence id="_1saA"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1saB" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1saC"
                             procedure="select.aatsr_sst_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1saD"
                           procedure="do_click.aatsr_sst_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1saE"
                         procedure="check.aatsr_sst_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1saF" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1saG">
            <ProcedureCall id="_1saH"
                           procedure="utility.aatsr_sst_processor.output_format_aatsr_sst_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1saI" maxerror="0">
              <TryStep id="_1saJ">
                <ProcedureCall id="_1saK"
                               procedure="utility.aatsr_sst_processor.output_format_aatsr_sst_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1saL"
                               maxerror="0">
                  <ProcedureCall id="_1saM" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1saN" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1saO"
                         procedure="check.aatsr_sst_processor.checked.save_as"/>
          <IfSequence id="_1saP" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1saQ"
                           procedure="do_click.aatsr_sst_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1saR"
                         procedure="check.aatsr_sst_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1saS" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1qWe" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qTv" name="arc_sst_processor">
        <Procedure id="_1qYP" name="dual_view_coefficient_file">
          <variable name="dual_view_file"/>
          <comment>@teststep Select dual-view coefficient file.</comment>
          <TryStep id="_1qYd">
            <ProcedureCall id="_1qYe"
                           procedure="utility.arc_sst_processor.dual_view_coefficient_file">
              <variable name="dual_view_file">$(dual_view_file)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qYf" maxerror="0">
              <TryStep id="_1qYg">
                <ProcedureCall id="_1qYk"
                               procedure="utility.arc_sst_processor.dual_view_coefficient_file">
                  <variable name="dual_view_file">$(dual_view_file)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qYi"
                               maxerror="0">
                  <ProcedureCall id="_1qYj" procedure="run-log.logError">
                    <variable name="message">Dual-view file $(dual_view_file) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qUP" name="generate_dual_view_sst">
          <comment>@teststep Check-in checkbox 'Generate dual-view SST'.</comment>
          <ProcedureCall id="_1qYZ"
                         procedure="check.arc_sst_processor.checked.generate_dual_view_sst"/>
          <IfSequence id="_1qYa"
                      test="&#34;$(generate_dual_view_sst)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qYb"
                           procedure="do_click.arc_sst_processor.generate_dual_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1qYc"
                         procedure="check.arc_sst_processor.checked.generate_dual_view_sst_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qV9" name="generate_nadir_view_sst">
          <comment>@teststep Check-in checkbox 'Generate nadir-view SST'.</comment>
          <ProcedureCall id="_1qYV"
                         procedure="check.arc_sst_processor.checked.generate_nadir_view_sst"/>
          <IfSequence id="_1qYW"
                      test="&#34;$(generate_nadir_view_sst)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qYX"
                           procedure="do_click.arc_sst_processor.generate_nadir_view_sst"/>
          </IfSequence>
          <ProcedureCall id="_1qYY"
                         procedure="check.arc_sst_processor.checked.generate_nadir_view_sst_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qYS" name="nadir_view_coefficient_file">
          <variable name="nadir_view_file"/>
          <comment>@teststep Select nadir-view coefficient file.</comment>
          <TryStep id="_1qYl">
            <ProcedureCall id="_1qYm"
                           procedure="utility.arc_sst_processor.nadir_view_coefficient_file">
              <variable name="nadir_view_file">$(nadir_view_file)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qYn" maxerror="0">
              <TryStep id="_1qYo">
                <ProcedureCall id="_1qYs"
                               procedure="utility.arc_sst_processor.nadir_view_coefficient_file">
                  <variable name="nadir_view_file">$(nadir_view_file)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qYq"
                               maxerror="0">
                  <ProcedureCall id="_1qYr" procedure="run-log.logError">
                    <variable name="message">Nadir-view file $(nadir_view_file) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qWQ" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qWR"
                         procedure="check.arc_sst_processor.checked.open_in_snap"/>
          <IfSequence id="_1qWS"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXN"
                           procedure="check.arc_sst_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qXO"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXR" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXS"
                             procedure="select.arc_sst_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qWT"
                           procedure="do_click.arc_sst_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qWU"
                         procedure="check.arc_sst_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qWD" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1qWE">
            <ProcedureCall id="_1qXL"
                           procedure="utility.arc_sst_processor.output_format_arc_sst_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qWG" maxerror="0">
              <TryStep id="_1qWH">
                <ProcedureCall id="_1qXM"
                               procedure="utility.arc_sst_processor.output_format_arc_sst_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qWJ"
                               maxerror="0">
                  <ProcedureCall id="_1qWK" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qWL" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qWM"
                         procedure="check.arc_sst_processor.checked.save_as"/>
          <IfSequence id="_1qWN" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qWO"
                           procedure="do_click.arc_sst_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qWP"
                         procedure="check.arc_sst_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qWB" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogARC_SST_Processor2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1saV" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pl8" name="binning">
        <Package id="_1plw" name="configuration">
          <Package id="_1pzo" name="intermediate_source_bands">
            <Procedure id="_1q8w" name="all_intermediate_source_bands">
              <comment>@teststep Check-in checkbox 'Name'.</comment>
              <ProcedureCall id="_1q8-"
                             procedure="check.binning.visible.checkbox_name"/>
              <IfSequence id="_1q90"
                          test="&#34;$(checkbox_name_visible)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1q91"
                               procedure="do_click.binning.configuration.intermediate_source_bands.show_hide_selection_column"/>
              </IfSequence>
              <ProcedureCall id="_1q9C"
                             procedure="check.binning.visible.checkbox_name"/>
              <IfSequence id="_1q93"
                          test="&#34;$(checkbox_name_visible)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1q94"
                               procedure="check.binning.enabled.configuration.intermediate_source_bands.checkbox_name"/>
                <IfSequence id="_1q95"
                            test="&#34;$(checkbox_name_enabled)&#34;==&#34;true&#34;">
                  <ProcedureCall id="_1q96"
                                 procedure="check.binning.checked.configuration.checkbox_name"/>
                  <IfSequence id="_1q97"
                              test="&#34;$(checkbox_name)&#34;==&#34;false&#34;">
                    <ProcedureCall id="_1q98"
                                   procedure="do_click.binning.configuration.intermediate_source_bands.checkbox_name"/>
                  </IfSequence>
                  <ProcedureCall id="_1q9E"
                                 procedure="check.binning.checked.configuration.checkbox_name_selected_status">
                    <variable name="selected">true</variable>
                  </ProcedureCall>
                </IfSequence>
                <ElseSequence id="_1q9A">
                  <ProcedureCall id="_1q9B" procedure="run-log.logError">
                    <variable name="message">'Intermediate source bands name' checkbox is not visible</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </Procedure>
          </Package>
          <Package id="_1pzn" name="source_bands">
            <Procedure id="_1q6U" name="all_aggregators">
              <comment>@teststep Check-in checkbox 'Save as'</comment>
              <ProcedureCall id="_1q6V"
                             procedure="check.binning.visible.checkbox_aggregator"/>
              <IfSequence id="_1q6e"
                          test="&#34;$(checkbox_aggregator_visible)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1q6k"
                               procedure="do_click.binning.configuration.source_bands.show_hide_selection_column"/>
              </IfSequence>
              <ProcedureCall id="_1q6d"
                             procedure="check.binning.visible.checkbox_aggregator"/>
              <IfSequence id="_1q6Z"
                          test="&#34;$(checkbox_aggregator_visible)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1q6n"
                               procedure="check.binning.enabled.configuration.source_bands.checkbox_aggregator"/>
                <IfSequence id="_1q6m"
                            test="&#34;$(checkbox_aggregator_enabled)&#34;==&#34;true&#34;">
                  <ProcedureCall id="_1q6b"
                                 procedure="check.binning.checked.configuration.checkbox_aggregator"/>
                  <IfSequence id="_1q6W"
                              test="&#34;$(checkbox_aggregator)&#34;==&#34;false&#34;">
                    <ProcedureCall id="_1q6X"
                                   procedure="do_click.binning.configuration.source_bands.checkbox_aggregator"/>
                  </IfSequence>
                  <ProcedureCall id="_1q6c"
                                 procedure="check.binning.checked.configuration.checkbox_aggregator_selected_status">
                    <variable name="selected">true</variable>
                  </ProcedureCall>
                </IfSequence>
                <ElseSequence id="_1q6a">
                  <ProcedureCall id="_1q6l" procedure="run-log.logError">
                    <variable name="message">Aggregator checkbox is not visible</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1q5G" name="edit_aggregator">
          <Procedure id="_1q65" name="aggregator">
            <variable name="aggregator"/>
            <comment>@teststep Select aggregator.</comment>
            <TryStep id="_1q6B">
              <ProcedureCall id="_1q6A"
                             procedure="utility.binning.aggregator">
                <variable name="aggregator">$(aggregator)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1q6C"
                             maxerror="0">
                <TryStep id="_1q6D">
                  <ProcedureCall id="_1q6E"
                                 procedure="utility.binning.aggregator">
                    <variable name="aggregator">$(aggregator)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1q6F"
                                 maxerror="0">
                    <ProcedureCall id="_1q6G" procedure="run-log.logError">
                      <variable name="message">$(aggregator) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1q5H" name="output_counts">
            <comment>@teststep Check-in checkbox 'output counts'</comment>
            <ProcedureCall id="_1q5j"
                           procedure="check.edit_aggregator.checked.output_counts"/>
            <IfSequence id="_1q5v"
                        test="&#34;$(output_counts)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1q5h"
                             procedure="do_click.binning.edit_aggregator.output_counts"/>
            </IfSequence>
            <ProcedureCall id="_1q5l"
                           procedure="check.edit_aggregator.checked.output_counts_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1q5n" name="output_sums">
            <comment>@teststep Check-in checkbox 'output sums'</comment>
            <ProcedureCall id="_1q5r"
                           procedure="check.edit_aggregator.checked.output_sums"/>
            <IfSequence id="_1q5u"
                        test="&#34;$(output_sums)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1q5p"
                             procedure="do_click.binning.edit_aggregator.output_sums"/>
            </IfSequence>
            <ProcedureCall id="_1q5t"
                           procedure="check.edit_aggregator.checked.output_sums_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1q6I" name="source_band">
            <variable name="band"/>
            <comment>@teststep Select source band</comment>
            <TryStep id="_1q6O">
              <ProcedureCall id="_1q6N"
                             procedure="utility.binning.source_band_in_edit_aggregator">
                <variable name="band">$(band)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1q6P"
                             maxerror="0">
                <TryStep id="_1q6Q">
                  <ProcedureCall id="_1q6R"
                                 procedure="utility.binning.source_band_in_edit_aggregator">
                    <variable name="band">$(band)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1q6S"
                                 maxerror="0">
                    <ProcedureCall id="_1q6T" procedure="run-log.logError">
                      <variable name="message">$(band) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
        </Package>
        <Package id="_1plM" name="filter">
          <Procedure id="_1pzG" name="time_filter_method">
            <variable name="time_filter_method"/>
            <comment>@teststep Select time filter method.</comment>
            <TryStep id="_1p-m">
              <ProcedureCall id="_1p-l"
                             procedure="utility.binning.time_filter_method">
                <variable name="time_filter_method">$(time_filter_method)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1p-o"
                             maxerror="0">
                <TryStep id="_1p-p">
                  <ProcedureCall id="_1p-t"
                                 procedure="utility.binning.time_filter_method">
                    <variable name="time_filter_method">$(time_filter_method)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1p-r"
                                 maxerror="0">
                    <ProcedureCall id="_1p-s" procedure="run-log.logError">
                      <variable name="message">$(time_filter_method) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
        </Package>
        <Package id="_1pl9" name="io_parameters"/>
        <Procedure id="_1p+i" name="tab">
          <variable name="tab"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogBinning.tabbed.tab"
                          event="MOUSE_MPRC" id="_1p+k" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pMl" name="collocation">
        <Procedure id="_1pN3" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pN4"
                         procedure="check.collocation.checked.open_in_snap"/>
          <IfSequence id="_1pN5"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXT"
                           procedure="check.collocation.enabled.open_in_snap"/>
            <IfSequence id="_1qXU"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXV" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXW"
                             procedure="select.collocation.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pN6"
                           procedure="do_click.collocation.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pN7"
                         procedure="check.collocation.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pOX" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1pOZ">
            <ProcedureCall id="_1pOa"
                           procedure="utility.collocation.output_format_collocation">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pOb" maxerror="0">
              <TryStep id="_1pOc">
                <ProcedureCall id="_1pOd"
                               procedure="utility.collocation.output_format_collocation">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pOe"
                               maxerror="0">
                  <ProcedureCall id="_1pOf" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pND" name="rename_master_components">
          <comment>@teststep Check-in checkbox 'Rename master components'</comment>
          <ProcedureCall id="_1pNE"
                         procedure="check.collocation.checked.rename_master_components"/>
          <IfSequence id="_1pNF"
                      test="&#34;$(rename_master_components)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pNG"
                           procedure="do_click.collocation.rename_master_components"/>
          </IfSequence>
          <ProcedureCall id="_1pNH"
                         procedure="check.collocation.checked.rename_master_components_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pOI" name="rename_slave_components">
          <comment>@teststep Check-in checkbox 'Rename slave components'</comment>
          <ProcedureCall id="_1pOJ"
                         procedure="check.collocation.checked.rename_slave_components"/>
          <IfSequence id="_1pOK"
                      test="&#34;$(rename_slave_components)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pOL"
                           procedure="do_click.collocation.rename_slave_components"/>
          </IfSequence>
          <ProcedureCall id="_1pOM"
                         procedure="check.collocation.checked.rename_slave_components_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pMm" name="resampling_type">
          <variable name="resampling_type"/>
          <comment>@teststep Select resampling type</comment>
          <ProcedureCall id="_1pOk" procedure="variables.resampling_types"/>
          <SetGlobalStep id="_1pOl" varname="restype">
            <default>${resampling:$(resampling_type)}</default>
          </SetGlobalStep>
          <TryStep id="_1pMo">
            <ProcedureCall id="_1pMp"
                           procedure="utility.collocation.resampling_type_collocation">
              <variable name="resampling_type">$(restype)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pMq" maxerror="0">
              <TryStep id="_1pMr">
                <ProcedureCall id="_1pOj"
                               procedure="utility.collocation.resampling_type_collocation">
                  <variable name="resampling_type">$(restype)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pMt"
                               maxerror="0">
                  <ProcedureCall id="_1pMu" procedure="run-log.logError">
                    <variable name="message">$(restype) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pMv" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1pMw"
                         procedure="check.collocation.checked.save_as"/>
          <IfSequence id="_1pMx" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pMy"
                           procedure="do_click.collocation.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pMz"
                         procedure="check.collocation.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_2JXu" name="flh_mci_processor">
        <Procedure id="_2JXv" name="generate_slope_band">
          <comment>@teststep Check-in checkbox 'Generate slope band'</comment>
          <ProcedureCall id="_2JXw"
                         procedure="check.flh_mci_processor.checked.generate_slope_band"/>
          <IfSequence id="_2JXx"
                      test="&#34;$(generate_slope_band)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2JXy"
                           procedure="do_click.flh_mci_processor.generate_slope_band"/>
          </IfSequence>
          <ProcedureCall id="_2JXz"
                         procedure="check.flh_mci_processor.checked.generate_slope_band_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JX+" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_2JX-"
                         procedure="check.flh_mci_processor.checked.open_in_snap"/>
          <IfSequence id="_2JY0"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2JY1"
                           procedure="check.flh_mci_processor.enabled.open_in_snap"/>
            <IfSequence id="_2JY2"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_2JY3" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_2JY4"
                             procedure="select.flh_mci_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_2JY5"
                           procedure="do_click.flh_mci_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_2JY6"
                         procedure="check.flh_mci_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JY7" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_2JY8">
            <ProcedureCall id="_2JY9"
                           procedure="utility.flh_mci.output_format_flh_mci_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_2JYA" maxerror="0">
              <TryStep id="_2JYB">
                <ProcedureCall id="_2JYC"
                               procedure="utility.flh_mci.output_format_flh_mci_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_2JYD"
                               maxerror="0">
                  <ProcedureCall id="_2JYE" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_2JYF" name="preset">
          <variable name="preset"/>
          <TryStep id="_2JYG">
            <ProcedureCall id="_2JYH" procedure="utility.flh_mci.preset">
              <variable name="preset">$(preset)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_2JYI" maxerror="0">
              <TryStep id="_2JYJ">
                <ProcedureCall id="_2JYK" procedure="utility.flh_mci.preset">
                  <variable name="preset">$(preset)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_2JYL"
                               maxerror="0">
                  <ProcedureCall id="_2JYM" procedure="run-log.logError">
                    <variable name="message">Preset $(preset) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_2JYN" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_2JYO"
                         procedure="check.flh_mci_processor.checked.save_as"/>
          <IfSequence id="_2JYP" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2JYQ"
                           procedure="do_click.flh_mci_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_2JYR"
                         procedure="check.flh_mci_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JYS" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.tabbed.tab"
                          event="MOUSE_MPRC" id="_2JYT" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_2JaN" name="fub_wew_processor">
        <Procedure id="_2JaO" name="compute_chl_band">
          <comment>@teststep Check-in checkbox 'Compute chlorophill-a concentration band'.</comment>
          <ProcedureCall id="_2JaP"
                         procedure="check.fub_wew_processor.checked.compute_chl_band"/>
          <IfSequence id="_2JaQ"
                      test="&#34;$(compute_chl_band)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2JaR"
                           procedure="do_click.fub_wew_processor.compute_chl_band"/>
          </IfSequence>
          <ProcedureCall id="_2JaS"
                         procedure="check.fub_wew_processor.checked.compute_chl_band_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JaT" name="compute_tsm_band">
          <comment>@teststep Check-in checkbox 'Compute total suspended matter band'.</comment>
          <ProcedureCall id="_2JaU"
                         procedure="check.fub_wew_processor.checked.compute_tsm_band"/>
          <IfSequence id="_2JaV"
                      test="&#34;$(compute_tsm_band)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2JaW"
                           procedure="do_click.fub_wew_processor.compute_tsm_band"/>
          </IfSequence>
          <ProcedureCall id="_2JaX"
                         procedure="check.fub_wew_processor.checked.compute_tsm_band_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JaY" name="compute_ys_band">
          <comment>@teststep Check-in checkbox 'Compute yellow substances band'.</comment>
          <ProcedureCall id="_2JaZ"
                         procedure="check.fub_wew_processor.checked.compute_ys_band"/>
          <IfSequence id="_2Jaa"
                      test="&#34;$(compute_ys_band)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jab"
                           procedure="do_click.fub_wew_processor.compute_ys_band"/>
          </IfSequence>
          <ProcedureCall id="_2Jac"
                         procedure="check.fub_wew_processor.checked.compute_ys_band_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jad" name="compute_aot_band">
          <comment>@teststep Check-in checkbox 'Compute water leaving reflectances and AOT bands'.</comment>
          <ProcedureCall id="_2Jae"
                         procedure="check.fub_wew_processor.checked.compute_aot_band"/>
          <IfSequence id="_2Jaf"
                      test="&#34;$(compute_aot_band)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jag"
                           procedure="do_click.fub_wew_processor.compute_aot_band"/>
          </IfSequence>
          <ProcedureCall id="_2Jah"
                         procedure="check.fub_wew_processor.checked.compute_aot_band_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jai" name="check_whether_suspectIs_valid">
          <comment>@teststep Check-in checkbox 'Check whether l1_flags.SUSPECT is valid'.</comment>
          <ProcedureCall id="_2Jaj"
                         procedure="check.fub_wew_processor.checked.check_whether_suspectIs_valid"/>
          <IfSequence id="_2Jak"
                      test="&#34;$(check_whether_suspectIs_valid)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jal"
                           procedure="do_click.fub_wew_processor.check_whether_suspectIs_valid"/>
          </IfSequence>
          <ProcedureCall id="_2Jam"
                         procedure="check.fub_wew_processor.checked.check_whether_suspectIs_valid_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jan" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_2Jao"
                         procedure="check.fub_wew_processor.checked.open_in_snap"/>
          <IfSequence id="_2Jap"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jaq"
                           procedure="check.fub_wew_processor.enabled.open_in_snap"/>
            <IfSequence id="_2Jar"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_2Jas" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_2Jat"
                             procedure="select.fub_wew_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_2Jau"
                           procedure="do_click.fub_wew_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_2Jav"
                         procedure="check.fub_wew_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jaw" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_2Jax">
            <ProcedureCall id="_2Jay"
                           procedure="utility.fub_wew.output_format_fub_wew_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_2Jaz" maxerror="0">
              <TryStep id="_2Ja+">
                <ProcedureCall id="_2Ja-"
                               procedure="utility.fub_wew.output_format_fub_wew_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_2Jb0"
                               maxerror="0">
                  <ProcedureCall id="_2Jb1" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_2Jb2" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_2Jb3"
                         procedure="check.fub_wew_processor.checked.save_as"/>
          <IfSequence id="_2Jb4" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jb5"
                           procedure="do_click.fub_wew_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_2Jb6"
                         procedure="check.fub_wew_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jb7" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFUB/WeW_Water_Processor.tabbed.tab"
                          event="MOUSE_MPRC" id="_2Jb8" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_2Jb9" name="s2_mci_processor">
        <Procedure id="_2JbZ" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_2Jba"
                         procedure="check.s2_mci_processor.checked.open_in_snap"/>
          <IfSequence id="_2Jbb"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jbc"
                           procedure="check.s2_mci_processor.enabled.open_in_snap"/>
            <IfSequence id="_2Jbd"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_2Jbe" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_2Jbf"
                             procedure="select.s2_mci_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_2Jbg"
                           procedure="do_click.s2_mci_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_2Jbh"
                         procedure="check.s2_mci_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jbi" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_2Jbj">
            <ProcedureCall id="_2Jbk"
                           procedure="utility.s2_mci_processor.output_format_s2_mci_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_2Jbl" maxerror="0">
              <TryStep id="_2Jbm">
                <ProcedureCall id="_2JfG"
                               procedure="utility.s2_mci_processor.output_format_s2_mci_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_2Jbo"
                               maxerror="0">
                  <ProcedureCall id="_2Jbp" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_2Jbq" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_2Jbr"
                         procedure="check.s2_mci_processor.checked.save_as"/>
          <IfSequence id="_2Jbs" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jbt"
                           procedure="do_click.s2_mci_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_2Jbu"
                         procedure="check.s2_mci_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Je-" name="generate_slope_band">
          <comment>@teststep Check-in checkbox 'Generate slope band'</comment>
          <ProcedureCall id="_2Jf0"
                         procedure="check.s2_mci_processor.checked.generate_slope_parameter"/>
          <IfSequence id="_2Jf1"
                      test="&#34;$(generate_slope_parameter)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jf2"
                           procedure="do_click.s2_mci_processor.generate_slope_band"/>
          </IfSequence>
          <ProcedureCall id="_2Jf3"
                         procedure="check.s2_mci_processor.checked.generate_slope_parameter_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2Jf4" name="preset">
          <variable name="preset"/>
          <TryStep id="_2Jf5">
            <ProcedureCall id="_2Jf6"
                           procedure="utility.s2_mci_processor.preset">
              <variable name="preset">$(preset)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_2Jf7" maxerror="0">
              <TryStep id="_2Jf8">
                <ProcedureCall id="_2JfF"
                               procedure="utility.s2_mci_processor.preset">
                  <variable name="preset">$(preset)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_2JfA"
                               maxerror="0">
                  <ProcedureCall id="_2JfB" procedure="run-log.logError">
                    <variable name="message">Preset $(preset) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_2Jbv" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogS2_MCI_Processor.tabbed.tab"
                          event="MOUSE_MPRC" id="_2Jee" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1q9G" name="owt_classification">
        <Procedure id="_1q9W" name="write_input_reflectances">
          <comment>@teststep Check-in checkbox 'Write input reflectances'</comment>
          <ProcedureCall id="_2Jcd"
                         procedure="check.owt_classification.checked.write_input_reflectances"/>
          <IfSequence id="_2Jce"
                      test="&#34;$(write_input_reflectances)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jcf"
                           procedure="do_click.owt_classification.write_input_reflectances"/>
          </IfSequence>
          <ProcedureCall id="_2Jcg"
                         procedure="check.owt_classification.checked.write_input_reflectances_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_2JcU" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_2JcV"
                         procedure="check.owt_classification.checked.open_in_snap"/>
          <IfSequence id="_2JcW"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2JcX"
                           procedure="check.owt_classification.enabled.open_in_snap"/>
            <IfSequence id="_2JcY"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_2JcZ" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_2Jca"
                             procedure="select.owt_classification.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_2Jcb"
                           procedure="do_click.owt_classification.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_2Jcc"
                         procedure="check.owt_classification.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1q9J" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1q9K">
            <ProcedureCall id="_1qAX"
                           procedure="utility.owt_classification.output_format_owt_classification">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1q9M" maxerror="0">
              <TryStep id="_1q9N">
                <ProcedureCall id="_2JcT"
                               procedure="utility.owt_classification.output_format_owt_classification">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1q9P"
                               maxerror="0">
                  <ProcedureCall id="_1q9Q" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_2Jdt" name="owt_type">
          <variable name="owt_type"/>
          <comment>@teststep Select OWT Type.</comment>
          <TryStep id="_2Jdu">
            <ProcedureCall id="_2Jdv"
                           procedure="utility.owt_classification.owt_type">
              <variable name="owt_type">$(owt_type)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_2Jdw" maxerror="0">
              <TryStep id="_2Jdx">
                <ProcedureCall id="_2JeF"
                               procedure="utility.owt_classification.owt_type">
                  <variable name="owt_type">$(owt_type)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_2Jdz"
                               maxerror="0">
                  <ProcedureCall id="_2Jd+" procedure="run-log.logError">
                    <variable name="message">$(owt_type) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_2Jd-" name="input_reflectance_is">
          <variable name="input_reflec"/>
          <comment>@teststep Select Input reflectance.</comment>
          <TryStep id="_2Je0">
            <ProcedureCall id="_2Je1"
                           procedure="utility.owt_classification.input_reflectance_is">
              <variable name="input_reflec">$(input_reflec)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_2Je2" maxerror="0">
              <TryStep id="_2Je3">
                <ProcedureCall id="_2JeG"
                               procedure="utility.owt_classification.input_reflectance_is">
                  <variable name="input_reflec">$(input_reflec)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_2Je5"
                               maxerror="0">
                  <ProcedureCall id="_2Je6" procedure="run-log.logError">
                    <variable name="message">$(input_reflec) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1q9R" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1q9S"
                         procedure="check.owt_classification.checked.save_as"/>
          <IfSequence id="_1q9T" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1q9U"
                           procedure="do_click.owt_classification.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1q9V"
                         procedure="check.owt_classification.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1q9H" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOWT_Classification.tabbed.tab"
                          event="MOUSE_MPRC" id="_2JcK" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1s16" name="fu_classification">
        <Procedure id="_1s2r" name="copy_all_source_bands">
          <comment>@teststep Check-in checkbox 'Copy all source bands'.</comment>
          <ProcedureCall id="_1s2s"
                         procedure="check.fu_classification.checked.copy_all_source_bands"/>
          <IfSequence id="_1s2t"
                      test="&#34;$(copy_all_source_bands)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1s2u"
                           procedure="do_click.fu_classification.copy_all_source_bands"/>
          </IfSequence>
          <ProcedureCall id="_1s2v"
                         procedure="check.fu_classification.checked.copy_all_source_bands_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s1a" name="instrument">
          <variable name="instrument"/>
          <TryStep id="_1s1b">
            <ProcedureCall id="_1s1c"
                           procedure="utility.fu_classification.instrument">
              <variable name="instrument">$(instrument)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1s1d" maxerror="0">
              <TryStep id="_1s1e">
                <ProcedureCall id="_1s2w"
                               procedure="utility.fu_classification.instrument">
                  <variable name="instrument">$(instrument)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1s1g"
                               maxerror="0">
                  <TryStep id="_1s3Y">
                    <ProcedureCall id="_1s3Z"
                                   procedure="utility.fu_classification.instrument1">
                      <variable name="instrument">$(instrument)</variable>
                    </ProcedureCall>
                    <CatchSequence exception="TestException" id="_1s3a"
                                   maxerror="0">
                      <ProcedureCall id="_1s3b" procedure="run-log.logError">
                        <variable name="message">Instrument $(instrument) can not be selected</variable>
                        <variable name="withScreenshots">true</variable>
                      </ProcedureCall>
                    </CatchSequence>
                  </TryStep>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sXx" name="input_is_irradiance_reflectance">
          <comment>@teststep Check-in checkbox 'Input is irradiance reflectance'.</comment>
          <ProcedureCall id="_1sXy"
                         procedure="check.fu_classification.checked.input_is_irradiance_reflectance"/>
          <IfSequence id="_1sXz"
                      test="&#34;$(inputIs_irradiance_reflectance)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sX+"
                           procedure="do_click.fu_classification.input_is_irradiance_reflectance"/>
          </IfSequence>
          <ProcedureCall id="_1sX-"
                         procedure="check.fu_classification.checked.input_is_irradiance_reflectance_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sY0" name="include_intermediate_results">
          <comment>@teststep Check-in checkbox 'Include intermediate results in output'.</comment>
          <ProcedureCall id="_1sY1"
                         procedure="check.fu_classification.checked.include_intermediate_results"/>
          <IfSequence id="_1sY2"
                      test="&#34;$(include_intermediate_results)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sY3"
                           procedure="do_click.fu_classification.include_intermediate_results"/>
          </IfSequence>
          <ProcedureCall id="_1sY4"
                         procedure="check.fu_classification.checked.include_intermediate_results_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s1M" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'.</comment>
          <ProcedureCall id="_1s1N"
                         procedure="check.fu_classification.checked.open_in_snap"/>
          <IfSequence id="_1s1O"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1s1P"
                           procedure="check.fu_classification.enabled.open_in_snap"/>
            <IfSequence id="_1s1Q"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1s1R" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1s1S"
                             procedure="select.fu_classification.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1s1T"
                           procedure="do_click.fu_classification.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1s1U"
                         procedure="check.fu_classification.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s19" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1s1A">
            <ProcedureCall id="_1s1B"
                           procedure="utility.fu_classification.output_format_fu_classification">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1s1C" maxerror="0">
              <TryStep id="_1s1D">
                <ProcedureCall id="_1s1u"
                               procedure="utility.fu_classification.output_format_fu_classification">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1s1F"
                               maxerror="0">
                  <ProcedureCall id="_1s1G" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1s1H" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'.</comment>
          <ProcedureCall id="_1s1I"
                         procedure="check.fu_classification.checked.save_as"/>
          <IfSequence id="_1s1J" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1s1K"
                           procedure="do_click.fu_classification.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1s1L"
                         procedure="check.fu_classification.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s17" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFU_Classification.tabbed.tab"
                          event="MOUSE_MPRC" id="_1s7Y" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1rqB" name="kmean_cluster_analysis">
        <Procedure id="_1rqp" name="all_source_bands">
          <variable name="source_band"/>
          <comment>@teststep Select all source bands.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogK-Means_Cluster_Analysis.sourceBandNames.source_band"
                          event="MOUSE_MPRC" id="_1rsK" modifiers="16"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_PRESSED" id="_1rqr" keychar="65535"
                        keycode="17" modifiers="2"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_PTR" id="_1rqs" keychar="1" keycode="65"
                        modifiers="2"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_RELEASED" id="_1rqt" keychar="65535"
                        keycode="17" modifiers="0"/>
        </Procedure>
        <Procedure id="_1rqR" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1rr6"
                         procedure="check.k_means_cluster_analysis.checked.open_in_snap"/>
          <IfSequence id="_1rqT"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rrA"
                           procedure="check.k_means_cluster_analysis.enabled.open_in_snap"/>
            <IfSequence id="_1rqV"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1rqW" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1rrB"
                             procedure="select.kmean_cluster_analysis.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1rr9"
                           procedure="do_click.kmean_cluster_analysis.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1rr8"
                         procedure="check.k_means_cluster_analysis.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1rqE" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format.</comment>
          <TryStep id="_1rqF">
            <ProcedureCall id="_1rr3"
                           procedure="utility.k_mean_cluster_analysis.output_format_k_mean_cluster_analysis">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1rqH" maxerror="0">
              <TryStep id="_1rqI">
                <ProcedureCall id="_1rr4"
                               procedure="utility.k_mean_cluster_analysis.output_format_k_mean_cluster_analysis">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1rqK"
                               maxerror="0">
                  <ProcedureCall id="_1rqL" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1rqf" name="roi_mask_name">
          <variable name="roi_mask_name"/>
          <comment>@teststep Select ROI mask $(roi_mask_name).</comment>
          <TryStep id="_1rqg">
            <ProcedureCall id="_1rra"
                           procedure="utility.k_mean_cluster_analysis.roi_mask_name_principle_component_analysis">
              <variable name="roi_mask_name">$(roi_mask_name)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1rqi" maxerror="0">
              <TryStep id="_1rqj">
                <ProcedureCall id="_1rrb"
                               procedure="utility.k_mean_cluster_analysis.roi_mask_name_principle_component_analysis">
                  <variable name="roi_mask_name">$(roi_mask_name)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1rql"
                               maxerror="0">
                  <ProcedureCall id="_1rqm" procedure="run-log.logError">
                    <variable name="message">$(roi_mask_name) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1rqM" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1rqN"
                         procedure="check.k_means_cluster_analysis.checked.save_as"/>
          <IfSequence id="_1rqO" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rqP"
                           procedure="do_click.kmean_cluster_analysis.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1rr5"
                         procedure="check.k_means_cluster_analysis.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1rqn" name="source_band">
          <variable name="source_band"/>
          <comment>@teststep Select source band $(source_band).</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogK-Means_Cluster_Analysis.sourceBandNames.source_band"
                          event="MOUSE_MPRC" id="_1rsJ" modifiers="16"/>
        </Procedure>
        <Procedure id="_1rqC" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogK-Means_Cluster_Analysis.tabbed.tab"
                          event="MOUSE_MPRC" id="_1rpd" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qdE" name="land_water_mask">
        <Procedure id="_1qdU" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1roT"
                         procedure="check.land_water_mask.checked.open_in_snap"/>
          <IfSequence id="_1qdW"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1roW"
                           procedure="check.land_water_mask.enabled.open_in_snap"/>
            <IfSequence id="_1qdY"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qdZ" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qda"
                             procedure="select.land_water_mask.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1roV"
                           procedure="do_click.land_water_mask.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1roX"
                         procedure="check.land_water_mask.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qdH" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select $(output_format) output format</comment>
          <TryStep id="_1qdI">
            <ProcedureCall id="_1roR"
                           procedure="utility.land_water_mask.output_format_land_water_mask">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qdK" maxerror="0">
              <TryStep id="_1qdL">
                <ProcedureCall id="_1roS"
                               procedure="utility.land_water_mask.output_format_land_water_mask">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qdN"
                               maxerror="0">
                  <ProcedureCall id="_1qdO" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1rox" name="resolution">
          <variable name="resolution"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1rpM">
            <ProcedureCall id="_1rpN"
                           procedure="utility.land_water_mask.resolution_help">
              <variable name="resolution">$(resolution)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1rpO" maxerror="0">
              <TryStep id="_1rpP">
                <ProcedureCall id="_1rpT"
                               procedure="utility.land_water_mask.resolution_help">
                  <variable name="resolution">$(resolution)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1rpR"
                               maxerror="0">
                  <ProcedureCall id="_1rpS" procedure="run-log.logError">
                    <variable name="message">$(resolution) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qdP" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qdQ"
                         procedure="check.land_water_mask.checked.save_as"/>
          <IfSequence id="_1qdR" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qdS"
                           procedure="do_click.land_water_mask.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1roU"
                         procedure="check.land_water_mask.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qdF" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogLand/Water_Mask.tabbed.tab"
                          event="MOUSE_MPRC" id="_1ro9" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qLR" name="meris_cloud_probability">
        <Procedure id="_1qN0" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qN1"
                         procedure="check.meris_cloud_probability.checked.open_in_snap"/>
          <IfSequence id="_1qN2"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qYH"
                           procedure="check.meris_cloud_probability.enabled.open_in_snap"/>
            <IfSequence id="_1qYI"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qYJ" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qYK"
                             procedure="select.meris_cloud_probability.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qN3"
                           procedure="do_click.meris_cloud_probability.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qN4"
                         procedure="check.meris_cloud_probability.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qMp" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1qMq">
            <ProcedureCall id="_1qPw"
                           procedure="utility.meris_cloud_probability.output_format_meris_cloud_probability">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qMs" maxerror="0">
              <TryStep id="_1qMt">
                <ProcedureCall id="_1qPx"
                               procedure="utility.meris_cloud_probability.output_format_meris_cloud_probability">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qMv"
                               maxerror="0">
                  <ProcedureCall id="_1qMw" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qMx" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qMy"
                         procedure="check.meris_cloud_probability.checked.save_as"/>
          <IfSequence id="_1qMz" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qM+"
                           procedure="do_click.meris_cloud_probability.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qM-"
                         procedure="check.meris_cloud_probability.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qCM" name="meris_radiometric_correction">
        <Procedure id="_1qCc" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qJ1"
                         procedure="check.meris_radiometric_correction.checked.open_in_snap"/>
          <IfSequence id="_1qCe"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qY5"
                           procedure="check.meris_radiometric_correction.enabled.open_in_snap"/>
            <IfSequence id="_1qY6"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qY7" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qY8"
                             procedure="select.meris_radiometric_correction.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qJb"
                           procedure="do_click.meris_radiometric_correction.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qJ2"
                         procedure="check.meris_radiometric_correction.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qCP" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1qCQ">
            <ProcedureCall id="_1qDW"
                           procedure="utility.meris_radiometric_correction.output_format_meris_radiometric_correction">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qCS" maxerror="0">
              <TryStep id="_1qCT">
                <ProcedureCall id="_1qDX"
                               procedure="utility.meris_radiometric_correction.output_format_meris_radiometric_correction">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qCV"
                               maxerror="0">
                  <ProcedureCall id="_1qCW" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qJ3" name="perform_calibration">
          <comment>@teststep Check-in checkbox 'Perform calibration'.</comment>
          <ProcedureCall id="_1qJ4"
                         procedure="check.meris_radiometric_correction.checked.perform_calibration"/>
          <IfSequence id="_1qJ5"
                      test="&#34;$(perform_calibration)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJd"
                           procedure="do_click.meris_radiometric_correction.perform_calibration"/>
          </IfSequence>
          <ProcedureCall id="_1qJ7"
                         procedure="check.meris_radiometric_correction.checked.perform_calibration_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qJD" name="perform_equalisation">
          <comment>@teststep Check-in checkbox 'Perform equalisation'.</comment>
          <ProcedureCall id="_1qJE"
                         procedure="check.meris_radiometric_correction.checked.perform_equalisation"/>
          <IfSequence id="_1qJF"
                      test="&#34;$(perform_equalization)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJf"
                           procedure="do_click.meris_radiometric_correction.perform_equalization"/>
          </IfSequence>
          <ProcedureCall id="_1qJH"
                         procedure="check.meris_radiometric_correction.checked.perform_equalisation_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qJI" name="perform_rad_to_refl">
          <comment>@teststep Check-in checkbox 'Perform radiance to reflectance'</comment>
          <ProcedureCall id="_1qJJ"
                         procedure="check.meris_radiometric_correction.checked.perform_rad_to_refl"/>
          <IfSequence id="_1qJK"
                      test="&#34;$(perform_rad_to_refl)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJg"
                           procedure="do_click.meris_radiometric_correction.perform_rad_to_refl"/>
          </IfSequence>
          <ProcedureCall id="_1qJM"
                         procedure="check.meris_radiometric_correction.checked.perform_rad_to_refl_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qJ8" name="perform_smile_effect">
          <comment>@teststep Check-in checkbox 'Perform smile-effect correction'.</comment>
          <ProcedureCall id="_1qJ9"
                         procedure="check.meris_radiometric_correction.checked.perform_smile_effect"/>
          <IfSequence id="_1qJA"
                      test="&#34;$(perform_smile_effect)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJe"
                           procedure="do_click.meris_radiometric_correction.perform_smile_effect"/>
          </IfSequence>
          <ProcedureCall id="_1qJC"
                         procedure="check.meris_radiometric_correction.checked.perform_smile_effect_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qJP" name="reprocessing_version">
          <variable name="reprocessing_version"/>
          <comment>@teststep Select reprocessing version.</comment>
          <TryStep id="_1qJQ">
            <ProcedureCall id="_1qJZ"
                           procedure="utility.meris_radiometric_correction.reprocessing_version">
              <variable name="reprocessing_version">$(reprocessing_version)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qJS" maxerror="0">
              <TryStep id="_1qJT">
                <ProcedureCall id="_1qJa"
                               procedure="utility.meris_radiometric_correction.reprocessing_version">
                  <variable name="reprocessing_version">$(reprocessing_version)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qJV"
                               maxerror="0">
                  <ProcedureCall id="_1qJW" procedure="run-log.logError">
                    <variable name="message">$(reprocessing_version) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qCX" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qCY"
                         procedure="check.meris_radiometric_correction.checked.save_as"/>
          <IfSequence id="_1qCZ" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qJc"
                           procedure="do_click.meris_radiometric_correction.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qJ0"
                         procedure="check.meris_radiometric_correction.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qCN" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1psM" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pfw" name="mosaicing">
        <Package id="_1phq" name="io_parameters">
          <Procedure id="_1pgA" name="open_in_snap">
            <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
            <ProcedureCall id="_1piT"
                           procedure="check.mosaicing.checked.io_parameters.open_in_snap"/>
            <IfSequence id="_1pgC"
                        test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1phx"
                             procedure="check.mosaicing.enabled.io_parameters.open_in_snap"/>
              <IfSequence id="_1phy"
                          test="&#34;$(open_in_snap_en)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1piU"
                               procedure="do_click.mosaicing.io_parameters.open_in_snap"/>
                <ElseSequence id="_1ph+">
                  <ProcedureCall id="_1piJ"
                                 procedure="daten_format.beam_dimap"/>
                  <ProcedureCall id="_1pi0"
                                 procedure="select.mosaicing.io_parameters.output_format">
                    <variable name="output_format">$(beam_dimap)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_1piV"
                                 procedure="do_click.mosaicing.io_parameters.open_in_snap"/>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1piX"
                           procedure="check.mosaicing.checked.io_parameters.open_in_snap_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pfz" name="output_format">
            <variable name="output_format"/>
            <comment>@teststep Select output format</comment>
            <TryStep id="_1pf+">
              <ProcedureCall id="_1piH"
                             procedure="utility.mosaicing.output_format_mosaic">
                <variable name="output_format_name">$(output_format)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1pg0"
                             maxerror="0">
                <TryStep id="_1pg1">
                  <ProcedureCall id="_1piI"
                                 procedure="utility.mosaicing.output_format_mosaic">
                    <variable name="output_format_name">$(output_format)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1pg3"
                                 maxerror="0">
                    <ProcedureCall id="_1pg4" procedure="run-log.logError">
                      <variable name="message">$(output_format) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pg5" name="save_as">
            <comment>@teststep Check-in checkbox 'Save as'</comment>
            <ProcedureCall id="_1pg6"
                           procedure="check.mosaicing.checked.io_parameters.save_as"/>
            <IfSequence id="_1pg7"
                        test="&#34;$(save_as)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pht"
                             procedure="check.mosaicing.enabled.io_parameters.save_as"/>
              <IfSequence id="_1phu"
                          test="&#34;$(save_as_enabled)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1pg8"
                               procedure="do_click.mosaicing.io_parameters.save_as"/>
                <ElseSequence id="_1phv">
                  <ProcedureCall id="_1phw" procedure="run-log.logError">
                    <variable name="message">Save As Checkbox is disabled</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1piW"
                           procedure="check.mosaicing.checked.io_parameters.save_as_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1piK" name="update_target_product">
            <comment>@teststep Check-in checkbox 'Update target product'</comment>
            <ProcedureCall id="_1piL"
                           procedure="check.mosaicing.checked.io_parameters.update_target_product"/>
            <IfSequence id="_1piM"
                        test="&#34;$(update_target_product)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1piP"
                             procedure="do_click.mosaicing.io_parameters.update_target_product"/>
            </IfSequence>
            <ProcedureCall id="_1piY"
                           procedure="check.mosaicing.checked.io_parameters.update_target_product_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1phr" name="map_definition">
          <Procedure id="_1pjA" name="display_source_products">
            <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
            <ProcedureCall id="_1pjB"
                           procedure="check.mosaicing.checked.map_definition.display_source_products"/>
            <IfSequence id="_1pjC"
                        test="&#34;$(display_source_products)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pjF"
                             procedure="do_click.mosaicing.map_definition.display_source_products_checkbox"/>
            </IfSequence>
            <ProcedureCall id="_1pjK"
                           procedure="check.mosaicing.checked.map_definition.display_source_products_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1q9F" name="elevation_model">
            <variable name="elevation_model"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMosaicing.elevationModelName"
                            event="MOUSE_MPRC" id="_1prU" modifiers="16"
                            x="143" y="9"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMosaicing.listInvokerName:_elevationModelName.elevation_model"
                            event="MOUSE_MPRC" id="_1prV" modifiers="16"/>
          </Procedure>
          <Procedure id="_1pgN" name="geodetic_datum">
            <variable name="geodetic_datum"/>
            <comment>@teststep Select geodetic datum</comment>
            <ProcedureCall id="_1pgO"
                           procedure="check.mosaicing.enabled.map_definition.geodetic_datum"/>
            <IfSequence id="_1pgP"
                        test="&#34;$(geodetic_datum_enabled)&#34;==&#34;true&#34;">
              <TryStep id="_1pgQ">
                <ProcedureCall id="_1pgR" procedure="utility.mosaicing.datum">
                  <variable name="geodetic_datum">$(geodetic_datum)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pgS"
                               maxerror="0">
                  <TryStep id="_1pgT">
                    <ProcedureCall id="_1pjR"
                                   procedure="utility.mosaicing.datum">
                      <variable name="geodetic_datum">$(geodetic_datum)</variable>
                    </ProcedureCall>
                    <CatchSequence exception="TestException" id="_1pgV"
                                   maxerror="0">
                      <ProcedureCall id="_1pgW" procedure="run-log.logError">
                        <variable name="message">$(geodetic_datum) can not be selected</variable>
                        <variable name="withScreenshots">true</variable>
                      </ProcedureCall>
                    </CatchSequence>
                  </TryStep>
                </CatchSequence>
              </TryStep>
            </IfSequence>
          </Procedure>
          <Procedure id="_1pgF" name="projection">
            <variable name="projection"/>
            <comment>@teststep Select projection</comment>
            <TryStep id="_1pgG">
              <ProcedureCall id="_1pgH"
                             procedure="utility.mosaicing.projection">
                <variable name="projection">$(projection)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1pgI"
                             maxerror="0">
                <TryStep id="_1pgJ">
                  <ProcedureCall id="_1pjQ"
                                 procedure="utility.mosaicing.projection">
                    <variable name="projection">$(projection)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1pgL"
                                 maxerror="0">
                    <ProcedureCall id="_1pgM" procedure="run-log.logError">
                      <variable name="message">$(projection) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
        </Package>
        <Package id="_1phs" name="variables_conditions"/>
        <Procedure id="_1pfx" name="tab">
          <variable name="tab"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.tabbed.tab"
                          event="MOUSE_MPRC" id="_1pVo" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pS1" name="ndvi_processor">
        <Procedure id="_1pWd" name="nir_source_band">
          <variable name="nir_source_band"/>
          <TryStep id="_1pWo">
            <ProcedureCall id="_1pWp"
                           procedure="utility.ndvi.nir_source_band_ndvi_processor">
              <variable name="nir_source_band">$(nir_source_band)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pWq" maxerror="0">
              <TryStep id="_1pWr">
                <ProcedureCall id="_1pWv"
                               procedure="utility.ndvi.nir_source_band_ndvi_processor">
                  <variable name="nir_source_band">$(nir_source_band)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pWt"
                               maxerror="0">
                  <ProcedureCall id="_1pWu" procedure="run-log.logError">
                    <variable name="message">$(nir_source_band) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pWD" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pWE"
                         procedure="check.ndvi_processor.checked.open_in_snap"/>
          <IfSequence id="_1pWF"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXj"
                           procedure="check.ndvi_processor.enabled.open_in_snap"/>
            <IfSequence id="_1qXk"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXl" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXm"
                             procedure="select.ndvi_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pWG"
                           procedure="do_click.ndvi_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pWH"
                         procedure="check.ndvi_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pW0" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1pW1">
            <ProcedureCall id="_1pW2"
                           procedure="utility.ndvi.output_format_ndvi_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pW3" maxerror="0">
              <TryStep id="_1pW4">
                <ProcedureCall id="_1pWJ"
                               procedure="utility.ndvi.output_format_ndvi_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pW6"
                               maxerror="0">
                  <ProcedureCall id="_1pW7" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pWb" name="red_source_band">
          <variable name="red_source_band"/>
          <TryStep id="_1pWf">
            <ProcedureCall id="_1pWm"
                           procedure="utility.ndvi.red_source_band_ndvi_processor">
              <variable name="red_source_band">$(red_source_band)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pWh" maxerror="0">
              <TryStep id="_1pWi">
                <ProcedureCall id="_1pWn"
                               procedure="utility.ndvi.red_source_band_ndvi_processor">
                  <variable name="red_source_band">$(red_source_band)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pWk"
                               maxerror="0">
                  <ProcedureCall id="_1pWl" procedure="run-log.logError">
                    <variable name="message">$(red_source_band) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pW8" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1pW9"
                         procedure="check.ndvi_processor.checked.save_as"/>
          <IfSequence id="_1pWA" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pWB"
                           procedure="do_click.ndvi_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pWC"
                         procedure="check.ndvi_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pS4" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.tabbed_tab" event="MOUSE_MPRC"
                          id="_1pV-" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1sDv" name="olci_smile_correction">
        <Procedure id="_1sD-" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sE0"
                         procedure="check.olci_smile_correction.checked.open_in_snap"/>
          <IfSequence id="_1sE1"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sE2"
                           procedure="check.olci_smile_correction.enabled.open_in_snap"/>
            <IfSequence id="_1sE3"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sE4" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sE5"
                             procedure="select.olci_smile_correction.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sE6"
                           procedure="do_click.olci_smile_correction.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sE7"
                         procedure="check.olci_smile_correction.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sE8" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1sE9">
            <ProcedureCall id="_1sEq"
                           procedure="utility.olci_smile_correction.output_format_olci_smile_correction">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sEB" maxerror="0">
              <TryStep id="_1sEC">
                <ProcedureCall id="_1sEr"
                               procedure="utility.olci_smile_correction.output_format_olci_smile_correction">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sEE"
                               maxerror="0">
                  <ProcedureCall id="_1sEF" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sEG" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1sEH"
                         procedure="check.olci_smile_correction.checked.save_as"/>
          <IfSequence id="_1sEI" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sEJ"
                           procedure="do_click.olci_smile_correction.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sEK"
                         procedure="check.olci_smile_correction.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sEL" name="perform_rad_to_refl">
          <comment>@teststep Check-in checkbox 'Perform radiance to reflectance conversion'.</comment>
          <ProcedureCall id="_1sEM"
                         procedure="check.olci_smile_correction.checked.perform_rad_to_refl"/>
          <IfSequence id="_1sEN"
                      test="&#34;$(perform_rad_to_refl)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sEO"
                           procedure="do_click.olci_smile_correction.perform_rad_to_refl"/>
          </IfSequence>
          <ProcedureCall id="_1sEP"
                         procedure="check.olci_smile_correction.checked.perform_rad_to_refl_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sEV" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOLCI_Smile_Correction....tabbed.tab"
                          event="MOUSE_MPRC" id="_1s4o" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1sCv" name="pdu_stitching">
        <Procedure id="_1sD9" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sDA"
                         procedure="check.pdu_stitching.checked.open_in_snap"/>
          <IfSequence id="_1sDB"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sDo"
                           procedure="do_click.pdu_stitching.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sDH"
                         procedure="check.pdu_stitching.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1q9O" name="principle_component_analysis">
        <Procedure id="_1qdB" name="all_source_bands">
          <variable name="source_band"/>
          <comment>@teststep Select all source bands.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.sourceBandNames.source_band"
                          event="MOUSE_MPRC" id="_1qWx" modifiers="16"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_PRESSED" id="_1qWy" keychar="65535"
                        keycode="17" modifiers="2"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_PTR" id="_1qWz" keychar="1" keycode="65"
                        modifiers="2"/>
          <KeyEventStep client="$(client)"
                        component="dialogPrincipal_Component_Analysis2.sourceBandNames"
                        event="KEY_RELEASED" id="_1qW+" keychar="65535"
                        keycode="17" modifiers="0"/>
        </Procedure>
        <Procedure id="_1qaa" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qab"
                         procedure="check.principle_component_analysis.checked.open_in_snap"/>
          <IfSequence id="_1qac"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qad"
                           procedure="check.principle_component_analysis.enabled.open_in_snap"/>
            <IfSequence id="_1qae"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qaf" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qag"
                             procedure="select.principle_component_analysis.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qah"
                           procedure="do_click.principal_component_analysis.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qai"
                         procedure="check.principle_component_analysis.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qaN" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format.</comment>
          <TryStep id="_1qaO">
            <ProcedureCall id="_1qaP"
                           procedure="utility.principle_component_analysis.output_format_principle_component_analysis">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qaQ" maxerror="0">
              <TryStep id="_1qaR">
                <ProcedureCall id="_1qcM"
                               procedure="utility.principle_component_analysis.output_format_principle_component_analysis">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qaT"
                               maxerror="0">
                  <ProcedureCall id="_1qaU" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qaj" name="remove_non_roi_pixels">
          <comment>@teststep Check-in checkbox 'Remove non-ROI pixels'.</comment>
          <ProcedureCall id="_1qak"
                         procedure="check.principle_component_analysis.checked.remove_non_roi_pixels"/>
          <IfSequence id="_1qal"
                      test="&#34;$(remove_non_roi_pixels)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qam"
                           procedure="do_click.principal_component_analysis.remove_non_roi_pixels"/>
          </IfSequence>
          <ProcedureCall id="_1qan"
                         procedure="check.principle_component_analysis.checked.remove_non_roi_pixels_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qcN" name="roi_mask_name">
          <variable name="roi_mask_name"/>
          <comment>@teststep Select ROI mask $(roi_mask_name).</comment>
          <TryStep id="_1qcO">
            <ProcedureCall id="_1qcP"
                           procedure="utility.principle_component_analysis.roi_mask_name_principle_component_analysis">
              <variable name="roi_mask_name">$(roi_mask_name)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qcQ" maxerror="0">
              <TryStep id="_1qcR">
                <ProcedureCall id="_1qcV"
                               procedure="utility.principle_component_analysis.roi_mask_name_principle_component_analysis">
                  <variable name="roi_mask_name">$(roi_mask_name)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qcT"
                               maxerror="0">
                  <ProcedureCall id="_1qcU" procedure="run-log.logError">
                    <variable name="message">$(roi_mask_name) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qaV" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qaW"
                         procedure="check.principle_component_analysis.checked.save_as"/>
          <IfSequence id="_1qaX" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qaY"
                           procedure="do_click.principal_component_analysis.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qaZ"
                         procedure="check.principle_component_analysis.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qdC" name="source_band">
          <variable name="source_band"/>
          <comment>@teststep Select source band $(source_band).</comment>
          <TryStep id="_1sbI">
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogPrincipal_Component_Analysis2.sourceBandNames.source_band"
                            event="MOUSE_MPRC" id="_1sbH" modifiers="16"/>
            <CatchSequence exception="TestException" id="_1sbJ" maxerror="0">
              <MouseEventStep clicks="1" client="$(client)"
                              component="dialogPrincipal_Component_Analysis2.sourceBandNames.source_band"
                              event="MOUSE_MPRC" id="_1sbK" modifiers="16"
                              predelay="2000"/>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qaL" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1qao" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pW-" name="reprojection">
        <Procedure id="_1pZJ" name="add_delta_lat_lon_bands">
          <comment>@teststep Check-in checkbox 'Add delta lat/lon bands'.</comment>
          <ProcedureCall id="_1pfb"
                         procedure="check.reprojection.checked.add_delta_lat_lon_bands"/>
          <IfSequence id="_1pff"
                      test="&#34;$(add_delta_lat_lon_bands)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pfg"
                           procedure="do_click.reprojection.add_delta_lat_lon_bands"/>
          </IfSequence>
          <ProcedureCall id="_1pfc"
                         procedure="check.reprojection.checked.add_delta_lat_lon_bands_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pdJ" name="geodetic_datum">
          <variable name="geodetic_datum"/>
          <comment>@teststep Select geodetic datum</comment>
          <ProcedureCall id="_1pfO"
                         procedure="check.reprojection.enabled.geodetic_datum"/>
          <IfSequence id="_1pfP"
                      test="&#34;$(geodetic_datum)&#34;==&#34;true&#34;">
            <TryStep id="_1pf0">
              <ProcedureCall id="_1pfJ"
                             procedure="utility.reprojection.datum">
                <variable name="geodetic_datum">$(geodetic_datum)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1pf2"
                             maxerror="0">
                <TryStep id="_1pf3">
                  <ProcedureCall id="_1pfK"
                                 procedure="utility.reprojection.datum">
                    <variable name="geodetic_datum">$(geodetic_datum)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1pf5"
                                 maxerror="0">
                    <ProcedureCall id="_1pf6" procedure="run-log.logError">
                      <variable name="message">$(geodetic_datum) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </IfSequence>
        </Procedure>
        <Procedure id="_1pXH" name="open_in_snap_reprojection_tool">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pXI"
                         procedure="check.reprojection.checked.open_in_snap"/>
          <IfSequence id="_1pXJ"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXr"
                           procedure="check.reprojection.enabled.open_in_snap"/>
            <IfSequence id="_1qXs"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXt" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXu"
                             procedure="select.reprojection.output_format_reprojection_tool">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pXK"
                           procedure="do_click.reprojection.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pXL"
                         procedure="check.reprojection.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pX4" name="output_format_reprojection_tool">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1pX5">
            <ProcedureCall id="_1pX6"
                           procedure="utility.reprojection.output_format_reproj">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pX7" maxerror="0">
              <TryStep id="_1pX8">
                <ProcedureCall id="_1pXR"
                               procedure="utility.reprojection.output_format_reproj">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pXA"
                               maxerror="0">
                  <ProcedureCall id="_1pXB" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pZL" name="preserve_resolution">
          <comment>@teststep Check-in checkbox 'Preserve resolution'.</comment>
          <ProcedureCall id="_1pfX"
                         procedure="check.reprojection.checked.preserve_resolution"/>
          <IfSequence id="_1pfU"
                      test="&#34;$(preserve_resolution)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pfV"
                           procedure="do_click.reprojection.preserve_resolution"/>
          </IfSequence>
          <ProcedureCall id="_1pfY"
                         procedure="check.reprojection.checked.preserve_resolution_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pbj" name="projection">
          <variable name="projection"/>
          <comment>@teststep Select projection</comment>
          <TryStep id="_1pev">
            <ProcedureCall id="_1pew"
                           procedure="utility.reprojection.projection">
              <variable name="projection">$(projection)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pex" maxerror="0">
              <TryStep id="_1pey">
                <ProcedureCall id="_1pfH"
                               procedure="utility.reprojection.projection">
                  <variable name="projection">$(projection)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pe+"
                               maxerror="0">
                  <ProcedureCall id="_1pe-" procedure="run-log.logError">
                    <variable name="message">$(projection) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pZM" name="reproject_tie_point_grids">
          <comment>@teststep Check-in checkbox 'Reproject tie-point grids'.</comment>
          <ProcedureCall id="_1pfZ"
                         procedure="check.reprojection.checked.reproject_tie_point_grids"/>
          <IfSequence id="_1pfd"
                      test="&#34;$(reproject_tie_point_grids)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pfe"
                           procedure="do_click.reprojection.reproject_tie_point_grids"/>
          </IfSequence>
          <ProcedureCall id="_1pfa"
                         procedure="check.reprojection.checked.reproject_tie_point_grids_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pXe" name="resampling_method">
          <variable name="resampling_method"/>
          <variable name="example">Nearest; Bicubic; Bilinear</variable>
          <comment>@teststep Select resampling method</comment>
          <TryStep id="_1pf7">
            <ProcedureCall id="_1pfM"
                           procedure="utility.reprojection.resampling">
              <variable name="resampling_method">$(resampling_method)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pf9" maxerror="0">
              <TryStep id="_1pfA">
                <ProcedureCall id="_1pfN"
                               procedure="utility.reprojection.resampling">
                  <variable name="resampling_method">$(resampling_method)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pfC"
                               maxerror="0">
                  <ProcedureCall id="_1pfD" procedure="run-log.logError">
                    <variable name="message">$(resampling_method) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pXC" name="save_as_reprojection_tool">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1pXD"
                         procedure="check.reprojection.checked.save_as"/>
          <IfSequence id="_1pXE" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pXF"
                           procedure="do_click.reprojection.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pXG"
                         procedure="check.reprojection.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pX2" name="tab_reprojection_tool">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Reprojection Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.tabbed.tab"
                          event="MOUSE_MPRC" id="_1pXT" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1rsL" name="resampling">
        <Procedure id="_1s0O" name="downsampling_method">
          <variable name="downsampling_method"/>
          <comment>@teststep Select downsampling method.</comment>
          <TryStep id="_1s0o">
            <ProcedureCall id="_1s12"
                           procedure="utility.resampling.downsampling_method">
              <variable name="downsampling_method">$(downsampling_method)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1s0q" maxerror="0">
              <TryStep id="_1s0r">
                <ProcedureCall id="_1s14"
                               procedure="utility.resampling.downsampling_method">
                  <variable name="downsampling_method">$(downsampling_method)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1s0t"
                               maxerror="0">
                  <ProcedureCall id="_1s0u" procedure="run-log.logError">
                    <variable name="message">$(downsampling_method) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1rvo" name="flag_downsampling_method">
          <variable name="flag_downsampling_method"/>
          <comment>@teststep Select flag downsampling method.</comment>
          <TryStep id="_1s0v">
            <ProcedureCall id="_1s13"
                           procedure="utility.resampling.flag_downsampling_method">
              <variable name="flag_downsampling_method">$(flag_downsampling_method)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1s0x" maxerror="0">
              <TryStep id="_1s0y">
                <ProcedureCall id="_1s15"
                               procedure="utility.resampling.flag_downsampling_method">
                  <variable name="flag_downsampling_method">$(flag_downsampling_method)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1s0+"
                               maxerror="0">
                  <ProcedureCall id="_1s0-" procedure="run-log.logError">
                    <variable name="message">$(flag_downsampling_method) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1rsb" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1rsc"
                         procedure="check.resampling.checked.open_in_snap"/>
          <IfSequence id="_1rsd"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rse"
                           procedure="check.resampling.enabled.open_in_snap"/>
            <IfSequence id="_1rsf"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1rsg" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1rsh"
                             procedure="select.resampling.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1rsi"
                           procedure="do_click.resampling.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1rsj"
                         procedure="check.resampling.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1rsO" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1rsP">
            <ProcedureCall id="_1r-z"
                           procedure="utility.resampling.output_format_resampling">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1rsR" maxerror="0">
              <TryStep id="_1rsS">
                <ProcedureCall id="_1r-+"
                               procedure="utility.resampling.output_format_resampling">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1rsU"
                               maxerror="0">
                  <ProcedureCall id="_1rsV" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1r-o" name="reference_band_name">
          <variable name="band_name"/>
          <comment>@teststep Select reference band.</comment>
          <TryStep id="_1s0Z">
            <ProcedureCall id="_1s0Y"
                           procedure="utility.resampling.reference_band_name">
              <variable name="band_name">$(band_name)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1s0b" maxerror="0">
              <TryStep id="_1s0c">
                <ProcedureCall id="_1s0g"
                               procedure="utility.resampling.reference_band_name">
                  <variable name="band_name">$(band_name)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1s0e"
                               maxerror="0">
                  <ProcedureCall id="_1s0f" procedure="run-log.logError">
                    <variable name="message">$(band_name) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1rsW" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1rsX"
                         procedure="check.resampling.checked.save_as"/>
          <IfSequence id="_1rsY" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rsZ"
                           procedure="do_click.resampling.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1rsa"
                         procedure="check.resampling.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1rsx" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1r-i" modifiers="16"/>
        </Procedure>
        <Procedure id="_1r-t" name="upsampling_method">
          <variable name="upsampling_method"/>
          <comment>@teststep Select upsampling method.</comment>
          <TryStep id="_1s0h">
            <ProcedureCall id="_1s10"
                           procedure="utility.resampling.upsampling_method">
              <variable name="upsampling_method">$(upsampling_method)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1s0j" maxerror="0">
              <TryStep id="_1s0k">
                <ProcedureCall id="_1s11"
                               procedure="utility.resampling.upsampling_method">
                  <variable name="upsampling_method">$(upsampling_method)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1s0m"
                               maxerror="0">
                  <ProcedureCall id="_1s0n" procedure="run-log.logError">
                    <variable name="message">$(upsampling_method) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
      <Package id="_1s3c" name="scape_m">
        <Procedure id="_1s9u" name="calculate_lakes">
          <comment>@teststep Check-in checkbox 'Calculate lakes'.</comment>
          <ProcedureCall id="_1sB8"
                         procedure="check.scape_m.checked.calculate_lakes"/>
          <IfSequence id="_1sB0"
                      test="&#34;$(calculate_lakes)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sB1"
                           procedure="do_click.scape_m.calculate_lakes"/>
          </IfSequence>
          <ProcedureCall id="_1sB2"
                         procedure="check.scape_m.checked.calculate_lakes_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s3s" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1s9t"
                         procedure="check.scape_m.checked.open_in_snap"/>
          <IfSequence id="_1s3u"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1s3v"
                           procedure="check.scape_m.enabled.open_in_snap"/>
            <IfSequence id="_1s3w"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1s3x" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1s3y"
                             procedure="select.scape_m.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1s3z"
                           procedure="do_click.scape_m.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1s3+"
                         procedure="check.scape_m.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s3f" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1s3g">
            <ProcedureCall id="_1s9m"
                           procedure="utility.scape_m.output_format_scape_m">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1s3i" maxerror="0">
              <TryStep id="_1s3j">
                <ProcedureCall id="_1s9n"
                               procedure="utility.scape_m.output_format_scape_m">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1s3l"
                               maxerror="0">
                  <ProcedureCall id="_1s3m" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1s3n" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1s3o"
                         procedure="check.scape_m.checked.save_as"/>
          <IfSequence id="_1s3p" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1s3q" procedure="do_click.scape_m.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1s3r"
                         procedure="check.scape_m.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sBP" name="skip_gap_filling">
          <comment>@teststep Check-in checkbox 'Skip gap filling'.</comment>
          <ProcedureCall id="_1sBR"
                         procedure="check.scape_m.checked.skip_gap_filling"/>
          <IfSequence id="_1sBZ"
                      test="&#34;$(skip_gap_filling)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sBa"
                           procedure="do_click.scape_m.skip_gap_filling"/>
          </IfSequence>
          <ProcedureCall id="_1sBb"
                         procedure="check.scape_m.checked.skip_gap_filling_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sBc" name="skip_visibility_smoothing">
          <comment>@teststep Check-in checkbox 'Skip visibility smoothing'.</comment>
          <ProcedureCall id="_1sBf"
                         procedure="check.scape_m.checked.skip_visibility_smoothing"/>
          <IfSequence id="_1sBm"
                      test="&#34;$(skip_visibility_smoothing)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sBn"
                           procedure="do_click.scape_m.skip_visibility_smoothing"/>
          </IfSequence>
          <ProcedureCall id="_1sBo"
                         procedure="check.scape_m.checked.skip_visibility_smoothing_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1s3d" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSCAPE-M.tabbed.tab"
                          event="MOUSE_MPRC" id="_1s8H" modifiers="16"/>
        </Procedure>
        <Procedure id="_1sBC" name="use_getasse_DEM">
          <comment>@teststep Check-in checkbox 'Use getasse DEM'.</comment>
          <ProcedureCall id="_1sBD"
                         procedure="check.scape_m.checked.use_getasse_DEM"/>
          <IfSequence id="_1sBM"
                      test="&#34;$(use_getasse_DEM)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sBN"
                           procedure="do_click.scape_m.use_getasse_DEM"/>
          </IfSequence>
          <ProcedureCall id="_1sBO"
                         procedure="check.scape_m.checked.use_getasse_DEM_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sC0" name="write_443nm_reflec">
          <comment>@teststep Check-in checkbox 'Write 443nm reflectance band'.</comment>
          <ProcedureCall id="_1sC5"
                         procedure="check.scape_m.checked.write_443nm_reflec"/>
          <IfSequence id="_1sCA"
                      test="&#34;$(write_443nm_reflec)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sCB"
                           procedure="do_click.scape_m.write_443nm_reflec"/>
          </IfSequence>
          <ProcedureCall id="_1sCC"
                         procedure="check.scape_m.checked.write_443nm_reflec_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sBp" name="write_rho_toa">
          <comment>@teststep Check-in checkbox 'Write rhoTOA'.</comment>
          <ProcedureCall id="_1sBt"
                         procedure="check.scape_m.checked.write_rho_toa"/>
          <IfSequence id="_1sBz"
                      test="&#34;$(write_rho_toa)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sB+"
                           procedure="do_click.scape_m.write_rho_toa"/>
          </IfSequence>
          <ProcedureCall id="_1sB-"
                         procedure="check.scape_m.checked.write_rho_toa_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1qN9" name="smac">
        <Procedure id="_1qRc" name="aerosol_type">
          <variable name="aerosol_type"/>
          <comment>@teststep Selected aerosol type.</comment>
          <TryStep id="_1qRj">
            <ProcedureCall id="_1qRk" procedure="utility.smac.aerosol_type">
              <variable name="aerosol_type">$(aerosol_type)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qRl" maxerror="0">
              <TryStep id="_1qRm">
                <ProcedureCall id="_1qRq"
                               procedure="utility.smac.aerosol_type">
                  <variable name="aerosol_type">$(aerosol_type)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qRo"
                               maxerror="0">
                  <ProcedureCall id="_1qRp" procedure="run-log.logError">
                    <variable name="message">$(aerosol_type) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qSN" name="all_bands">
          <variable name="band"/>
          <comment>@teststep Selected all bands.</comment>
          <BasicSequence id="_1pwn" name="select_all_bands">
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_MPRC" id="_1pwo" modifiers="16"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1pwp" keychar="65535"
                          keycode="17" modifiers="2"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PTR" id="_1pwq" keychar="1" keycode="65"
                          modifiers="2"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_RELEASED" id="_1pwr" keychar="65535"
                          keycode="17" modifiers="0"/>
          </BasicSequence>
        </Procedure>
        <Procedure id="_1qSg" name="one_band">
          <variable name="band"/>
          <comment>@teststep Selected one band.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                          event="MOUSE_MPRC" id="_1qSj" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qQC" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1qQD"
                         procedure="check.smac.checked.open_in_snap"/>
          <IfSequence id="_1qQE"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qSs"
                           procedure="check.smac.enabled.open_in_snap"/>
            <IfSequence id="_1qSt"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qSw" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qSx" procedure="select.smac.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1qQF" procedure="do_click.smac.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1qQG"
                         procedure="check.smac.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qP-" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1qQ0">
            <ProcedureCall id="_1qQ1"
                           procedure="utility.smac.output_format_smac">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qQ2" maxerror="0">
              <TryStep id="_1qQ3">
                <ProcedureCall id="_1qRW"
                               procedure="utility.smac.output_format_smac">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1qQ5"
                               maxerror="0">
                  <ProcedureCall id="_1qQ6" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1qQ7" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1qQ8" procedure="check.smac.checked.save_as"/>
          <IfSequence id="_1qQ9" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qQA" procedure="do_click.smac.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1qQB"
                         procedure="check.smac.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qPz" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1pvk" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qSO" name="three_bands">
          <variable name="band1"/>
          <variable name="band2"/>
          <variable name="band3"/>
          <comment>@teststep Selected 3 bands.</comment>
          <BasicSequence id="_1pxr" name="select_3_bands">
            <SetGlobalStep id="_1qSy" varname="band">
              <default>$(band1)</default>
            </SetGlobalStep>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_PRESSED" id="_1pxt" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1pxu" keychar="65535"
                          keycode="17" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_RELEASED" id="_1pxv" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_CLICKED" id="_1pxw" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1pxx" keychar="65535"
                          keycode="17" modifiers="2"/>
            <SetGlobalStep id="_1qSz" varname="band">
              <default>$(band2)</default>
            </SetGlobalStep>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_PRESSED" id="_1pxy" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1pxz" keychar="65535"
                          keycode="17" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_RELEASED" id="_1px+" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_CLICKED" id="_1px-" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1py0" keychar="65535"
                          keycode="17" modifiers="2"/>
            <SetGlobalStep id="_1qS+" varname="band">
              <default>$(band3)</default>
            </SetGlobalStep>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_PRESSED" id="_1py1" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1py2" keychar="65535"
                          keycode="17" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_RELEASED" id="_1py3" modifiers="18"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames.band"
                            event="MOUSE_CLICKED" id="_1py4" modifiers="18"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_PRESSED" id="_1py5" keychar="65535"
                          keycode="17" modifiers="2"/>
            <KeyEventStep client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.bandNames"
                          event="KEY_RELEASED" id="_1py6" keychar="65535"
                          keycode="17" modifiers="0"/>
          </BasicSequence>
        </Procedure>
        <Procedure id="_1qRX" name="use_meris_ecmwf">
          <comment>@teststep Check-in checkbox 'Use MERIS ECMWF data'</comment>
          <ProcedureCall id="_1qRY"
                         procedure="check.smac.checked.use_meris_ecmwf"/>
          <IfSequence id="_1qRZ"
                      test="&#34;$(use_meris_ecmwf)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qRa"
                           procedure="do_click.smac.use_meris_ecmwf"/>
          </IfSequence>
          <ProcedureCall id="_1qRb"
                         procedure="check.smac.checked.use_meris_ecmwf_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1pOm" name="spectral_unmixing">
        <Procedure id="_1pQy" name="compute_error_bands">
          <comment>@teststep Check-in checkbox 'Compute error bands'</comment>
          <ProcedureCall id="_1pQz"
                         procedure="check.spectral_unmixing.checked.compute_error_bands"/>
          <IfSequence id="_1pQ+"
                      test="&#34;$(compute_error_bands)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pR1"
                           procedure="do_click.spectral_unmixing.compute_error_bands"/>
          </IfSequence>
          <ProcedureCall id="_1pR0"
                         procedure="check.spectral_unmixing.checked.compute_error_bands_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pP8" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1pP9"
                         procedure="check.spectral_unmixing.checked.open_in_snap"/>
          <IfSequence id="_1pPA"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qXb"
                           procedure="check.spectral_unmixing.enabled.open_in_snap"/>
            <IfSequence id="_1qXc"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1qXd" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1qXe"
                             procedure="select.spectral_unmixing.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1pPB"
                           procedure="do_click.spectral_unmixing.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1pPC"
                         procedure="check.spectral_unmixing.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pOx" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1pOy">
            <ProcedureCall id="_1pOz"
                           procedure="utility.spectral_unmixing.output_format_spectral_unmixing">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pO+" maxerror="0">
              <TryStep id="_1pO-">
                <ProcedureCall id="_1pP0"
                               procedure="utility.spectral_unmixing.output_format_spectral_unmixing">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pP1"
                               maxerror="0">
                  <ProcedureCall id="_1pP2" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1pP3" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1pP4"
                         procedure="check.spectral_unmixing.checked.save_as"/>
          <IfSequence id="_1pP5" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pP6"
                           procedure="do_click.spectral_unmixing.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1pP7"
                         procedure="check.spectral_unmixing.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pRo" name="unmixing_model_name">
          <variable name="unmixing_model_name"/>
          <variable name="example">Unconstrained LSU; Fully Constrained LSU;Constrained LSU</variable>
          <TryStep id="_1pRq">
            <ProcedureCall id="_1pRp"
                           procedure="utility.spectral_unmixing.unmixing_model_name_spectral_unmixing">
              <variable name="unmixing_model_name">$(unmixing_model_name)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1pRr" maxerror="0">
              <TryStep id="_1pRs">
                <ProcedureCall id="_1pRw"
                               procedure="utility.spectral_unmixing.unmixing_model_name_spectral_unmixing">
                  <variable name="unmixing_model_name">$(unmixing_model_name)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pRu"
                               maxerror="0">
                  <ProcedureCall id="_1pRv" procedure="run-log.logError">
                    <variable name="message">$(unmixing_model_name) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
      <Package id="_1sF+" name="sentinel2_radiometric_uncertainty_tool">
        <Procedure id="_1sLe" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sLf"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.open_in_snap"/>
          <IfSequence id="_1sLg"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sLh"
                           procedure="check.sentinel2_radiometric_uncertainty_tool.enabled.open_in_snap"/>
            <IfSequence id="_1sLi"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sLj" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sLk"
                             procedure="select.sentinel2_radiometric_uncertainty_tool.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sLl"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sLm"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sLn" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <ProcedureCall id="_1sUO"
                         procedure="select.sentinel2_radiometric_uncertainty_tool.save_as"/>
          <TryStep id="_1sLo">
            <ProcedureCall id="_1sLp"
                           procedure="utility.sentinel2_radiometric_uncertainty_tool.output_format_sentinel2_radiometric_uncertainty_tool">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sLq" maxerror="0">
              <TryStep id="_1sLr">
                <ProcedureCall id="_1sPN"
                               procedure="utility.sentinel2_radiometric_uncertainty_tool.output_format_sentinel2_radiometric_uncertainty_tool">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sLt"
                               maxerror="0">
                  <ProcedureCall id="_1sLu" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sLv" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1sLw"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.save_as"/>
          <IfSequence id="_1sLx" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sLy"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sLz"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sM3" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSentinel-2_Radiometric_Uncertainty_Tool.tabbed.tab"
                          event="MOUSE_MPRC" id="_1sM5" modifiers="16"/>
        </Procedure>
        <Procedure id="_1sPO" name="instrument_noise">
          <comment>@teststep Check-in checkbox 'Instrument noise'.</comment>
          <ProcedureCall id="_1sSJ"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.instrument_noise"/>
          <IfSequence id="_1sSK"
                      test="&#34;$(instrument_noise)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSL"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.instrument_noise"/>
          </IfSequence>
          <ProcedureCall id="_1sSM"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.instrument_noise_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sPP" name="oof_straylight_systematic">
          <comment>@teststep Check-in checkbox 'OOF straylight-systematic'.</comment>
          <ProcedureCall id="_1sS-"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.oof_straylight_systematic"/>
          <IfSequence id="_1sT0"
                      test="&#34;$(oof_straylight_systematic)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sT1"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.oof_straylight_systematic"/>
          </IfSequence>
          <ProcedureCall id="_1sT2"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.oof_straylight_systematic_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sPR" name="oof_straylight_random">
          <comment>@teststep Check-in checkbox 'OOF straylight-random'.</comment>
          <ProcedureCall id="_1sSx"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.oof_straylight_random"/>
          <IfSequence id="_1sSy"
                      test="&#34;$(oof_straylight_random)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSz"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.oof_straylight_random"/>
          </IfSequence>
          <ProcedureCall id="_1sS+"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.oof_straylight_random_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sPT" name="crosstalk">
          <comment>@teststep Check-in checkbox 'Crosstalk'.</comment>
          <ProcedureCall id="_1sSt"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.crosstalk"/>
          <IfSequence id="_1sSu"
                      test="&#34;$(crosstalk)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSv"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.crosstalk"/>
          </IfSequence>
          <ProcedureCall id="_1sSw"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.crosstalk_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sN0" name="adc_quantisation">
          <comment>@teststep Check-in checkbox 'ADC quantisation'.</comment>
          <ProcedureCall id="_1sSp"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.adc_quantisation"/>
          <IfSequence id="_1sSq"
                      test="&#34;$(adc_quantisation)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSr"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.adc_quantisation"/>
          </IfSequence>
          <ProcedureCall id="_1sSs"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.adc_quantisation_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sQr" name="ds_stability">
          <comment>@teststep Check-in checkbox 'DS stability'.</comment>
          <ProcedureCall id="_1sSl"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.ds_stability"/>
          <IfSequence id="_1sSm"
                      test="&#34;$(ds_stability)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSn"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.ds_stability"/>
          </IfSequence>
          <ProcedureCall id="_1sSo"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.ds_stability_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sQ+" name="gamma_knowledge">
          <comment>@teststep Check-in checkbox 'Gamma knowledge'.</comment>
          <ProcedureCall id="_1sSh"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.gamma_knowledge"/>
          <IfSequence id="_1sSi"
                      test="&#34;$(gamma_knowledge)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSj"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.gamma_knowledge"/>
          </IfSequence>
          <ProcedureCall id="_1sSk"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.gamma_knowledge_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sR7" name="diffuser_absolute_knowledge">
          <comment>@teststep Check-in checkbox 'Diffuser-absolute knowledge'.</comment>
          <ProcedureCall id="_1sSd"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_absolute_knowledge"/>
          <IfSequence id="_1sSe"
                      test="&#34;$(diffuser_absolute_knowledge)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSf"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.diffuser_absolute_knowledge"/>
          </IfSequence>
          <ProcedureCall id="_1sSg"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_absolute_knowledge_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sRP" name="diffuser_temporal_knowledge">
          <comment>@teststep Check-in checkbox 'Diffuser-temporal knowledge'.</comment>
          <ProcedureCall id="_1sSZ"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_temporal_knowledge"/>
          <IfSequence id="_1sSa"
                      test="&#34;$(diffuser_temporal_knowledge)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSb"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.diffuser_temporal_knowledge"/>
          </IfSequence>
          <ProcedureCall id="_1sSc"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_temporal_knowledge_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sRV" name="diffuser_cosine_effect">
          <comment>@teststep Check-in checkbox 'Diffuser-cosine effect'.</comment>
          <ProcedureCall id="_1sSV"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_cosine_effect"/>
          <IfSequence id="_1sSW"
                      test="&#34;$(diffuser_cosine_effect)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSX"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.diffuser_cosine_effect"/>
          </IfSequence>
          <ProcedureCall id="_1sSY"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_cosine_effect_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sRb" name="diffuser_straylight_residual">
          <comment>@teststep Check-in checkbox 'Diffuser-straylight residual'.</comment>
          <ProcedureCall id="_1sSR"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_straylight_residual"/>
          <IfSequence id="_1sSS"
                      test="&#34;$(diffuser_straylight_residual)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sST"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.diffuser_straylight_residual"/>
          </IfSequence>
          <ProcedureCall id="_1sSU"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.diffuser_straylight_residual_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sRf" name="l1c_image_quantisation">
          <comment>@teststep Check-in checkbox 'L1C image quantisation'.</comment>
          <ProcedureCall id="_1sSN"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.l1c_image_quantisation"/>
          <IfSequence id="_1sSO"
                      test="&#34;$(l1c_image_quantisation)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sSP"
                           procedure="do_click.sentinel2_radiometric_uncertainty_tool.l1c_image_quantisation"/>
          </IfSequence>
          <ProcedureCall id="_1sSQ"
                         procedure="check.sentinel2_radiometric_uncertainty_tool.checked.l1c_image_quantisation_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1sHY" name="radiance-to-reflectance_processor">
        <Procedure id="_1sM7" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sM8"
                         procedure="check.radiance-to-reflectance_processor.checked.open_in_snap"/>
          <IfSequence id="_1sM9"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sMA"
                           procedure="check.radiance-to-reflectance_processor.enabled.open_in_snap"/>
            <IfSequence id="_1sMB"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sMC" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sMD"
                             procedure="select.radiance-to-reflectance_processor.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sME"
                           procedure="do_click.radiance-to-reflectance_processor.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sMF"
                         procedure="check.radiance-to-reflectance_processor.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sMG" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1sMH">
            <ProcedureCall id="_1sMI"
                           procedure="utility.radiance-to-reflectance_processor.output_format_radiance-to-reflectance_processor">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sMJ" maxerror="0">
              <TryStep id="_1sMK">
                <ProcedureCall id="_1sWd"
                               procedure="utility.radiance-to-reflectance_processor.output_format_radiance-to-reflectance_processor">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sMM"
                               maxerror="0">
                  <ProcedureCall id="_1sMN" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sMO" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1sMP"
                         procedure="check.radiance-to-reflectance_processor.checked.save_as"/>
          <IfSequence id="_1sMQ" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sMR"
                           procedure="do_click.radiance-to-reflectance_processor.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sMS"
                         procedure="check.radiance-to-reflectance_processor.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sMY" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRadiance-to-Reflectance_Processor2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1sWt" modifiers="16"/>
        </Procedure>
        <Procedure id="_1sWV" name="sensor">
          <variable name="sensor"/>
          <comment>@teststep Select sensor.</comment>
          <TryStep id="_1sWl">
            <ProcedureCall id="_1sWm"
                           procedure="utility.radiance-to-reflectance_processor.sensor">
              <variable name="sensor">$(sensor)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sWn" maxerror="0">
              <TryStep id="_1sWo">
                <ProcedureCall id="_1sWs"
                               procedure="utility.radiance-to-reflectance_processor.sensor">
                  <variable name="sensor">$(sensor)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sWq"
                               maxerror="0">
                  <ProcedureCall id="_1sWr" procedure="run-log.logError">
                    <variable name="message">$(sensor) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sWX" name="conversion_mode">
          <variable name="conversion_mode"/>
          <comment>@teststep Select conversion mode.</comment>
          <TryStep id="_1sWe">
            <ProcedureCall id="_1sWf"
                           procedure="utility.radiance-to-reflectance_processor.conversion_mode">
              <variable name="conversion_mode">$(conversion_mode)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sWg" maxerror="0">
              <TryStep id="_1sWh">
                <ProcedureCall id="_1sWi"
                               procedure="utility.radiance-to-reflectance_processor.conversion_mode">
                  <variable name="conversion_mode">$(conversion_mode)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sWj"
                               maxerror="0">
                  <ProcedureCall id="_1sWk" procedure="run-log.logError">
                    <variable name="message">$(conversion_mode) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sXf" name="copy_non_spectral_bands">
          <comment>@teststep Check-in checkbox 'Copy non spectral bands'.</comment>
          <ProcedureCall id="_1sXh"
                         procedure="check.radiance-to-reflectance_processor.checked.copy_non_spectral_bands"/>
          <IfSequence id="_1sXi"
                      test="&#34;$(copy_non_spectral_bands)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sXg"
                           procedure="do_click.radiance-to-reflectance_processor.copy_non_spectral_bands"/>
          </IfSequence>
          <ProcedureCall id="_1sXk"
                         procedure="check.radiance-to-reflectance_processor.checked.copy_non_spectral_bands_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1sII" name="rayleigh_correction">
        <Procedure id="_1sMc" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sMd"
                         procedure="check.rayleigh_correction.checked.open_in_snap"/>
          <IfSequence id="_1sMe"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sMf"
                           procedure="check.rayleigh_correction.enabled.open_in_snap"/>
            <IfSequence id="_1sMg"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sMh" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sMi"
                             procedure="select.rayleigh_correction.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sMj"
                           procedure="do_click.rayleigh_correction.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sMk"
                         procedure="check.rayleigh_correction.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sMl" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1sMm">
            <ProcedureCall id="_1sMn"
                           procedure="utility.rayleigh_correction.output_format_rayleigh_correction">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sMo" maxerror="0">
              <TryStep id="_1sMp">
                <ProcedureCall id="_1sUj"
                               procedure="utility.rayleigh_correction.output_format_rayleigh_correction">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sMr"
                               maxerror="0">
                  <ProcedureCall id="_1sMs" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sMt" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1sMu"
                         procedure="check.rayleigh_correction.checked.save_as"/>
          <IfSequence id="_1sMv" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sMw"
                           procedure="do_click.rayleigh_correction.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sMx"
                         procedure="check.rayleigh_correction.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sN1" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRayleigh_Correction2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1sUm" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1sLC" name="gaseous_absorption">
        <Procedure id="_1sN5" name="open_in_snap">
          <comment>@teststep Check-in checkbox 'Open in SNAP'</comment>
          <ProcedureCall id="_1sN6"
                         procedure="check.gaseous_absorption.checked.open_in_snap"/>
          <IfSequence id="_1sN7"
                      test="&#34;$(open_in_snap)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sN8"
                           procedure="check.gaseous_absorption.enabled.open_in_snap"/>
            <IfSequence id="_1sN9"
                        test="&#34;$(open_in_snap_en)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1sNA" procedure="daten_format.beam_dimap"/>
              <ProcedureCall id="_1sNB"
                             procedure="select.gaseous_absorption.output_format">
                <variable name="output_format">$(beam_dimap)</variable>
              </ProcedureCall>
            </IfSequence>
            <ProcedureCall id="_1sNC"
                           procedure="do_click.gaseous_absorption.open_in_snap"/>
          </IfSequence>
          <ProcedureCall id="_1sND"
                         procedure="check.gaseous_absorption.checked.open_in_snap_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sNE" name="output_format">
          <variable name="output_format"/>
          <comment>@teststep Select output format</comment>
          <TryStep id="_1sNF">
            <ProcedureCall id="_1sVm"
                           procedure="utility.gaseous_absorption.output_format_gaseous_absorption">
              <variable name="output_format_name">$(output_format)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1sNH" maxerror="0">
              <TryStep id="_1sNI">
                <ProcedureCall id="_1sNJ"
                               procedure="utility.gaseous_absorption.output_format_gaseous_absorption">
                  <variable name="output_format_name">$(output_format)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1sNK"
                               maxerror="0">
                  <ProcedureCall id="_1sNL" procedure="run-log.logError">
                    <variable name="message">$(output_format) can not be selected</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1sNM" name="save_as">
          <comment>@teststep Check-in checkbox 'Save as'</comment>
          <ProcedureCall id="_1sNN"
                         procedure="check.gaseous_absorption.checked.save_as"/>
          <IfSequence id="_1sNO" test="&#34;$(save_as)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sNP"
                           procedure="do_click.gaseous_absorption.save_as"/>
          </IfSequence>
          <ProcedureCall id="_1sNQ"
                         procedure="check.gaseous_absorption.checked.save_as_selected_status">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1sNW" name="tab">
          <variable name="tab"/>
          <variable name="example">I/O Parameters;Processing Parameters</variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogGaseous_Absorption2.tabbed.tab"
                          event="MOUSE_MPRC" id="_1sDj" modifiers="16"/>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1pNS" name="utility">
      <Package id="_1qTw" name="aatsr_sst_processor">
        <Procedure id="_1qVL" name="dual_view_coefficient_file">
          <variable name="dual_view_file"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.dualCoefficientsFile"
                          event="MOUSE_MPRC" id="_1qWu" modifiers="16" x="202"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.listInvokerName:_dualCoefficientsFile.dual_view_file"
                          event="MOUSE_MPRC" id="_1qWv" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qUp" name="nadir_view_coefficient_file">
          <variable name="nadir_view_file"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.nadirCoefficientsFile"
                          event="MOUSE_MPRC" id="_1qW-" modifiers="16" x="99"
                          y="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.listInvokerName:_nadirCoefficientsFile.nadir_view_file"
                          event="MOUSE_MPRC" id="_1qX0" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qXI" name="output_format_aatsr_sst_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.formatName"
                          event="MOUSE_MPRC" id="_1qWm" modifiers="16" x="77"
                          y="13"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialog(A)ATSR_SST_Processor2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1qWn" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_2JZj" name="arc_sst_processor">
        <Procedure id="_2JZk" name="dual_view_coefficient_file">
          <variable name="dual_view_file"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogARC_SST_Processor2.dualCoefficientsFile"
                          event="MOUSE_MPRC" id="_2JZu" modifiers="16" x="71"
                          y="6"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogARC_SST_Processor2.listInvokerName:_dualCoefficientsFile.dual_view_file"
                          event="MOUSE_MPRC" id="_2JZv" modifiers="16"/>
        </Procedure>
        <Procedure id="_2JZn" name="nadir_view_coefficient_file">
          <variable name="nadir_view_file"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogARC_SST_Processor2.nadirCoefficientsFile"
                          event="MOUSE_MPRC" id="_2Ja9" modifiers="16" x="51"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogARC_SST_Processor2.listInvokerName:_nadirCoefficientsFile.nadir_view_file"
                          event="MOUSE_MPRC" id="_2JaA" modifiers="16"/>
        </Procedure>
        <Procedure id="_2JZq" name="output_format_arc_sst_processor">
          <variable name="output_format_name"></variable>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogARC_SST_Processor2.formatName"
                          event="MOUSE_MPRC" id="_1se3" modifiers="16" x="36"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogARC_SST_Processor2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1se4" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1p+t" name="binning">
        <Procedure id="_1q66" name="aggregator">
          <variable name="aggregator"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogEdit_Aggregator.comboSource_band_name:"
                          event="MOUSE_MPRC" id="_1q6H" modifiers="16" x="199"
                          y="5"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogEdit_Aggregator.listInvokerClass:_ComboBox.aggregator"
                          event="MOUSE_MPRC" id="_1q69" modifiers="16"/>
        </Procedure>
        <Procedure id="_1q6K" name="source_band_in_edit_aggregator">
          <variable name="band"/>
          <comment>@teststep Select source band</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogEdit_Aggregator.varName"
                          event="MOUSE_MPRC" id="_1q6L" modifiers="16" x="53"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogEdit_Aggregator.listInvokerName:_varName.band"
                          event="MOUSE_MPRC" id="_1q6M" modifiers="16"/>
        </Procedure>
        <Procedure id="_1p+y" name="time_filter_method">
          <variable name="time_filter_method"/>
          <comment>@teststep Select time filter method.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogBinning.timeFilterMethod"
                          event="MOUSE_MPRC" id="_1p+z" modifiers="16" x="68"
                          y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogBinning.listInvokerName:_timeFilterMethod.time_filter_method"
                          event="MOUSE_MPRC" id="_1p++" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pWx" name="collocation">
        <Procedure id="_1pNT" name="output_format_collocation">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogCollocation2.formatName"
                          event="MOUSE_MPRC" id="_1pNU" modifiers="16" x="87"
                          y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogCollocation.listInvokerName_output_format_name"
                          event="MOUSE_MPRC" id="_1pNV" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pOg" name="resampling_type_collocation">
          <variable name="resampling_type"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogCollocation2.resamplingType"
                          event="MOUSE_MPRC" id="_1p8l" modifiers="16" x="34"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogCollocation.listInvokerName_resamplingType"
                          event="MOUSE_MPRC" id="_1p8m" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_2JYo" name="flh_mci">
        <Procedure id="_2JYp" name="output_format_flh_mci_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.formatName"
                          event="MOUSE_MPRC" id="_2JYq" modifiers="16" x="67"
                          y="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_2JYr" modifiers="16"/>
        </Procedure>
        <Procedure id="_2JYs" name="preset">
          <variable name="preset"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.preset"
                          event="MOUSE_MPRC" id="_2JYt" modifiers="16" x="35"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFLH/MCI_Processor.listInvokerName:_preset.preset"
                          event="MOUSE_MPRC" id="_2JYu" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qCH" name="fub_wew">
        <Procedure id="_1qAU" name="output_format_fub_wew_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFUB/WeW_Water_Processor.formatName"
                          event="MOUSE_MPRC" id="_2JXt" modifiers="16" x="60"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFUB/WeW_Water_Processor.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1sZ1" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_2JcL" name="s2_mci_processor">
        <Procedure id="_2JfC" name="preset">
          <variable name="preset"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogS2_MCI_Processor.preset"
                          event="MOUSE_MPRC" id="_1sbf" modifiers="16" x="40"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogS2_MCI_Processor.listInvokerName:_preset.preset"
                          event="MOUSE_MPRC" id="_1sbg" modifiers="16"/>
        </Procedure>
        <Procedure id="_2JcM" name="output_format_s2_mci_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogS2_MCI_Processor.formatName"
                          event="MOUSE_MPRC" id="_1sbZ" modifiers="16" x="35"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogS2_MCI_Processor.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1sba" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_2JcP" name="owt_classification">
        <Procedure id="_2JcQ" name="output_format_owt_classification">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOWT_Classification.formatName"
                          event="MOUSE_MPRC" id="_2Jc4" modifiers="16" x="33"
                          y="7"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOWT_Classification.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_2Jc5" modifiers="16"/>
        </Procedure>
        <Procedure id="_2Je7" name="owt_type">
          <variable name="owt_type"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOWT_Classification.owtType"
                          event="MOUSE_MPRC" id="_2JZm" modifiers="16" x="168"
                          y="7"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOWT_Classification.listInvokerName:_owtType.owt_type"
                          event="MOUSE_MPRC" id="_2JeH" modifiers="16"/>
        </Procedure>
        <Procedure id="_2JeA" name="input_reflectance_is">
          <variable name="input_reflec"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOWT_Classification.inputReflectanceIs"
                          event="MOUSE_MPRC" id="_2JZt" modifiers="16" x="89"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOWT_Classification.listInvokerName:_inputReflectanceIs.input_reflec"
                          event="MOUSE_MPRC" id="_2JeI" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1s1j" name="fu_classification">
        <Procedure id="_1s3U" name="instrument">
          <variable name="instrument"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFU_Classification.instrument"
                          event="MOUSE_MPRC" id="_1s3V" modifiers="16" x="27"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFU_Classification.listInvokerName:_instrument.instrument"
                          event="MOUSE_MPRC" id="_1s3X" modifiers="16"/>
        </Procedure>
        <Procedure id="_1s1n" name="instrument1">
          <variable name="instrument"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFU_Classification.instrument"
                          event="MOUSE_MPRC" id="_1r-4" modifiers="16" x="27"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFU_Classification.listInvokerName:_instrument.instrument1"
                          event="MOUSE_MPRC" id="_1s1t" modifiers="16"/>
        </Procedure>
        <Procedure id="_1s1k" name="output_format_fu_classification">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFU_Classification.formatName"
                          event="MOUSE_MPRC" id="_1s1q" modifiers="16" x="56"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogFU_Classification.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1s1r" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1rqu" name="k_mean_cluster_analysis">
        <Procedure id="_1rqv" name="output_format_k_mean_cluster_analysis">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogK-Means_Cluster_Analysis.formatName"
                          event="MOUSE_MPRC" id="_1rr1" modifiers="16" x="63"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogK-Means_Cluster_Analysis.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1rr2" modifiers="16"/>
        </Procedure>
        <Procedure id="_1rqy"
                   name="roi_mask_name_principle_component_analysis">
          <variable name="roi_mask_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogK-Means_Cluster_Analysis.roiMaskName"
                          event="MOUSE_MPRC" id="_1rrY" modifiers="16" x="146"
                          y="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogK-Means_Cluster_Analysis.listInvokerName:_roiMaskName.roi_mask_name"
                          event="MOUSE_MPRC" id="_1rrZ" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1roA" name="land_water_mask">
        <Procedure id="_1roB" name="output_format_land_water_mask">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogLand/Water_Mask.formatName"
                          event="MOUSE_MPRC" id="_1roP" modifiers="16" x="63"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogLand/Water_Mask.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1roQ" modifiers="16"/>
        </Procedure>
        <Procedure id="_1rpH" name="resolution_help">
          <variable name="resolution"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogLand/Water_Mask.buttonTipSpecifies_on_which_resolution_the_water_mask_shall_be_based._(m/pixel)"
                          event="MOUSE_MPRC" id="_1rpI" modifiers="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogLand/Water_Mask.listInvokerName:_resolution.150"
                          event="MOUSE_MPRC" id="_1rpJ" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qOU" name="meris_cloud_probability">
        <Procedure id="_1qPt" name="output_format_meris_cloud_probability">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_Cloud_Probability_Processor2.formatName"
                          event="MOUSE_MPRC" id="_1qPi" modifiers="16" x="48"
                          y="7"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_Cloud_Probability_Processor2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1qPj" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qCx" name="meris_radiometric_correction">
        <Procedure id="_1qDT"
                   name="output_format_meris_radiometric_correction">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.formatName"
                          event="MOUSE_MPRC" id="_1psv" modifiers="16" x="59"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1psw" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qJN" name="reprocessing_version">
          <variable name="reprocessing_version"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.reproVersion"
                          event="MOUSE_MPRC" id="_1qJX" modifiers="16" x="30"
                          y="6"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS_L1b_Radiometric_Correction2.listInvokerName:_reproVersion.reprocessing_version"
                          event="MOUSE_MPRC" id="_1qJY" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pi3" name="mosaicing">
        <Procedure id="_1piA" name="datum">
          <variable name="geodetic_datum"/>
          <comment>World_Geodetic_System_1972</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.datum" event="MOUSE_MPRC"
                          id="_1pjS" modifiers="16" x="324" y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.listInvokerName:_datum.geodetic_datum"
                          event="MOUSE_MPRC" id="_1pjT" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pi4" name="output_format_mosaic">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.formatName"
                          event="MOUSE_MPRC" id="_1piG" modifiers="16" x="25"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1pW5" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pi7" name="projection">
          <variable name="projection"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.operationWrapper"
                          event="MOUSE_MPRC" id="_1phm" modifiers="16" x="119"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMosaicing.listInvokerName:_operationWrapper.projection"
                          event="MOUSE_MPRC" id="_1phn" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pWw" name="ndvi">
        <Procedure id="_1pWX" name="nir_source_band_ndvi_processor">
          <variable name="nir_source_band"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.nirSourceBand"
                          event="MOUSE_MPRC" id="_1pVO" modifiers="16" x="31"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.listInvokerName_nirSourceBand"
                          event="MOUSE_MPRC" id="_1pVP" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pS3" name="output_format_ndvi_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.formatName" event="MOUSE_MPRC"
                          id="_1pUV" modifiers="16" x="59" y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.listInvokerName_formatName"
                          event="MOUSE_MPRC" id="_1pUW" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pWI" name="red_source_band_ndvi_processor">
          <variable name="red_source_band"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.redSourceBand"
                          event="MOUSE_MPRC" id="_1pWz" modifiers="16" x="52"
                          y="15"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogNDVI.listInvokerName_redSourceBand"
                          event="MOUSE_MPRC" id="_1pW+" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1sEm" name="olci_smile_correction">
        <Procedure id="_1sEn" name="output_format_olci_smile_correction">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOLCI_Smile_Correction....formatName"
                          event="MOUSE_MPRC" id="_1s59" modifiers="16" x="65"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogOLCI_Smile_Correction....listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1s5A" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qap" name="principle_component_analysis">
        <Procedure id="_1qas"
                   name="output_format_principle_component_analysis">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.formatName"
                          event="MOUSE_MPRC" id="_1qbM" modifiers="16" x="62"
                          y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1qbN" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qcA"
                   name="roi_mask_name_principle_component_analysis">
          <variable name="roi_mask_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.roiMaskName"
                          event="MOUSE_MPRC" id="_1qX8" modifiers="16" x="119"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogPrincipal_Component_Analysis2.listInvokerName:_roiMaskName.roi_mask_name"
                          event="MOUSE_MPRC" id="_1qX7" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pX1" name="reprojection">
        <Procedure id="_1pfI" name="datum">
          <variable name="geodetic_datum"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.datum"
                          event="MOUSE_MPRC" id="_1peZ" modifiers="16" x="92"
                          y="15"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.listInvokerName:_datum.geodetic_datum"
                          event="MOUSE_MPRC" id="_1pea" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pXM" name="output_format_reproj">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.formatName"
                          event="MOUSE_MPRC" id="_1pXP" modifiers="16" x="62"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.listInvokerName_output_format_name"
                          event="MOUSE_MPRC" id="_1pXQ" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pfE" name="projection">
          <variable name="projection"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.operationWrapper"
                          event="MOUSE_MPRC" id="_1pfF" modifiers="16" x="94"
                          y="4"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.listInvokerName:_operationWrapper.projection"
                          event="MOUSE_MPRC" id="_1pfG" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pfL" name="resampling">
          <variable name="resampling_method"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.resamplingName"
                          event="MOUSE_MPRC" id="_1pbT" modifiers="16" x="76"
                          y="14"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogReprojection.listInvokerName_resamplingName"
                          event="MOUSE_MPRC" id="_1pbU" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1r-j" name="resampling">
        <Procedure id="_1s0U" name="downsampling_method">
          <variable name="downsampling_method"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.aggregationMethod"
                          disabled="true" event="MOUSE_MPRC" id="_1rvW"
                          modifiers="16" x="74" y="5"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerName:_aggregationMethod.aggregation_method"
                          disabled="true" event="MOUSE_MPRC" id="_1rvX"
                          modifiers="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.downsamplingMethod"
                          event="MOUSE_MPRC" id="_1rxY" modifiers="16" x="43"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerName:_downsamplingMethod.downsampling_method"
                          event="MOUSE_MPRC" id="_1rxZ" modifiers="16"/>
        </Procedure>
        <Procedure id="_1s0W" name="flag_downsampling_method">
          <variable name="flag_downsampling_method"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.flagAggregationMethod"
                          disabled="true" event="MOUSE_MPRC" id="_1rva"
                          modifiers="16" x="62" y="4"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerName:_flagAggregationMethod.flag_agg_method"
                          disabled="true" event="MOUSE_MPRC" id="_1rvb"
                          modifiers="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.flagDownsamplingMethod"
                          event="MOUSE_MPRC" id="_1rxc" modifiers="16" x="32"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerName:_flagDownsamplingMethod.flag_downsampling_method"
                          event="MOUSE_MPRC" id="_1rxd" modifiers="16"/>
        </Procedure>
        <Procedure id="_1r-k" name="output_format_resampling">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.formatName"
                          event="MOUSE_MPRC" id="_1r-x" modifiers="16" x="28"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1r-y" modifiers="16"/>
        </Procedure>
        <Procedure id="_1s0Q" name="reference_band_name">
          <variable name="band_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.referenceBandName"
                          disabled="true" event="MOUSE_MPRC" id="_1rw8"
                          modifiers="16" x="111" y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerName:_referenceBandName.band_name"
                          disabled="true" event="MOUSE_MPRC" id="_1rw9"
                          modifiers="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.scrollResampling_Parameters.comboTarget_Width:"
                          disabled="true" event="MOUSE_MPRC" id="_1rxQ"
                          modifiers="16" x="189" y="24"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerClass:_ComboBox.band_name"
                          disabled="true" event="MOUSE_MPRC" id="_1rxR"
                          modifiers="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.scrollResampling_Parameters.comboResulting_target_width:"
                          event="MOUSE_MPRC" id="_1rxS" modifiers="16" x="30"
                          y="8"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerClass:_ComboBox2.band_name"
                          event="MOUSE_MPRC" id="_1rxT" modifiers="16"/>
        </Procedure>
        <Procedure id="_1s0S" name="upsampling_method">
          <variable name="upsampling_method"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.interpolationMethod"
                          disabled="true" event="MOUSE_MPRC" id="_1rvS"
                          modifiers="16" x="99" y="7"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerName:_interpolationMethod.interpolation_method"
                          disabled="true" event="MOUSE_MPRC" id="_1rvT"
                          modifiers="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.upsamplingMethod"
                          event="MOUSE_MPRC" id="_1rxU" modifiers="16" x="76"
                          y="7"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogResampling2.listInvokerName:_upsamplingMethod.upsampling_method"
                          event="MOUSE_MPRC" id="_1rxV" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1s8I" name="scape_m">
        <Procedure id="_1s8J" name="output_format_scape_m">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSCAPE-M.formatName"
                          event="MOUSE_MPRC" id="_1s9i" modifiers="16" x="18"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSCAPE-M.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1s9j" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1qQj" name="smac">
        <Procedure id="_1qRh" name="aerosol_type">
          <variable name="aerosol_type"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.aerosolType"
                          event="MOUSE_MPRC" id="_1pwC" modifiers="16" x="154"
                          y="17"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.listInvokerName_aerosol_type"
                          event="MOUSE_MPRC" id="_1pwD" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qQm" name="output_format_smac">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.formatName"
                          event="MOUSE_MPRC" id="_1pvu" modifiers="16" x="49"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogMERIS/(A)ATSR_SMAC_Atmospheric_Correction2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1pvv" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1pWy" name="spectral_unmixing">
        <Procedure id="_1pPN" name="output_format_spectral_unmixing">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSpectral_Unmixing.formatName"
                          event="MOUSE_MPRC" id="_1pQd" modifiers="16" x="53"
                          y="11"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSpectral_Unmixing.listInvokerName_formatName"
                          event="MOUSE_MPRC" id="_1pQe" modifiers="16"/>
        </Procedure>
        <Procedure id="_1pR7" name="unmixing_model_name_spectral_unmixing">
          <variable name="unmixing_model_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSpectral_Unmixing.unmixingModelName"
                          event="MOUSE_MPRC" id="_1pRm" modifiers="16" x="40"
                          y="12"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSpectral_Unmixing.listInvokerName_unmixingModelName"
                          event="MOUSE_MPRC" id="_1pRn" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1sNa" name="sentinel2_radiometric_uncertainty_tool">
        <Procedure id="_1sPM"
                   name="output_format_sentinel2_radiometric_uncertainty_tool">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSentinel-2_Radiometric_Uncertainty_Tool.formatName"
                          event="MOUSE_MPRC" id="_1sAA" modifiers="16" x="35"
                          y="8"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSentinel-2_Radiometric_Uncertainty_Tool.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1sAB" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1sO2" name="radiance-to-reflectance_processor">
        <Procedure id="_1sPL"
                   name="output_format_radiance-to-reflectance_processor">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRadiance-to-Reflectance_Processor2.formatName"
                          event="MOUSE_MPRC" id="_1sW+" modifiers="16" x="42"
                          y="7"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRadiance-to-Reflectance_Processor2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1sW-" modifiers="16"/>
        </Procedure>
        <Procedure id="_1sWZ" name="sensor">
          <variable name="sensor"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRadiance-to-Reflectance_Processor2.sensor"
                          event="MOUSE_MPRC" id="_1sWy" modifiers="16" x="98"
                          y="9"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRadiance-to-Reflectance_Processor2.listInvokerName:_sensor.sensor"
                          event="MOUSE_MPRC" id="_1sWz" modifiers="16"/>
        </Procedure>
        <Procedure id="_1sWb" name="conversion_mode">
          <variable name="conversion_mode"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRadiance-to-Reflectance_Processor2.conversionMode"
                          event="MOUSE_MPRC" id="_1sWw" modifiers="16" x="38"
                          y="10"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRadiance-to-Reflectance_Processor2.listInvokerName:_conversionMode.conversion_mode"
                          event="MOUSE_MPRC" id="_1sWx" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1sOR" name="rayleigh_correction">
        <Procedure id="_1sPK" name="output_format_rayleigh_correction">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRayleigh_Correction2.formatName"
                          event="MOUSE_MPRC" id="_1sUk" modifiers="16" x="21"
                          y="5"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogRayleigh_Correction2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1sUl" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1sOs" name="gaseous_absorption">
        <Procedure id="_1sPH" name="output_format_gaseous_absorption">
          <variable name="output_format_name"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogGaseous_Absorption2.formatName"
                          event="MOUSE_MPRC" id="_1sVk" modifiers="16" x="46"
                          y="8"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogGaseous_Absorption2.listInvokerName:_formatName.output_format_name"
                          event="MOUSE_MPRC" id="_1sVl" modifiers="16"/>
        </Procedure>
      </Package>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <IfSequence id="_1op7" test="${qftest:windows}">
      <ElseifSequence id="_1op8" name="MAC?"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
      <ElseSequence id="_1op9"/>
    </IfSequence>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
