<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.4">
  <include>qfs.qft</include>
  <include>snap_components.qft</include>
  <include>snap_main.qft</include>
  <dependency>snap_check.qft</dependency>
  <dependency>snap_main.qft</dependency>
  <dependency>snap_workflow.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1k-S" name="import">
      <Procedure id="_1lWC" name="raster_data">
        <variable name="import_data"/>
        <ProcedureCall id="_1rVu"
                       procedure="utility.open_import_product_window"/>
        <IfSequence id="_1qcy"
                    test="&#34;$(open_product_dialog_appears)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1rUc"
                         procedure="utility.fill_in_open_product_dialog">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="in_out">in</variable>
            <variable name="prod">$(fileName)</variable>
            <variable name="product_type">$(import_data)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1rUj"
                         procedure="do_click.open_product_dialog.import_product"/>
          <ServerScriptStep disabled="true" id="_1r4v" name="print">
            <code>print "$(input_file)"</code>
            <comment> </comment>
          </ServerScriptStep>
          <ElseSequence id="_1rUd">
            <ProcedureCall id="_1puB"
                           procedure="run-log.error_message.dialog_Import_Product_does_not_appear"/>
          </ElseSequence>
        </IfSequence>
        <ProcedureCall id="_1po3" procedure="check.product.not_opened"/>
        <IfSequence id="_1po4" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1po6" procedure="wait.product_is_opened"/>
        </IfSequence>
        <ProcedureCall id="_1oap" procedure="check.product.not_opened"/>
        <IfSequence id="_1oaq" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1oao" procedure="run-log.logError">
            <variable name="message">$(fileName) did not appear</variable>
            <variable name="withScreenshots">true</variable>
          </ProcedureCall>
        </IfSequence>
        <TryStep id="_1ptb">
          <ProcedureCall id="_1ptZ"
                         procedure="wait.appear.error.dialog_SNAP_SNAP_Error"/>
          <ProcedureCall id="_1ptf" procedure="run-log.make_screensot">
            <variable name="iw_name">error_while_import</variable>
            <variable name="iw_name_example">error_dialog</variable>
          </ProcedureCall>
          <ProcedureCall id="_1pta"
                         procedure="do_click.error_dialog.button_OK_SNAP_SNAP_Error"/>
          <ProcedureCall id="_1ptd" procedure="run-log.logError">
            <variable name="message">Error while import $(dataInDir)/$(fileName)</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1ptc" maxerror="0"/>
        </TryStep>
      </Procedure>
      <Procedure id="_1rUk" name="raster_data_pixel_subset">
        <variable name="import_data"/>
        <ProcedureCall id="_1rWe"
                       procedure="utility.open_import_product_window"/>
        <IfSequence id="_1rVA"
                    test="&#34;$(open_product_dialog_appears)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1rVB"
                         procedure="utility.fill_in_open_product_dialog">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="in_out">in</variable>
            <variable name="prod">$(fileName)</variable>
            <variable name="product_type">$(import_data)</variable>
          </ProcedureCall>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSNAP_-_Open_Product.listFile_name:._file_name"
                          event="MOUSE_MPRC" id="_1rWh" modifiers="16"/>
          <TryStep id="_1rWl">
            <ProcedureCall id="_1rWm"
                           procedure="do_click.open_product_dialog.subset"/>
            <ProcedureCall id="_1rWr" procedure="set.subset_tool.start_X">
              <variable name="val">200</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rWs" procedure="set.subset_tool.start_Y">
              <variable name="val">200</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rWt" procedure="set.subset_tool.end_X">
              <variable name="val">400</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rWu" procedure="set.subset_tool.end_Y">
              <variable name="val">400</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rWv"
                           procedure="do_click.subset_tool.button_OK"/>
            <CatchSequence exception="TestException" id="_1rWn" maxerror="0">
              <ProcedureCall id="_1rWo" procedure="run-log.make_screensot">
                <variable name="iw_name">import_product_window</variable>
              </ProcedureCall>
              <ProcedureCall id="_1rWp" procedure="run-log.logError">
                <variable name="message">Subset button is disabled</variable>
                <variable name="withScreenshots"/>
              </ProcedureCall>
              <ProcedureCall id="_1rWq"
                             procedure="do_click.open_product_dialog.cancel"/>
            </CatchSequence>
          </TryStep>
          <ElseSequence id="_1rVE">
            <ProcedureCall id="_1rVF"
                           procedure="run-log.error_message.dialog_Import_Product_does_not_appear"/>
          </ElseSequence>
        </IfSequence>
        <ProcedureCall id="_1rVG" procedure="check.product.not_opened"/>
        <IfSequence id="_1rVH" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1rVL" procedure="run-log.logError">
            <variable name="message">subset from $(fileName) did not appear</variable>
            <variable name="withScreenshots">true</variable>
          </ProcedureCall>
          <ElseSequence id="_1rWw">
            <TryStep id="_1rVM">
              <ProcedureCall id="_1rVN"
                             procedure="wait.appear.error.dialog_SNAP_SNAP_Error"/>
              <ProcedureCall id="_1rVO" procedure="run-log.make_screensot">
                <variable name="iw_name">error_while_import</variable>
                <variable name="iw_name_example">error_dialog</variable>
              </ProcedureCall>
              <ProcedureCall id="_1rVP"
                             procedure="do_click.error_dialog.button_OK_SNAP_SNAP_Error"/>
              <ProcedureCall id="_1rVQ" procedure="run-log.logError">
                <variable name="message">Error while import $(dataInDir)/$(fileName)</variable>
                <variable name="withScreenshots">false</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rVR"
                             maxerror="0"/>
            </TryStep>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Package id="_1pkI" name="vector_data">
        <Package id="_1pkJ" name="import_CSV_data_dialog">
          <Procedure id="_1p2C" name="vector_data_csv">
            <ProcedureCall id="_1p2D" procedure="check.product.not_opened"/>
            <IfSequence id="_1p2E"
                        test="&#34;$(not_opened)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1p2r"
                             procedure="select.product_tree.product">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <TryStep id="_1ptg" name="open_import_csv_file_dialog">
                <ProcedureCall id="_1pth"
                               procedure="utility.vector_data.csv"/>
                <CatchSequence exception="TestException" id="_1pti"
                               maxerror="0">
                  <TryStep id="_1ptj">
                    <ProcedureCall id="_1ptk"
                                   procedure="utility.vector_data.csv"/>
                    <CatchSequence exception="TestException" id="_1ptl"
                                   maxerror="0"/>
                  </TryStep>
                </CatchSequence>
              </TryStep>
              <TryStep id="_1pnm" name="fiil_in_import_CSV_file_click_ok"
                       postdelay="1000">
                <ProcedureCall id="_1pnl"
                               procedure="check.opened.import_CSV_file_window"/>
                <SetGlobalStep id="_1p44" varname="csv_file_with_path">
                  <default>${path:csv_file_dir}$(csv_file).txt</default>
                </SetGlobalStep>
                <TextInputStep clear="true" client="$(client)"
                               component="dialogImport_CSV_file.textFile_name:"
                               id="_1pfW">
                  <text>$(csv_file_with_path)</text>
                </TextInputStep>
                <MouseEventStep clicks="1" client="$(client)"
                                component="dialogImport_CSV_file.buttonOpen"
                                event="MOUSE_MPRC" id="_1pfX" modifiers="16"/>
                <CatchSequence exception="TestException" id="_1pnn"
                               maxerror="0">
                  <ProcedureCall id="_1pno"
                                 procedure="run-log.error_message.dialog_does_not_appear">
                    <variable name="dialog">Open</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
              <TryStep id="_1pkk" name="import_CSV_data_dialog"
                       postdelay="1000">
                <ProcedureCall id="_1po7"
                               procedure="check.opened.import_CSV_data_dialog"/>
                <ProcedureCall id="_1po8"
                               procedure="do_click.import_CSV_data_dialog.radio_custom_CRS"/>
                <ProcedureCall id="_1po9"
                               procedure="set.default_parameters.geo_lat_lon_projection"/>
                <ProcedureCall id="_1poA"
                               procedure="check.import_CSV_data_dialog.text.projection">
                  <variable name="val">$(geo_lat_lon_projection)</variable>
                </ProcedureCall>
                <ProcedureCall id="_1poB"
                               procedure="do_click.import_CSV_data_dialog.button_ok"/>
                <CatchSequence exception="TestException" id="_1pkl"
                               maxerror="0">
                  <ProcedureCall id="_1oQb"
                                 procedure="run-log.error_message.dialog_does_not_appear">
                    <variable name="dialog">Import CSV data</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
              <TryStep id="_1pnj" name="point_data_interpretation_dialog">
                <ProcedureCall id="_1pni"
                               procedure="check.opened.point_data_interpretation_dialog"/>
                <ProcedureCall id="_1pnh"
                               procedure="do_click.point_data_interpretation_dialog.button_ok"/>
                <CatchSequence exception="TestException" id="_1pnk"
                               maxerror="0">
                  <ProcedureCall id="_1pnp"
                                 procedure="run-log.error_message.dialog_does_not_appear">
                    <variable name="dialog">Point data interpretation</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
              <TryStep id="_1pns" name="shoot_error_if_csv_file_not_imported">
                <ProcedureCall id="_1pnq"
                               procedure="check.opened.dialog_SNAP_Import_CSV_file"/>
                <SetGlobalStep id="_1po1" varname="import_csv_error">
                  <default>true</default>
                </SetGlobalStep>
                <ProcedureCall disabled="true" id="_1pnv"
                               procedure="run-log.make_screensot">
                  <variable name="iw_name">import_CSV_data</variable>
                  <variable name="iw_name_example">error_dialog</variable>
                </ProcedureCall>
                <ProcedureCall id="_1pnr"
                               procedure="do_click.error_dialog.dialog_SNAP_Import_CSV_file.button_ok"/>
                <ProcedureCall id="_1pnu"
                               procedure="run-log.error_message.error_dialog_appears">
                  <variable name="dialog">Import CSV data error</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1pnt"
                               maxerror="0">
                  <SetGlobalStep id="_1po2" varname="import_csv_error">
                    <default>false</default>
                  </SetGlobalStep>
                </CatchSequence>
              </TryStep>
              <TryStep id="_1ptN"
                       name="check_all_modal_dialogs_are_closed_else">
                <ProcedureCall id="_1ptO"
                               procedure="check.opened.import_CSV_data_dialog"/>
                <IfSequence id="_1ptY"
                            test="&#34;$(import_csv_error)&#34;==&#34;false&#34;">
                  <SetGlobalStep id="_1ptV" varname="import_csv_error">
                    <default>true</default>
                  </SetGlobalStep>
                </IfSequence>
                <ProcedureCall id="_1ptm" procedure="run-log.make_screensot">
                  <variable name="iw_name">import_CSV_data</variable>
                  <variable name="iw_name_example">error_dialog</variable>
                </ProcedureCall>
                <ProcedureCall id="_1ptX"
                               procedure="qfs.swing.cleanup.closeAllModalDialogs">
                  <variable name="maxDialogs">5</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1ptT"
                               maxerror="0"/>
              </TryStep>
            </IfSequence>
          </Procedure>
        </Package>
      </Package>
    </Package>
    <Package id="_1oRH" name="utility">
      <Procedure id="_1rVS" name="open_import_product_window">
        <ProcedureCall id="_1rVT" procedure="check.product.not_opened"/>
        <IfSequence id="_1rVU"
                    test="&#34;$(not_opened)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1rVV" procedure="close.all_products"/>
        </IfSequence>
        <ProcedureCall id="_1rVW"
                       procedure="product_meta_data.product_attributes">
          <variable name="prod_type">$(import_data)</variable>
        </ProcedureCall>
        <IfSequence id="_1rVX"
                    test="'${system:os.name}' .find('Mac OS X')&gt;=0">
          <ProcedureCall id="_1rVY" procedure="open.product_in_snap">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="in_out">in</variable>
            <variable name="prod">$(fileName)</variable>
            <variable name="product_type">$(import_data)</variable>
          </ProcedureCall>
          <ElseSequence id="_1rVZ">
            <IfSequence id="_1rVa"
                        test="&#34;$(menu_item)&#34;&lt;&gt;&#34;&#34;">
              <TryStep id="_1rVb" name="open_import_dialog">
                <comment>@teststep Open 'Import Product' dialog</comment>
                <IfSequence id="_1rVc"
                            test="&#34;$(product_group)&#34;==&#34;&#34;">
                  <ProcedureCall id="_1rVd" procedure="open.product_in_snap">
                    <variable name="prod_dir">$(dataInDir)</variable>
                    <variable name="in_out">in</variable>
                    <variable name="prod">$(fileName)</variable>
                    <variable name="product_type">$(import_data)</variable>
                  </ProcedureCall>
                  <ElseifSequence id="_1rVe"
                                  test="&#34;$(product_group)&#34;==&#34;multispectral&#34;">
                    <ProcedureCall id="_1rVf"
                                   procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors"/>
                    <ProcedureCall id="_1rVg"
                                   procedure="utility.raster_data.optical_sensors.optical_sensor">
                      <variable name="menu_item">$(menu_item)</variable>
                    </ProcedureCall>
                  </ElseifSequence>
                  <ElseifSequence id="_1rVh"
                                  test="&#34;$(product_group)&#34;==&#34;generic&#34;">
                    <ProcedureCall id="_1rVi"
                                   procedure="utility.raster_data.generic_formats.menu_file_import_generic_formats">
                      <variable name="menu_item">$(menu_item)</variable>
                    </ProcedureCall>
                  </ElseifSequence>
                  <ElseifSequence id="_1rVj"
                                  test="&#34;$(product_group)&#34;==&#34;sar&#34;">
                    <ProcedureCall id="_1rVk"
                                   procedure="utility.raster_data.sar_sensors.menu_file_import_sar_sensors">
                      <variable name="menu_item">$(menu_item)</variable>
                    </ProcedureCall>
                  </ElseifSequence>
                  <ElseifSequence id="_1rVl"
                                  test="&#34;$(product_group)&#34;==&#34;sentinel2&#34;">
                    <ProcedureCall id="_1rVm"
                                   procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors_sentinel2">
                      <variable name="menu_item">$(menu_item)</variable>
                    </ProcedureCall>
                  </ElseifSequence>
                  <ElseifSequence id="_1rVn"
                                  test="&#34;$(product_group)&#34;==&#34;sentinel3&#34;">
                    <ProcedureCall id="_1rVo"
                                   procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors_sentinel3">
                      <variable name="menu_item">$(menu_item)</variable>
                    </ProcedureCall>
                  </ElseifSequence>
                  <ElseifSequence id="_1rVp"
                                  test="&#34;$(product_group)&#34;==&#34;landsat&#34;">
                    <ProcedureCall id="_1rVq"
                                   procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors_landsat">
                      <variable name="menu_item">$(menu_item)</variable>
                    </ProcedureCall>
                  </ElseifSequence>
                  <ElseifSequence id="_1rVr"
                                  test="&#34;$(product_group)&#34;==&#34;seadas&#34;">
                    <ProcedureCall id="_1rVs"
                                   procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors_seadas">
                      <variable name="menu_item">$(menu_item)</variable>
                    </ProcedureCall>
                  </ElseifSequence>
                </IfSequence>
                <ProcedureCall id="_1rVt"
                               procedure="wait.appear.dialog.import_product"/>
              </TryStep>
            </IfSequence>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Package id="_1oZk" name="raster_data">
        <Package id="_1rSV" name="optical_sensors">
          <Procedure id="_1oZh" name="menu_file_import_optical_sensors">
            <ProcedureCall id="_1rSb"
                           procedure="utility.raster_data.menu_file_import"/>
            <ProcedureCall id="_1rSB"
                           procedure="do_click.menu.file.import.optical_sensors"/>
          </Procedure>
          <Procedure id="_1rSG"
                     name="menu_file_import_optical_sensors_landsat">
            <ProcedureCall id="_1rSc"
                           procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors"/>
            <ProcedureCall id="_1rSi"
                           procedure="do_click.menu.file.import.optical_sensors.landsat"/>
          </Procedure>
          <Procedure id="_1rSJ"
                     name="menu_file_import_optical_sensors_sentinel2">
            <ProcedureCall id="_1rSd"
                           procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors"/>
            <ProcedureCall id="_1rSh"
                           procedure="do_click.menu.file.import.optical_sensors.sentinel_2"/>
          </Procedure>
          <Procedure id="_1rSM"
                     name="menu_file_import_optical_sensors_sentinel3">
            <ProcedureCall id="_1rSe"
                           procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors"/>
            <ProcedureCall id="_1rSg"
                           procedure="do_click.menu.file.import.optical_sensors.sentinel_3"/>
          </Procedure>
          <Procedure id="_1rSQ"
                     name="menu_file_import_optical_sensors_seadas">
            <ProcedureCall id="_1rSf"
                           procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors"/>
            <ProcedureCall id="_1rSS"
                           procedure="do_click.menu.file.import.optical_sensors.seadas"/>
          </Procedure>
          <Procedure id="_1rSj" name="optical_sensor">
            <variable name="menu_item"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="NbMainWindow.menuItem" disabled="true"
                            event="MOUSE_MPRC" id="_1qy5" modifiers="16"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="NbMainWindow.$(menu_item)"
                            event="MOUSE_MPRC" id="_1rUi" modifiers="16"/>
            <IfSequence id="_1qwc" test="${qftest:windows}">
              <ElseifSequence id="_1qwd" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
              <ElseSequence id="_1qwe"/>
            </IfSequence>
          </Procedure>
        </Package>
        <Package id="_1rSW" name="sar_sensors">
          <Procedure id="_1oZj" name="menu_file_import_sar_sensors">
            <ProcedureCall id="_1rSa"
                           procedure="utility.raster_data.menu_file_import"/>
            <ProcedureCall id="_1rSF"
                           procedure="do_click.menu.file.import.sar_sensors"/>
          </Procedure>
          <Procedure id="_1rSm" name="sar_sensor">
            <variable name="menu_item"/>
          </Procedure>
        </Package>
        <Package id="_1rSX" name="dem"/>
        <Package id="_1rSY" name="generic_formats">
          <Procedure id="_1oZi" name="menu_file_import_generic_formats">
            <variable name="menu_item"/>
            <ProcedureCall id="_1rSZ"
                           procedure="utility.raster_data.menu_file_import"/>
            <ProcedureCall id="_1rSC"
                           procedure="do_click.menu.file.import.generic_formats"/>
          </Procedure>
          <Procedure id="_1rSn" name="generic_format">
            <variable name="menu_item"/>
          </Procedure>
        </Package>
        <Procedure id="_1oZl" name="menu_file_import">
          <ProcedureCall id="_1oZy" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1rS9" procedure="do_click.menu.file.import"/>
        </Procedure>
      </Package>
      <Package id="_1p2v" name="vector_data">
        <Procedure id="_1p2w" name="csv">
          <ProcedureCall id="_1p3D" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1p3G" procedure="do_click.menu.file.import"/>
          <ProcedureCall id="_1p3H"
                         procedure="do_click.menu.file.import.vector_data"/>
          <ProcedureCall id="_1p3F"
                         procedure="do_click.menu.file.import.vector_data.csv"/>
        </Procedure>
        <Procedure id="_1p3I" name="esri_shapefile">
          <ProcedureCall id="_1p3J" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1p3K" procedure="do_click.menu.file.import"/>
          <ProcedureCall id="_1p3L"
                         procedure="do_click.menu.file.import.vector_data"/>
          <ProcedureCall id="_1p3M"
                         procedure="do_click.menu.file.import.vector_data.esri_shapefile"/>
        </Procedure>
        <Procedure id="_1p3N" name="mermaid_extraction_file">
          <ProcedureCall id="_1p3O" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1p3P" procedure="do_click.menu.file.import"/>
          <ProcedureCall id="_1p3Q"
                         procedure="do_click.menu.file.import.vector_data"/>
          <ProcedureCall id="_1p3R"
                         procedure="do_click.menu.file.import.vector_data.mermaid_extraction_file"/>
        </Procedure>
        <Procedure id="_1p3S" name="seaDAS_6x_track">
          <ProcedureCall id="_1p3T" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1p3U" procedure="do_click.menu.file.import"/>
          <ProcedureCall id="_1p3V"
                         procedure="do_click.menu.file.import.vector_data"/>
          <ProcedureCall id="_1p3W"
                         procedure="do_click.menu.file.import.vector_data.seaDAS_6x_track"/>
        </Procedure>
      </Package>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <Procedure id="_1rVv" name="raster_data">
      <variable name="import_data"/>
      <ProcedureCall id="_1rVw"
                     procedure="utility.open_import_product_window"/>
      <ProcedureCall id="_1rVx" procedure="check.product.not_opened"/>
      <IfSequence id="_1rVy" test="&#34;$(not_opened)&#34;==&#34;false&#34;">
        <ProcedureCall id="_1rVz" procedure="close.all_products"/>
      </IfSequence>
      <ProcedureCall id="_1rV+"
                     procedure="product_meta_data.product_attributes">
        <variable name="prod_type">$(import_data)</variable>
      </ProcedureCall>
      <IfSequence id="_1rV-"
                  test="'${system:os.name}' .find('Mac OS X')&gt;=0">
        <ProcedureCall id="_1rW0" procedure="open.product_in_snap">
          <variable name="prod_dir">$(dataInDir)</variable>
          <variable name="in_out">in</variable>
          <variable name="prod">$(fileName)</variable>
          <variable name="product_type">$(import_data)</variable>
        </ProcedureCall>
        <ElseSequence id="_1rW1">
          <IfSequence id="_1rW2"
                      test="&#34;$(menu_item)&#34;&lt;&gt;&#34;&#34;">
            <TryStep id="_1rW3" name="open_import_dialog">
              <comment>@teststep Open 'Import Product' dialog</comment>
              <IfSequence id="_1rW4"
                          test="&#34;$(product_group)&#34;==&#34;&#34;">
                <ProcedureCall id="_1rW5" procedure="open.product_in_snap">
                  <variable name="prod_dir">$(dataInDir)</variable>
                  <variable name="in_out">in</variable>
                  <variable name="prod">$(fileName)</variable>
                  <variable name="product_type">$(import_data)</variable>
                </ProcedureCall>
                <ElseifSequence id="_1rW6"
                                test="&#34;$(product_group)&#34;==&#34;multispectral&#34;">
                  <ProcedureCall id="_1rW7"
                                 procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors"/>
                  <ProcedureCall id="_1rW8"
                                 procedure="utility.raster_data.optical_sensors.optical_sensor">
                    <variable name="menu_item">$(menu_item)</variable>
                  </ProcedureCall>
                </ElseifSequence>
                <ElseifSequence id="_1rW9"
                                test="&#34;$(product_group)&#34;==&#34;generic&#34;">
                  <ProcedureCall id="_1rWA"
                                 procedure="utility.raster_data.generic_formats.menu_file_import_generic_formats">
                    <variable name="menu_item">$(menu_item)</variable>
                  </ProcedureCall>
                </ElseifSequence>
                <ElseifSequence id="_1rWB"
                                test="&#34;$(product_group)&#34;==&#34;sar&#34;">
                  <ProcedureCall id="_1rWC"
                                 procedure="utility.raster_data.sar_sensors.menu_file_import_sar_sensors">
                    <variable name="menu_item">$(menu_item)</variable>
                  </ProcedureCall>
                </ElseifSequence>
                <ElseifSequence id="_1rWD"
                                test="&#34;$(product_group)&#34;==&#34;sentinel2&#34;">
                  <ProcedureCall id="_1rWE"
                                 procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors_sentinel2">
                    <variable name="menu_item">$(menu_item)</variable>
                  </ProcedureCall>
                </ElseifSequence>
                <ElseifSequence id="_1rWF"
                                test="&#34;$(product_group)&#34;==&#34;sentinel3&#34;">
                  <ProcedureCall id="_1rWG"
                                 procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors_sentinel3">
                    <variable name="menu_item">$(menu_item)</variable>
                  </ProcedureCall>
                </ElseifSequence>
                <ElseifSequence id="_1rWH"
                                test="&#34;$(product_group)&#34;==&#34;landsat&#34;">
                  <ProcedureCall id="_1rWI"
                                 procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors_landsat">
                    <variable name="menu_item">$(menu_item)</variable>
                  </ProcedureCall>
                </ElseifSequence>
                <ElseifSequence id="_1rWJ"
                                test="&#34;$(product_group)&#34;==&#34;seadas&#34;">
                  <ProcedureCall id="_1rWK"
                                 procedure="utility.raster_data.optical_sensors.menu_file_import_optical_sensors_seadas">
                    <variable name="menu_item">$(menu_item)</variable>
                  </ProcedureCall>
                </ElseifSequence>
              </IfSequence>
              <ProcedureCall id="_1rWL"
                             procedure="wait.appear.dialog.import_product"/>
              <IfSequence id="_1rWM"
                          test="&#34;$(open_product_dialog_appears)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1rWN"
                               procedure="utility.fill_in_open_product_dialog">
                  <variable name="prod_dir">$(dataInDir)</variable>
                  <variable name="in_out">in</variable>
                  <variable name="prod">$(fileName)</variable>
                  <variable name="product_type">$(import_data)</variable>
                </ProcedureCall>
                <ProcedureCall id="_1rWO"
                               procedure="do_click.open_product_dialog.import_product"/>
                <ServerScriptStep disabled="true" id="_1rWP" name="print">
                  <code>print "$(input_file)"</code>
                  <comment> </comment>
                </ServerScriptStep>
                <ElseSequence id="_1rWQ">
                  <ProcedureCall id="_1rWR"
                                 procedure="run-log.error_message.dialog_Import_Product_does_not_appear"/>
                </ElseSequence>
              </IfSequence>
            </TryStep>
          </IfSequence>
        </ElseSequence>
      </IfSequence>
      <ProcedureCall id="_1rWS" procedure="check.product.not_opened"/>
      <IfSequence id="_1rWT" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
        <ProcedureCall id="_1rWU" procedure="wait.product_is_opened"/>
      </IfSequence>
      <ProcedureCall id="_1rWV" procedure="check.product.not_opened"/>
      <IfSequence id="_1rWW" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
        <ProcedureCall id="_1rWX" procedure="run-log.logError">
          <variable name="message">$(fileName) did not appear</variable>
          <variable name="withScreenshots">true</variable>
        </ProcedureCall>
      </IfSequence>
      <TryStep id="_1rWY">
        <ProcedureCall id="_1rWZ"
                       procedure="wait.appear.error.dialog_SNAP_SNAP_Error"/>
        <ProcedureCall id="_1rWa" procedure="run-log.make_screensot">
          <variable name="iw_name">error_while_import</variable>
          <variable name="iw_name_example">error_dialog</variable>
        </ProcedureCall>
        <ProcedureCall id="_1rWb"
                       procedure="do_click.error_dialog.button_OK_SNAP_SNAP_Error"/>
        <ProcedureCall id="_1rWc" procedure="run-log.logError">
          <variable name="message">Error while import $(dataInDir)/$(fileName)</variable>
          <variable name="withScreenshots">false</variable>
        </ProcedureCall>
        <CatchSequence exception="TestException" id="_1rWd" maxerror="0"/>
      </TryStep>
    </Procedure>
    <Procedure id="_1pl2" name="import_csv">
      <comment>@teststep Click 'OK' button in the 'SNAP - Import CSV file' error dialog.</comment>
      <ComponentWaiter client="$(client)"
                       component="dialogSNAP_-_Import_CSV_file" id="_1pna"/>
      <CheckStringStep client="$(client)"
                       component="dialogSNAP_-_Import_CSV_file.buttonCancel"
                       id="_1pnb">
        <text>Cancel</text>
      </CheckStringStep>
      <MouseEventStep clicks="1" client="$(client)"
                      component="dialogSNAP_-_Import_CSV_file.buttonOK"
                      event="MOUSE_MPRC" id="_1pnc" modifiers="16"/>
    </Procedure>
    <Procedure id="_1pko" name="import_csv">
      <variable name="val"/>
      <comment>@teststep Click 'Use Predefined CRS' button in the 'Point Data Interpretation' dialog.</comment>
      <BasicSequence id="_1pkt" name="Aufnahme 04.05.15 09:22">
        <CheckBooleanStep checktype="checked" client="$(client)"
                          component="dialogPoint_Data_Interpretation.radioLeave_imported_data_unchanged"
                          id="_1pku"/>
        <CheckBooleanStep checktype="checked" client="$(client)"
                          component="dialogPoint_Data_Interpretation.radioInterpret_each_point_as_vertex_of_a_single_line_or_polygon_(This_will_remove_all_attributes_from_points)"
                          id="_1pkv" state="false"/>
        <CheckBooleanStep checktype="checked" client="$(client)"
                          component="dialogPoint_Data_Interpretation.radioInterpret_each_point_as_track_point"
                          id="_1pkw" state="false"/>
        <CheckStringStep client="$(client)"
                         component="dialogPoint_Data_Interpretation.TypeDialog.ok"
                         id="_1pkx">
          <text>OK</text>
        </CheckStringStep>
        <CheckStringStep client="$(client)"
                         component="dialogPoint_Data_Interpretation.TypeDialog.cancel"
                         id="_1pky">
          <text>Cancel</text>
        </CheckStringStep>
        <CheckStringStep client="$(client)"
                         component="dialogPoint_Data_Interpretation.TypeDialog.help"
                         id="_1pkz">
          <text>Help</text>
        </CheckStringStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogPoint_Data_Interpretation.TypeDialog.ok"
                        event="MOUSE_MPRC" id="_1pk+" modifiers="16"/>
        <ComponentWaiter client="$(client)"
                         component="dialogSNAP_-_Import_CSV_file" id="_1pk-"/>
        <CheckStringStep client="$(client)"
                         component="dialogSNAP_-_Import_CSV_file.buttonCancel"
                         id="_1pl0">
          <text>Cancel</text>
        </CheckStringStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogSNAP_-_Import_CSV_file.buttonOK"
                        event="MOUSE_MPRC" id="_1pl1" modifiers="16"/>
      </BasicSequence>
    </Procedure>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
