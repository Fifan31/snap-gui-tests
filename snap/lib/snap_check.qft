<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.4">
  <include>qfs.qft</include>
  <include>snap_main.qft</include>
  <include>snap_components.qft</include>
  <dependency>snap_main.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1l8s" name="check">
      <Package id="_1pYw" name="band_chooser">
        <Procedure id="_1pYz" name="checkbox_band_selected">
          <variable name="band"/>
          <comment>@teststep Test 'band' in the 'Band Chooser' dialog checked.</comment>
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="dialogBand_Chooser.check_band"
                            id="_1pWx" resvarname="checkbox_band_selected"/>
        </Procedure>
        <Procedure id="_1pZH" name="select_all_selected">
          <comment>@teststep Test 'Select All' in the 'Band Chooser' dialog checked.</comment>
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="dialogBand_Chooser.checkSelect_all"
                            id="_1pW+" resvarname="select_all_selected"/>
        </Procedure>
        <Procedure id="_1pZO" name="select_none_selected">
          <comment>@teststep Test 'Select None' in the 'Band Chooser' dialog checked.</comment>
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="dialogBand_Chooser.checkSelect_none"
                            id="_1pW-" resvarname="select_none_selected"/>
        </Procedure>
        <Procedure id="_1pZR" name="checkbox_band_selected_status">
          <variable name="band"/>
          <variable name="sel_status"/>
          <comment>@teststep  Check selection of the checkbox 'band' in the 'Band Chooser' dialog.</comment>
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="dialogBand_Chooser.check_band"
                            id="_1pZS" state="$(sel_status)"/>
        </Procedure>
        <Procedure id="_1pZT" name="select_all_selected_status">
          <variable name="sel_status"/>
          <comment>@teststep  Check selection of the checkbox 'Select All' in the 'Band Chooser' dialog.</comment>
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="dialogBand_Chooser.checkSelect_all"
                            id="_1pZU" state="$(sel_status)"/>
        </Procedure>
        <Procedure id="_1pZV" name="select_none_selected_status">
          <variable name="sel_status"/>
          <comment>@teststep  Check selection of the checkbox 'Select None' in the 'Band Chooser' dialog.</comment>
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="dialogBand_Chooser.checkSelect_none"
                            id="_1pZW" state="$(sel_status)"/>
        </Procedure>
      </Package>
      <Package disabled="true" id="_1l2F" name="files_of_type">
        <Procedure id="_1l2C" name="asar">
          <ProcedureCall id="_1l2G" procedure="import.resize_import_dialog"/>
          <CheckStringStep checktype="value" client="$(client)"
                           component="dialogESA_S-3_Toolbox_-_Import_ENVISAT_Product.comboFiles_of_type:"
                           id="_1m2d">
            <text>ENVISAT MERIS, AATSR, ASAR and ERS1/2 SAR products (*.N1,*.E1,*.E2,*.zip,*.gz)</text>
          </CheckStringStep>
        </Procedure>
        <Procedure id="_1m2c" name="envisat">
          <CheckStringStep checktype="value" client="$(client)"
                           component="dialogESA_S-3_Toolbox_-_Import_ENVISAT_Product.comboFiles_of_type:"
                           id="_1m2S">
            <text>ENVISAT MERIS, AATSR, ASAR and ERS1/2 SAR products (*.N1,*.E1,*.E2,*.zip,*.gz)</text>
          </CheckStringStep>
        </Procedure>
        <Procedure id="_1m2e" name="ers_sar">
          <CheckStringStep checktype="value" client="$(client)"
                           component="dialogESA_S-3_Toolbox_-_Import_ENVISAT_Product.comboFiles_of_type:"
                           id="_1lK2">
            <text>ENVISAT MERIS, AATSR, ASAR and ERS1/2 SAR products (*.N1,*.E1,*.E2,*.zip,*.gz)</text>
          </CheckStringStep>
        </Procedure>
        <Procedure id="_1l1z" name="dimap"/>
        <Procedure id="_1l23" name="geotiff"/>
        <Procedure id="_1l29" name="rgb"/>
        <Procedure id="_1l26" name="sentinel3">
          <CheckStringStep checktype="value" client="$(client)"
                           component="dialogESA_S-3_Toolbox_-_Import_SENTINEL-3_Product.comboFiles_of_type:"
                           id="_1kz+">
            <text>Sentinel-3 products (*.xml)</text>
          </CheckStringStep>
        </Procedure>
        <Procedure id="_1l1w" name="smos">
          <CheckStringStep checktype="value" client="$(client)"
                           component="dialogESA_S-3_Toolbox_-_Import_SMOS-EEF_Product.comboFiles_of_type:"
                           id="_1kzB">
            <text>SMOS Data Products (*.HDR,*.DBL,*.zip,*.ZIP)</text>
          </CheckStringStep>
        </Procedure>
      </Package>
      <Package id="_1kxG" name="menu">
        <Package id="_1oMg" name="tools">
          <Procedure id="_1oOZ" name="menuItemAnalyseProduct_enabled">
            <comment>@teststep Check menu Item 'Analyse Product' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.Tools.menuItem"
                              id="_1oOa"
                              resvarname="menuItemAnalyseProduct_enabled"/>
          </Procedure>
          <Procedure id="_1oN-" name="menuItemAnalyseProduct_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check if the menu item 'Analyse Product' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.Tools.menuItem"
                              id="_1oO0" state="$(enabled_status)"/>
          </Procedure>
          <Procedure id="_1oO8" name="menuItemBandMath_enabled">
            <comment>@teststep Check menu Item 'Create Band from Math Expression...' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemCreate_Band_from_Math_Expression..."
                              id="_1oOA"
                              resvarname="menuItemBandMath_enabled"/>
          </Procedure>
          <Procedure id="_1oOb" name="menuItemBandMath_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check if the menu item 'Create Band from Math Expression...' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemCreate_Band_from_Math_Expression..."
                              id="_1oOc" state="$(enabled_status)"/>
          </Procedure>
          <Procedure id="_1oOH" name="menuItemCompareProducts_enabled">
            <comment>@teststep Check menu Item 'Compare Products' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.Tools.menuItem"
                              id="_1oOK"
                              resvarname="menuItemCompareProducts_enabled"/>
          </Procedure>
          <Procedure id="_1oOd" name="menuItemCompareProducts_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check if the menu item 'Compare Products' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.Tools.menuItem"
                              id="_1oOe" state="$(enabled_status)"/>
          </Procedure>
          <Procedure id="_1oOQ" name="menuItemAttachPixelGeoCoding_enabled">
            <comment>@teststep Check menu Item 'Attach Pixel Geo-Coding...' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemAttach_Pixel_Geo-Coding..."
                              id="_1oOU"
                              resvarname="menuItemAttachPixelGeoCoding_enabled"/>
          </Procedure>
          <Procedure id="_1oOf"
                     name="menuItemAttachPixelGeoCoding_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check if the menu item 'Attach Pixel Geo-Coding...' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemAttach_Pixel_Geo-Coding..."
                              id="_1oOg" state="$(enabled_status)"/>
          </Procedure>
          <Procedure id="_1oNg"
                     name="menuItemDetachPixelGeoCoding_enabled_enabled">
            <comment>@teststep Check menu Item 'Detach Pixel Geo-Coding...' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemDetach_Pixel_Geo-Coding..."
                              id="_1oNq"
                              resvarname="menuItemDetachPixelGeoCoding_enabled_enabled"/>
          </Procedure>
          <Procedure id="_1oOh"
                     name="menuItemDetachPixelGeoCoding_enabled_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check if the menu item 'Detach Pixel Geo-Coding...' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemDetach_Pixel_Geo-Coding..."
                              id="_1oOi" state="$(enabled_status)"/>
          </Procedure>
          <Procedure id="_1oMh" name="menuItemMergeProducts_enabled">
            <comment>@teststep Check menu Item 'Merge Products' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.Tools.menuItem"
                              id="_1oMs"
                              resvarname="menuItemMergeProducts_enabled"/>
          </Procedure>
          <Procedure id="_1oOj" name="menuItemMergeProducts_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check if the menu item 'Merge Products' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.Tools.menuItem"
                              id="_1oOk" state="$(enabled_status)"/>
          </Procedure>
          <Procedure id="_1oN0" name="menuItemPlugins_enabled">
            <comment>@teststep Check menu Item 'Plugins' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemPlugins"
                              id="_1oNC"
                              resvarname="menuItemPlugins_enabled"/>
          </Procedure>
          <Procedure id="_1oOl" name="menuItemPlugins_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check if the menu item 'Plugins' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemPlugins"
                              id="_1oOm" state="$(enabled_status)"/>
          </Procedure>
          <Procedure id="_1oNL" name="menuItemOptions_enabled">
            <comment>@teststep Check menu Item 'Options' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemOptions"
                              id="_1oNY"
                              resvarname="menuItemOptions_enabled"/>
          </Procedure>
          <Procedure id="_1oOn" name="menuItemOptions_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check if the menu item 'Options' is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="NbMainWindow.menuItemOptions"
                              id="_1oOo" state="$(enabled_status)"/>
          </Procedure>
        </Package>
        <Procedure id="_H" name="file_enabled">
          <comment>@teststep Check menu File enabled</comment>
          <CheckBooleanStep checktype="enabled" client="$(client)"
                            component="NbMainWindow.File" id="_I"/>
        </Procedure>
      </Package>
      <Package id="_1pZX" name="opened">
        <Package id="_1pxT" name="export">
          <Procedure id="_1qae" name="export_colour_legend_image_dialog">
            <TryStep id="_1qag">
              <ComponentWaiter client="$(client)"
                               component="dialogSNAP_-_export_Colour_Legend_Image"
                               id="_1qah" timeout="10"/>
              <SetGlobalStep id="_1qai"
                             varname="export_colour_legend_appears">
                <default>true</default>
              </SetGlobalStep>
              <CatchSequence exception="TestException" id="_1qaj"
                             maxerror="0">
                <SetGlobalStep id="_1qak"
                               varname="export_colour_legend_appears">
                  <default>false</default>
                </SetGlobalStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pxU" name="export_colour_palette_dialog">
            <TryStep id="_1qaa">
              <ComponentWaiter client="$(client)"
                               component="dialogExport_Colour_Palette"
                               id="_1qYz" timeout="100"/>
              <SetGlobalStep id="_1qac"
                             varname="export_colour_palette_appears">
                <default>true</default>
              </SetGlobalStep>
              <CatchSequence exception="TestException" id="_1qab"
                             maxerror="0">
                <SetGlobalStep id="_1qad"
                               varname="export_colour_palette_appears">
                  <default>false</default>
                </SetGlobalStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1qal" name="export_geocoding_envi_dialog">
            <TryStep id="_1qam">
              <ComponentWaiter client="$(client)"
                               component="dialogExport_ENVI_Ground_Control_Points"
                               id="_1qcH" timeout="100"/>
              <SetGlobalStep id="_1qao"
                             varname="export_geocoding_envi_appears">
                <default>true</default>
              </SetGlobalStep>
              <CatchSequence exception="TestException" id="_1qap"
                             maxerror="0">
                <SetGlobalStep id="_1qaq"
                               varname="export_geocoding_envi_appears">
                  <default>false</default>
                </SetGlobalStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1qbD" name="view_as_image">
            <comment>@teststep Do click Menu Item 'View as Image'.</comment>
          </Procedure>
          <Procedure id="_1qc1" name="view_as_google_earth_KMZ">
            <comment>@teststep Do click Menu Item 'View as Google Earth KMZ'.</comment>
          </Procedure>
          <Procedure id="_1qcD" name="transect_pixels">
            <comment>@teststep Do click Menu Item 'Transect Pixels'.</comment>
          </Procedure>
          <Procedure id="_1qcP" name="mask_pixels">
            <comment>@teststep Do click Menu Item 'Mask Pixels'.</comment>
          </Procedure>
          <Procedure id="_1qcb" name="geometry_as_shape_file">
            <comment>@teststep Do click Menu Item 'Geometry as Shape file'.</comment>
            <TryStep id="_1qco">
              <ComponentWaiter client="$(client)"
                               component="dialogSNAP_-_Export_Geometry_as_ESRI_Shapefile"
                               id="_1qcn" timeout="100"/>
              <SetGlobalStep id="_1qcq"
                             varname="export_geometry_as_shape_appears">
                <default>true</default>
              </SetGlobalStep>
              <CatchSequence exception="TestException" id="_1qcr"
                             maxerror="0">
                <SetGlobalStep id="_1qcs"
                               varname="export_geometry_as_shape_appears">
                  <default>false</default>
                </SetGlobalStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1qhj" name="export_smos_ee_files_to_netcdf"/>
          <Procedure id="_1qhL" name="export_smos_grid_points">
            <TryStep id="_1qhk">
              <ComponentWaiter client="$(client)"
                               component="dialogExport_SMOS_Grid_Points"
                               id="_1qc6" timeout="10"/>
              <SetGlobalStep id="_1qhm"
                             varname="export_smos_grid_points_dialog_appears">
                <default>true</default>
              </SetGlobalStep>
              <CatchSequence exception="TestException" id="_1qhn"
                             maxerror="0">
                <TryStep id="_1qhp">
                  <ComponentWaiter client="$(client)"
                                   component="dialogExport_SMOS_Grid_Points"
                                   id="_1qhq" timeout="1000"/>
                  <SetGlobalStep id="_1qhr"
                                 varname="export_smos_grid_points_dialog_appears">
                    <default>true</default>
                  </SetGlobalStep>
                  <CatchSequence exception="TestException" id="_1qhs"
                                 maxerror="0">
                    <SetGlobalStep id="_1qht"
                                   varname="export_smos_grid_points_dialog_appears">
                      <default>false</default>
                    </SetGlobalStep>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
        </Package>
        <Procedure id="_1mmx" name="band_maths_expression_editor">
          <ComponentWaiter client="$(client)"
                           component="dialogBand_Maths_Expression_Editor"
                           id="_1mju" timeout="10"/>
        </Procedure>
        <Procedure id="_1pl2" name="dialog_SNAP_Import_CSV_file">
          <comment>@teststep Click 'OK' button in the 'SNAP - Import CSV file' error dialog.</comment>
          <ComponentWaiter client="$(client)"
                           component="dialogSNAP_-_Import_CSV_file" id="_1pna"
                           timeout="10"/>
        </Procedure>
        <Procedure id="_1pn3" name="expression_editor">
          <ComponentWaiter client="$(client)" component="dialog5" id="_1pn4"
                           timeout="10"/>
        </Procedure>
        <Procedure id="_1pp3" name="import_CSV_data_dialog">
          <ComponentWaiter client="$(client)"
                           component="dialogImport_CSV_Data" id="_1pp5"
                           timeout="10"/>
        </Procedure>
        <Procedure id="_1pZY" name="import_CSV_file_window">
          <ComponentWaiter client="$(client)"
                           component="dialogImport_CSV_file" id="_1pZZ"
                           timeout="10"/>
        </Procedure>
        <Procedure id="_1px5" name="layer_manager">
          <ComponentWaiter client="$(client)"
                           component="NbMainWindow.Content_displayer.treeTransparency:2"
                           id="_1ptJ" raise="false" timeout="10"/>
        </Procedure>
        <Procedure id="_1po+" name="point_data_interpretation_dialog">
          <ComponentWaiter client="$(client)"
                           component="dialogPoint_Data_Interpretation"
                           id="_1pp0" timeout="1000"/>
        </Procedure>
      </Package>
      <Package id="_1oOp" name="tools">
        <Package id="_1oOq" name="bandMaths">
          <Procedure id="_1oP4" name="productName">
            <variable name="val"/>
            <comment>@teststep Check product name.</comment>
            <IfSequence id="_1o+6" test="${qftest:windows}">
              <CheckStringStep checktype="value" client="$(client)"
                               component="productName" id="_1oP5">
                <text>$(val)</text>
              </CheckStringStep>
              <ElseifSequence id="_1o+7" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckStringStep checktype="value" client="$(client)"
                                 component="productName" id="_1o+g">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseifSequence>
              <ElseSequence id="_1o+8">
                <CheckStringStep checktype="value" client="$(client)"
                                 component="productName" id="_1ozv">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPC" name="bandName">
            <variable name="val"/>
            <comment>@teststep Check band name.</comment>
            <IfSequence id="_1o+9" test="${qftest:windows}">
              <CheckStringStep client="$(client)"
                               component="BandMathsDialog.bandDescription"
                               id="_1oPF">
                <text>$(val)</text>
              </CheckStringStep>
              <ElseifSequence id="_1o+A" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckStringStep client="$(client)" component="bandName"
                                 id="_1o+h">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseifSequence>
              <ElseSequence id="_1o+B">
                <CheckStringStep client="$(client)" component="bandName"
                                 id="_1ozw">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPK" name="bandDescription">
            <variable name="val"/>
            <comment>@teststep Check band description.</comment>
            <IfSequence id="_1o+C" test="${qftest:windows}">
              <CheckStringStep client="$(client)"
                               component="BandMathsDialog.bandDescription"
                               disabled="true" id="_1oPN">
                <text>$(val)</text>
              </CheckStringStep>
              <CheckStringStep client="$(client)" component="bandDescription"
                               id="_1pZy">
                <text>$(val)</text>
              </CheckStringStep>
              <ElseifSequence id="_1o+D" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckStringStep client="$(client)"
                                 component="bandDescription" id="_1o+i">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseifSequence>
              <ElseSequence id="_1o+E">
                <CheckStringStep client="$(client)"
                                 component="bandDescription" id="_1ozx">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPS" name="bandUnit">
            <variable name="val"/>
            <comment>@teststep Check band unit.</comment>
            <IfSequence id="_1o+F" test="${qftest:windows}">
              <CheckStringStep client="$(client)"
                               component="BandMathsDialog.bandUnit"
                               disabled="true" id="_1oPW">
                <text>$(val)</text>
              </CheckStringStep>
              <CheckStringStep client="$(client)" component="bandUnit"
                               id="_1pZz">
                <text>$(val)</text>
              </CheckStringStep>
              <ElseifSequence id="_1o+G" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckStringStep client="$(client)" component="bandUnit"
                                 id="_1ozy">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseifSequence>
              <ElseSequence id="_1o+H">
                <CheckStringStep client="$(client)" component="bandUnit"
                                 id="_1o+j">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPa" name="bandWavelength">
            <variable name="val"/>
            <comment>@teststep Check band wavelength</comment>
            <IfSequence id="_1o+I" test="${qftest:windows}">
              <CheckStringStep client="$(client)"
                               component="BandMathsDialog.bandWavelength"
                               disabled="true" id="_1oPf">
                <text>$(val)</text>
              </CheckStringStep>
              <CheckStringStep client="$(client)" component="bandWavelength"
                               id="_1pZ+">
                <text>$(val)</text>
              </CheckStringStep>
              <ElseifSequence id="_1o+J" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckStringStep client="$(client)" component="bandWavelength"
                                 id="_1ozz">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseifSequence>
              <ElseSequence id="_1o+K">
                <CheckStringStep client="$(client)" component="bandWavelength"
                                 id="_1o+k">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oOs" name="noDataValue">
            <variable name="val"/>
            <comment>@teststep Check noData value</comment>
            <IfSequence id="_1o+L" test="${qftest:windows}">
              <CheckStringStep client="$(client)" component="noDataValue"
                               id="_1pZ-">
                <text>$(val)</text>
              </CheckStringStep>
              <CheckStringStep client="$(client)"
                               component="BandMathsDialog.noDataValue"
                               disabled="true" id="_1oO-">
                <text>$(val)</text>
              </CheckStringStep>
              <ElseifSequence id="_1o+M" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckStringStep client="$(client)" component="noDataValue"
                                 id="_1o+0">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseifSequence>
              <ElseSequence id="_1o+N">
                <CheckStringStep client="$(client)" component="noDataValue"
                                 id="_1o+l">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPi" name="expression">
            <variable name="val"/>
            <comment>@teststep Check expression.</comment>
            <IfSequence id="_1o+O" test="${qftest:windows}">
              <CheckStringStep client="$(client)"
                               component="BandMathsDialog.expression"
                               disabled="true" id="_1oPj">
                <text>$(val)</text>
              </CheckStringStep>
              <CheckStringStep client="$(client)" component="expression"
                               id="_1pa0">
                <text>$(val)</text>
              </CheckStringStep>
              <ElseifSequence id="_1o+P" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckStringStep client="$(client)" component="expression"
                                 id="_1o+1">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseifSequence>
              <ElseSequence id="_1o+Q">
                <CheckStringStep client="$(client)" component="expression"
                                 id="_1o+m">
                  <text>$(val)</text>
                </CheckStringStep>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPr" name="saveExpressionOnly_selected">
            <comment>@teststep Test 'Virtual (save expression only)' checked</comment>
            <IfSequence id="_1o+R" test="${qftest:windows}">
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="BandMathsDialog.saveExpressionOnly"
                                disabled="true" id="_1oPt"
                                resvarname="saveExpressionOnly_selected"/>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="saveExpressionOnly" id="_1pa1"
                                resvarname="saveExpressionOnly_selected"/>
              <ElseifSequence id="_1o+S" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckBooleanStep checktype="checked" client="$(client)"
                                  component="saveExpressionOnly" id="_1o+n"
                                  resvarname="saveExpressionOnly_selected"/>
              </ElseifSequence>
              <ElseSequence id="_1o+T">
                <CheckBooleanStep checktype="checked" client="$(client)"
                                  component="saveExpressionOnly" id="_1oz+"
                                  resvarname="saveExpressionOnly_selected"/>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPv" name="saveExpressionOnly_selected_status">
            <variable name="sel_status"/>
            <comment>@teststep Check selection of the checkbox 'Virtual (save expression only)'.</comment>
            <IfSequence id="_1o+U" test="${qftest:windows}">
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="BandMathsDialog.saveExpressionOnly"
                                disabled="true" id="_1oPw"
                                state="$(sel_status)"/>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="saveExpressionOnly" id="_1pa2"
                                state="$(sel_status)"/>
              <ElseifSequence id="_1o+V" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckBooleanStep checktype="checked" client="$(client)"
                                  component="saveExpressionOnly" id="_1o+p"
                                  state="$(sel_status)"/>
              </ElseifSequence>
              <ElseSequence id="_1o+W">
                <CheckBooleanStep checktype="checked" client="$(client)"
                                  component="saveExpressionOnly" id="_1o+o"
                                  state="$(sel_status)"/>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPx" name="noDataValueUsed_selected">
            <comment>@teststep Test 'Replace NaN and infinity results' checked</comment>
            <IfSequence id="_1o+X" test="${qftest:windows}">
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="BandMathsDialog.noDataValueUsed"
                                disabled="true" id="_1oPy"
                                resvarname="noDataValueUsed_selected"/>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="noDataValueUsed" id="_1pa3"
                                resvarname="noDataValueUsed_selected"/>
              <ElseifSequence id="_1o+Y" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckBooleanStep checktype="checked" client="$(client)"
                                  component="noDataValueUsed" id="_1o+s"
                                  resvarname="noDataValueUsed_selected"/>
              </ElseifSequence>
              <ElseSequence id="_1o+Z">
                <CheckBooleanStep checktype="checked" client="$(client)"
                                  component="noDataValueUsed" id="_1o+q"
                                  resvarname="noDataValueUsed_selected"/>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPk" name="noDataValueUsed_selected_status">
            <variable name="sel_status"/>
            <comment>@teststep Check selection of the checkbox 'Replace NaN and infinity results'.</comment>
            <IfSequence id="_1o+a" test="${qftest:windows}">
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="BandMathsDialog.noDataValueUsed"
                                disabled="true" id="_1oPn"
                                state="$(sel_status)"/>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="noDataValueUsed" id="_1pa4"
                                state="$(sel_status)"/>
              <ElseifSequence id="_1o+b" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckBooleanStep checktype="checked" client="$(client)"
                                  component="noDataValueUsed" id="_1o+t"
                                  state="$(sel_status)"/>
              </ElseifSequence>
              <ElseSequence id="_1o+c">
                <CheckBooleanStep checktype="checked" client="$(client)"
                                  component="noDataValueUsed" id="_1o+r"
                                  state="$(sel_status)"/>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oTg" name="noDataValueUsed_enabled_status">
            <variable name="enabled_status"/>
            <comment>@teststep Check the checkbox 'Replace NaN and infinity results' enabled status.</comment>
            <IfSequence id="_1o+d" test="${qftest:windows}">
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="BandMathsDialog.noDataValueUsed"
                                disabled="true" id="_1oTh"
                                state="$(enabled_status)"/>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="noDataValueUsed" id="_1pa5"
                                state="$(enabled_status)"/>
              <ElseifSequence id="_1o+e" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <CheckBooleanStep checktype="enabled" client="$(client)"
                                  component="noDataValueUsed" id="_1o+v"
                                  state="$(enabled_status)"/>
              </ElseifSequence>
              <ElseSequence id="_1o+f">
                <CheckBooleanStep checktype="enabled" client="$(client)"
                                  component="noDataValueUsed" id="_1o+u"
                                  state="$(enabled_status)"/>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Package id="_1oU9" name="expression_Editor">
            <Procedure id="_1mjd" name="band_name">
              <variable name="band_name"/>
              <comment>@teststep Check band name.</comment>
              <CheckStringStep checktype="item" client="$(client)"
                               component="dialogBand_Maths_Expression_Editor.listData_sources_band"
                               id="_1mjv">
                <text>radiance_1</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1oVS" name="show_bands_selected">
              <comment>@teststep Check 'Show bands' selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="dialogBand_Maths_Expression_Editor.checkShow_bands"
                                id="_1oVT" resvarname="show_bands_selected"/>
            </Procedure>
            <Procedure id="_1oVX" name="show_masks_selected">
              <comment>@teststep Check 'Show masks' selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="dialogBand_Maths_Expression_Editor.checkShow_masks"
                                id="_1oVZ" resvarname="show_masks_selected"/>
            </Procedure>
            <Procedure id="_1oVc" name="show_tie-point_grids_selected">
              <comment>@teststep Check 'Show tie-point grids' selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="dialogBand_Maths_Expression_Editor.checkShow_tie-point_grids"
                                id="_1oVf"
                                resvarname="show_tie-point_grids_selected"/>
            </Procedure>
            <Procedure id="_1oVh" name="show_single_flags_selected">
              <comment>@teststep Check 'Show single flags' selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="dialogBand_Maths_Expression_Editor.checkShow_single_flags"
                                id="_1oVl"
                                resvarname="show_single_flags_selected"/>
            </Procedure>
            <Procedure id="_1oVm" name="show_bands_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check selection of the 'Show bands' checkbox.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="dialogBand_Maths_Expression_Editor.checkShow_bands"
                                id="_1oVn" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1oVr" name="show_masks_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check selection of the 'Show masks' checkbox.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="dialogBand_Maths_Expression_Editor.checkShow_masks"
                                id="_1oVt" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1oVw" name="show_tie-point_grids_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check selection of the 'Show tie-point grids' checkbox.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="dialogBand_Maths_Expression_Editor.checkShow_tie-point_grids"
                                id="_1oVz" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1oV6" name="show_single_flags_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check selection of the 'Show single flags' checkbox.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="dialogBand_Maths_Expression_Editor.checkShow_single_flags"
                                id="_1oVA" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1oWH" name="experession">
              <variable name="exp"/>
              <comment>@teststep Check expression.</comment>
              <CheckStringStep client="$(client)"
                               component="dialogBand_Maths_Expression_Editor.codeArea"
                               id="_1oV2">
                <text>$(exp)</text>
              </CheckStringStep>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1oaT" name="imaging">
          <Package id="_1oaU" name="navigation">
            <Procedure id="_1ocE" name="zoom_factor">
              <variable name="val"/>
              <comment>@teststep Check zoom factor.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.Content_displayer.text2"
                               id="_1ocG">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1oaf" name="rotation">
              <variable name="val"/>
              <comment>@teststep Check rotation.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.Content_displayer.text"
                               id="_1oam">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1oa+" name="help_button_enabled">
              <comment>@teststep Check 'Help' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.helpButton"
                                id="_1oaq"/>
            </Procedure>
            <Procedure id="_1ob6" name="zoomIn_button_enabled">
              <comment>@teststep Check 'zoomIn' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.zoomInButton"
                                id="_1oag"/>
            </Procedure>
            <Procedure id="_1obE" name="zoomOut_button_enabled">
              <comment>@teststep Check 'zoomOut' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.zoomOutButton"
                                id="_1oah"/>
            </Procedure>
            <Procedure id="_1obk" name="zoomDefault_button_enabled">
              <comment>@teststep Check 'zoomDefault' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.zoomDefaultButton"
                                id="_1oai"/>
            </Procedure>
            <Procedure id="_1obs" name="zoomAll_button_enabled">
              <comment>@teststep Check 'zoomAll' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.zoomAllButton"
                                id="_1oaj"/>
            </Procedure>
            <Procedure id="_1ob+" name="syncViews_button_enabled">
              <comment>@teststep Check 'syncViews' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.syncViewsButton"
                                id="_1oak"/>
            </Procedure>
            <Procedure id="_1oc6" name="syncCursor_button_enabled">
              <comment>@teststep Check 'syncCursor' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.syncCursorButton"
                                id="_1oal"/>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1ocH" name="pixel_geocoding">
          <Package id="_1oeB" name="menu_item">
            <Procedure id="_1oeH" name="attach_pixel_Geocoding_enabled">
              <comment>@teststep Check  menu item 'Attach Pixel Geo-Coding...' enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.menuItemAttach_Pixel_Geo-Coding..."
                                id="_1oeI"
                                resvarname="attach_pixel_Geocoding_enabled"/>
            </Procedure>
            <Procedure id="_1oeK" name="detach_pixel_Geocoding_enabled">
              <comment>@teststep Check  menu item 'Detach Pixel Geo-Coding...' enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.menuItemDetach_Pixel_Geo-Coding..."
                                id="_1oeM"
                                resvarname="detach_pixel_Geocoding_enabled"/>
            </Procedure>
            <Procedure id="_1oeN"
                       name="attach_pixel_Geocoding_enabled_status">
              <variable name="enabled"/>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.menuItemAttach_Pixel_Geo-Coding..."
                                id="_1oeO" state="$(enabled)"/>
            </Procedure>
            <Procedure id="_1oeE"
                       name="detach_pixel_Geocoding_enabled_status">
              <variable name="enabled"/>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.menuItemDetach_Pixel_Geo-Coding..."
                                id="_1oeG" state="$(enabled)"/>
            </Procedure>
          </Package>
          <Package id="_1ocJ" name="attach">
            <Procedure id="_1oao" name="longitude_band">
              <variable name="val"/>
              <comment>@teststep Check  Longitude band value.</comment>
              <CheckStringStep checktype="value" client="$(client)"
                               component="dialogAttach_Pixel_Geo-Coding.comboLongitude_band:"
                               id="_1oap">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1odS" name="latitude_band">
              <variable name="val"/>
              <comment>@teststep Check  Latitude band value.</comment>
              <CheckStringStep checktype="value" client="$(client)"
                               component="dialogAttach_Pixel_Geo-Coding.comboLatitude_band:"
                               id="_1odT">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1oda" name="valid_mask">
              <variable name="val"/>
              <comment>@teststep Check  'Valid Mask' value.</comment>
              <CheckStringStep client="$(client)"
                               component="dialogAttach_Pixel_Geo-Coding.textValid_mask:"
                               id="_1odc">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1odi" name="search_radius">
              <variable name="val"/>
              <comment>@teststep Check  'Search Radius' value.</comment>
              <CheckStringStep client="$(client)"
                               component="dialogAttach_Pixel_Geo-Coding.textSearch_radius:"
                               id="_1odm">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1ody" name="valid_mask_button_enabled">
              <comment>@teststep Check  valid mask button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="dialogAttach_Pixel_Geo-Coding.button..."
                                id="_1odz"/>
            </Procedure>
            <Procedure id="_1oe1" name="ok_button_enabled">
              <comment>@teststep Check  'Ok' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="dialogAttach_Pixel_Geo-Coding.PixelGeoCodingSetupDialog.ok"
                                id="_1oe3"/>
            </Procedure>
            <Procedure id="_1oe6" name="cancel_button_enabled">
              <comment>@teststep Check  'Cansel' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="dialogAttach_Pixel_Geo-Coding.PixelGeoCodingSetupDialog.cancel"
                                id="_1oe9"/>
            </Procedure>
            <Procedure id="_1odJ" name="help_button_enabled">
              <comment>@teststep Check  'Help' button enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="dialogAttach_Pixel_Geo-Coding.PixelGeoCodingSetupDialog.help"
                                id="_1odR"/>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package disabled="true" id="_1oMF" name="main_toolbar">
        <Procedure id="_1oMG" name="garbage_collection_visible">
          <CheckBooleanStep checktype="visible" client="$(client)"
                            component="NbMainWindow.Memory2.comClick_to_force_garbage_collection"
                            id="_1oMH"/>
        </Procedure>
        <Procedure id="_1oMe" name="profile_the_application_visible">
          <CheckBooleanStep checktype="visible" client="$(client)"
                            component="NbMainWindow.buttonTipProfile_the_Application_(Alt+Umschalt+Y)"
                            id="_1oMf"/>
        </Procedure>
        <Procedure id="_1oMT"
                   name="stop_application_profiling_and_take_snapshot_visible">
          <CheckBooleanStep checktype="visible" client="$(client)"
                            component="NbMainWindow.buttonTipStop_Application_Profiling_and_Take_a_Snapshot_(Alt+Umschalt+Y)"
                            id="_1oMU"/>
        </Procedure>
      </Package>
      <Package disabled="true" id="_1oGh" name="masks_layers">
        <Procedure id="_1oGi" name="all_mask_and_layer">
          <TestStep id="_1oLh" name="check_mask_manager">
            <comment>@teststep Check Mask Managment.</comment>
            <ProcedureCall id="_1oLi"
                           procedure="do_click.main_toolbar.views.mask_manager">
              <comment>@teststep Open Mask Manager</comment>
            </ProcedureCall>
            <SetGlobalStep id="_1oLj" varname="table">
              <default>Dialog.maskTable</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oLk" procedure="get.tree.rowCount">
              <variable name="id">$(table)</variable>
              <comment>@teststep Get number of masks.</comment>
            </ProcedureCall>
            <ServerScriptStep disabled="true" id="_1oLl" name="print">
              <code>print "Masks number = $(rowCount)"  </code>
            </ServerScriptStep>
            <SetGlobalStep id="_1oLm" varname="masks_number">
              <default>$(rowCount)</default>
            </SetGlobalStep>
            <IfSequence id="_1oLn" test="$(masks_number)&gt;0">
              <comment>@teststep Select and deselect all the mask after each other.</comment>
              <RepeatSequence count="$(masks_number)" id="_1oLo"
                              name="check_masks" var="m">
                <SetGlobalStep id="_1oLp" varname="table">
                  <default>Dialog.maskTable</default>
                </SetGlobalStep>
                <TryStep id="_1oLq" name="select_visible">
                  <ProcedureCall id="_1oLr"
                                 procedure="do_click.table.checkbox">
                    <variable name="tableId">$(table)</variable>
                    <variable name="column">0</variable>
                    <variable name="row">$(m)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1oLs"
                                 maxerror="0">
                    <ServerScriptStep id="_1oLt" name="error">
                      <code>rc.logError("Mask $(m) cannot be selected.")</code>
                    </ServerScriptStep>
                  </CatchSequence>
                </TryStep>
                <TryStep id="_1oLu" name="deselect_visible">
                  <ProcedureCall id="_1oLv"
                                 procedure="do_click.table.checkbox">
                    <variable name="tableId">$(table)</variable>
                    <variable name="column">0</variable>
                    <variable name="row">$(m)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1oLw"
                                 maxerror="0">
                    <ServerScriptStep id="_1oLx" name="error">
                      <code>rc.logError("Mask $(m) cannot be selected.")</code>
                    </ServerScriptStep>
                  </CatchSequence>
                </TryStep>
              </RepeatSequence>
              <ElseSequence id="_1oLy">
                <ServerScriptStep id="_1oLz" name="error">
                  <code>rc.logError("Mask manager is empty.")</code>
                </ServerScriptStep>
              </ElseSequence>
            </IfSequence>
            <ProcedureCall id="_1oL+" procedure="close.dialog">
              <comment>@teststep Close Mask Manager</comment>
            </ProcedureCall>
            <ProcedureCall id="_1oL-"
                           procedure="do_click.run_the_Garbage_Collector">
              <comment>@teststep Force a garbage collection.</comment>
            </ProcedureCall>
          </TestStep>
          <TestStep id="_1oM0" name="check_layer_manager">
            <comment>@teststep Check Layer Managment.</comment>
            <ProcedureCall id="_1oM1"
                           procedure="do_click.main_toolbar.views.layer_manager">
              <comment>@teststep Open Layer Manager</comment>
            </ProcedureCall>
            <ProcedureCall id="_1oM2" procedure="get.tree.layer_node_id">
              <variable name="layer_name">Masks</variable>
              <comment>@teststep Find Masks in the layer manager</comment>
            </ProcedureCall>
            <ServerScriptStep disabled="true" id="_1oM3" name="print">
              <code>print "Layer Masks id = $(layer_node_id)"  </code>
            </ServerScriptStep>
            <ProcedureCall id="_1oM4"
                           procedure="do_click.layer_manager.layer_node">
              <variable name="layer_node1">$(layer_node_id)</variable>
              <variable name="layer_node2"/>
              <comment>@teststep Open Masks node in the layer manager</comment>
            </ProcedureCall>
            <IfSequence id="_1oM5" test="$(masks_number)&gt;0">
              <comment>@teststep Select and deselect all the layer after each other.</comment>
              <RepeatSequence count="$(masks_number)" id="_1oM6"
                              name="check_masks" var="m">
                <ProcedureCall id="_1oM7"
                               procedure="do_click.layer_manager.layer_checkbox">
                  <variable name="layer_node1">$(layer_node_id)</variable>
                  <variable name="layer_node2">$(m)</variable>
                </ProcedureCall>
              </RepeatSequence>
              <ProcedureCall id="_1oM8"
                             procedure="do_click.run_the_Garbage_Collector"/>
              <RepeatSequence count="$(masks_number)" id="_1oM9"
                              name="check_masks" var="m">
                <ProcedureCall id="_1oMA"
                               procedure="do_click.layer_manager.layer_checkbox">
                  <variable name="layer_node1">$(layer_node_id)</variable>
                  <variable name="layer_node2">$(m)</variable>
                </ProcedureCall>
              </RepeatSequence>
              <ProcedureCall id="_1oMB"
                             procedure="do_click.run_the_Garbage_Collector">
                <comment>@teststep Force a garbage collection.</comment>
              </ProcedureCall>
              <ElseSequence id="_1oMC">
                <ServerScriptStep id="_1oMD" name="error">
                  <code>rc.logError("Layer manager is empty.")</code>
                </ServerScriptStep>
              </ElseSequence>
            </IfSequence>
            <ProcedureCall id="_1oME" procedure="close.dialog">
              <comment>@teststep Close Layer Manager</comment>
            </ProcedureCall>
          </TestStep>
        </Procedure>
      </Package>
      <Package disabled="true" id="_1l8p" name="navigation_window">
        <Procedure id="_1l8q" name="zoomFactor">
          <variable name="val"/>
          <comment>@teststep Check zoom factor</comment>
        </Procedure>
      </Package>
      <Package disabled="true" id="_1lFb" name="placemark_dialog">
        <Procedure id="_1lHh" name="pixelX_new_pin_enabled">
          <CheckBooleanStep checktype="enabled" client="$(client)"
                            component="New_Pin.pixelX" id="_1lHi"
                            resvarname="pixelX_new_pin_enabled"/>
        </Procedure>
        <Procedure id="_1lHe" name="pixelX_new_pin_enabled_status">
          <variable name="pixelX_new_pin_enabled"/>
          <CheckBooleanStep checktype="enabled" client="$(client)"
                            component="New_Pin.pixelX" id="_1lHf"
                            state="$(pixelX_new_pin_enabled)"/>
        </Procedure>
        <Procedure id="_1lHj" name="pixelY_new_pin_enabled">
          <CheckBooleanStep checktype="enabled" client="$(client)"
                            component="New_Pin.pixelY" id="_1lHT"
                            resvarname="pixelY_new_pin_enabled"/>
        </Procedure>
        <Procedure id="_1lHl" name="pixelY_new_pin_enabled_status">
          <variable name="pixelY_new_pin_enabled"/>
          <CheckBooleanStep checktype="enabled" client="$(client)"
                            component="New_Pin.pixelY" id="_1lHm"
                            state="$(pixelY_new_pin_enabled)"/>
        </Procedure>
        <Procedure id="_1lHc" name="usePixelPos_new_pin_selected">
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="New_Pin.usePixelPos" id="_1lHd"
                            resvarname="usePixelPos_new_pin_selected"/>
        </Procedure>
        <Procedure id="_1lHK" name="usePixelPos_new_pin_selected_status">
          <variable name="usePixelPos_selected"/>
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="New_Pin.usePixelPos" id="_1lF2"
                            state="$(usePixelPos_selected)"/>
        </Procedure>
      </Package>
      <Package id="_1l35" name="product">
        <Procedure id="_1jvQ" name="node_not_exists">
          <variable name="node"/>
          <variable name="nodeSeparator">@</variable>
          <variable name="linear">false</variable>
          <comment>@teststep Check  product node does not exist.</comment>
          <ServerScriptStep disabled="true" id="_1oRb" name="print">
            <code>print "node = $(node)"</code>
          </ServerScriptStep>
          <SetGlobalStep id="_1mKN" local="true" varname="id">
            <default>NbMainWindow.Product_Explorer.tree</default>
          </SetGlobalStep>
          <ProcedureCall disabled="true" id="_1oRc" procedure="tree.expand">
            <variable name="tree_id">$(id)&amp;/0</variable>
          </ProcedureCall>
          <TryStep id="_1l8Q" name="Override option">
            <ClientScriptStep client="$(client)"
                              engine="${default:guiengine:awt}" id="_1l8U"
                              name="Set legacy option">
              <code>rc.setOption("LegacyFetchIndex", rc.getBool("linear"))</code>
            </ClientScriptStep>
            <FetchIndexStep client="$(client)"
                            component="$(id)$(nodeSeparator)$(node)"
                            id="_1mKM" local="true" varname="index"/>
            <ServerScriptStep disabled="true" id="_1l5A" name="print">
              <code>print "$(new_band_id)"</code>
            </ServerScriptStep>
            <ServerScriptStep id="_1oIA" name="error">
              <code>rc.logError("'$(node)' exists.")</code>
            </ServerScriptStep>
            <CatchSequence exception="TestException" id="_1mKO" maxerror="0"/>
            <FinallySequence id="_1l8S" name="Reset option">
              <ClientScriptStep client="$(client)"
                                engine="${default:guiengine:awt}" id="_1l8T"
                                name="Unset legacy option">
                <code>rc.unsetOption("LegacyFetchIndex")</code>
              </ClientScriptStep>
            </FinallySequence>
          </TryStep>
        </Procedure>
        <Procedure id="_9Kn" name="not_opened">
          <IfSequence id="_1o+w" test="${qftest:windows}">
            <CheckItemsStep client="$(client)"
                            component="NbMainWindow.Product_Explorer.tree"
                            id="_9Kp" resvarname="not_opened"/>
            <ElseifSequence id="_1o+x" name="MAC?"
                            test="'${system:os.name}' .find('Mac OS X')&gt;=0">
              <CheckItemsStep client="$(client)"
                              component="Product_Explorer.tree" id="_1o++"
                              resvarname="not_opened"/>
            </ElseifSequence>
            <ElseSequence id="_1o+y">
              <CheckItemsStep client="$(client)"
                              component="NbMainWindow.Product_Explorer.tree"
                              id="_1o+z" resvarname="not_opened"/>
              <CheckItemsStep client="$(client)"
                              component="Product_Explorer.tree"
                              disabled="true" id="_1px6"
                              resvarname="not_opened"/>
            </ElseSequence>
          </IfSequence>
        </Procedure>
        <Procedure id="_1lCP" name="tree_number_elements">
          <variable name="number_elements"/>
          <comment>@teststep Check number elements in the product tree.</comment>
          <IfSequence id="_1lCU"
                      test="&#34;$(number_elements)&#34;&lt;&gt;&#34;&#34;">
            <SetGlobalStep id="_1oGc" local="true"
                           varname="tree_component_id">
              <default>NbMainWindow.Product_Explorer.tree</default>
            </SetGlobalStep>
            <ProcedureCall id="_1lCQ" procedure="tree.expand">
              <variable name="tree_id">$(tree_component_id)&amp;/0</variable>
            </ProcedureCall>
            <ProcedureCall id="_1m2g" procedure="tree.rowCount">
              <variable name="tree_id">$(tree_component_id)</variable>
            </ProcedureCall>
            <ServerScriptStep id="_Cbr" name="checkEqual">
              <code>rc.checkEqual($(rowCount)*1, $(number_elements)*1, "tree elements", rc.ERROR)</code>
            </ServerScriptStep>
          </IfSequence>
        </Procedure>
        <Procedure id="_1oPz" name="band_properties_virtual_band"/>
      </Package>
      <Package disabled="true" id="_1lbo" name="smos_box">
        <Package id="_1lbx" name="grid_point_bt_chart">
          <Procedure id="_1lc4" name="snap_to_pin_selected">
            <comment>@teststep Check 'Snap to selected pin' selected</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkSnap_to_selected_pin"
                              id="_1m0F" resvarname="snap_to_pin_selected"/>
          </Procedure>
          <Procedure id="_1m0J" name="snap_to_pin_selected_status">
            <variable name="snap_to_pin"/>
            <comment>@teststep Check 'Snap to selected pin' selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkSnap_to_selected_pin"
                              id="_1m0K" state="$(snap_to_pin)"/>
          </Procedure>
          <Procedure id="_1lda" name="check_X_selected">
            <comment>@teststep Check 'X' checkbox selected</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkX" id="_1m0G"
                              resvarname="check_X_selected"/>
          </Procedure>
          <Procedure id="_1m0L" name="check_X_selected_status">
            <variable name="x_selected"/>
            <comment>@teststep Check 'X' checkbox selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkX" id="_1m0M"
                              state="$(x_selected)"/>
          </Procedure>
          <Procedure id="_1lf4" name="check_Y_selected">
            <comment>@teststep Check 'Y' checkbox selected</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkY" id="_1m0H"
                              resvarname="check_Y_selected"/>
          </Procedure>
          <Procedure id="_1m0N" name="check_Y_selected_status">
            <variable name="y_selected"/>
            <comment>@teststep Check 'Y' checkbox selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkY" id="_1m0O"
                              state="$(y_selected)"/>
          </Procedure>
          <Procedure id="_1lx4" name="check_XY_selected">
            <comment>@teststep Check 'XY' checkbox selected</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkXY" id="_1m0I"
                              resvarname="check_XY_selected"/>
          </Procedure>
          <Procedure id="_1m0P" name="check_XY_selected_status">
            <variable name="xy_selected"/>
            <comment>@teststep Check 'XY' checkbox selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkXY" id="_1m0Q"
                              state="$(xy_selected)"/>
          </Procedure>
        </Package>
        <Package id="_1lby" name="grid_point_flag_matrix">
          <Procedure id="_1m0U" name="snap_to_pin_selected">
            <comment>@teststep Check 'Snap to selected pin' selected</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkSnap_to_selected_pin2"
                              id="_1m0V" resvarname="snap_to_pin_selected"/>
          </Procedure>
          <Procedure id="_1m0R" name="snap_to_pin_selected_status">
            <variable name="snap_to_pin"/>
            <comment>@teststep Check 'Snap to selected pin' selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkSnap_to_selected_pin2"
                              id="_1m0T" state="$(snap_to_pin)"/>
          </Procedure>
        </Package>
        <Package id="_1lbz" name="grid_point_data_table">
          <Procedure id="_1m0W" name="snap_to_pin_selected">
            <comment>@teststep Check 'Snap to selected pin' selected</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkSnap_to_selected_pin3"
                              id="_1lHt" resvarname="snap_to_pin_selected"/>
          </Procedure>
          <Procedure id="_1m0Y" name="snap_to_pin_selected_status">
            <variable name="snap_to_pin"/>
            <comment>@teststep Check 'Snap to selected pin' selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkSnap_to_selected_pin3"
                              id="_1m0a" state="$(snap_to_pin)"/>
          </Procedure>
        </Package>
        <Package id="_1lb+" name="snapshot">
          <Procedure id="_1m0b" name="id">
            <variable name="val"/>
            <comment>@teststep Check Snapshot ID</comment>
            <CheckStringStep client="$(client)"
                             component="Dialog.SnapshotInfoToolView.Control.textID:"
                             id="_1m0c">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1m2X" name="mode">
            <variable name="mode"/>
            <comment>@teststep Check selected mode</comment>
            <CheckStringStep checktype="value" client="$(client)"
                             component="Dialog.SnapshotInfoToolView.Control.comboMode:"
                             id="_1m2Z">
              <text>$(mode)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1m0n" name="comboMode_enabled">
            <comment>@teststep Check combobox 'Mode' enabled</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.SnapshotInfoToolView.Control.comboMode:"
                              id="_1lJe" resvarname="comboMode_enabled"/>
          </Procedure>
          <Procedure id="_1m2a" name="comboMode_enabled_status">
            <variable name="comboMode"/>
            <comment>@teststep Check combobox 'Mode' enabled status</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.SnapshotInfoToolView.Control.comboMode:"
                              id="_1m2b" state="$(comboMode)"/>
          </Procedure>
          <Procedure id="_1m1L" name="synchronise_with_view_selected">
            <comment>@teststep Check 'Synchronise with view' selected</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkSynchronise_with_view"
                              id="_1m1O"
                              resvarname="synchronise_with_view_selected"/>
          </Procedure>
          <Procedure id="_1m25" name="synchronise_with_view_selected_status">
            <variable name="synchronise_with_view"/>
            <comment>@teststep Check 'Synchronise with view' selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkSynchronise_with_view"
                              id="_1m26" state="$(synchronise_with_view)"/>
          </Procedure>
          <Procedure id="_1lz2" name="browse_selected_status">
            <variable name="browse_selected"/>
            <comment>@teststep Check 'Browse' selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.radioBrowse" id="_1lIT"
                              state="$(browse_selected)"/>
          </Procedure>
          <Procedure id="_1m27" name="browse_enabled">
            <comment>@teststep Check 'Browse' enabled</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.radioBrowse" id="_1m29"
                              resvarname="browse_enabled"/>
          </Procedure>
          <Procedure id="_1m2A" name="browse_enabled_status">
            <variable name="browse_enabled"/>
            <comment>@teststep Check 'Browse' enabled status</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.radioBrowse" id="_1m2C"
                              state="$(browse_enabled)"/>
          </Procedure>
          <Procedure id="_1lza" name="snapshot_selected_status">
            <variable name="snapshot_selected"/>
            <comment>@teststep Check 'Snapshot' selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.radioSnapshot" id="_1lIV"
                              state="$(snapshot_selected)"/>
          </Procedure>
          <Procedure id="_1m2D" name="snapshot_enabled">
            <comment>@teststep Check 'Snapshot' enabled</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.radioSnapshot" id="_1m2F"
                              resvarname="snapshot_enabled"/>
          </Procedure>
          <Procedure id="_1m2G" name="snapshot_enabled_status">
            <variable name="snapshot_enabled"/>
            <comment>@teststep Check 'Snapshot' enabled status</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.radioSnapshot" id="_1m2H"
                              state="$(snapshot_enabled)"/>
          </Procedure>
          <Procedure id="_1m2L" name="follow_selected">
            <comment>@teststep Check 'Follow' selected</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkFollow" id="_1m2M"
                              resvarname="follow_selected"/>
          </Procedure>
          <Procedure id="_1l+6" name="follow_selected_status">
            <variable name="follow"/>
            <comment>@teststep Check 'Follow' selected status</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="Dialog.checkFollow" id="_1lIX"
                              state="&#34;$(follow)&#34;"/>
          </Procedure>
          <Procedure id="_1m2N" name="follow_enabled">
            <comment>@teststep Check 'Follow' enabled</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.checkFollow" id="_1m2O"
                              resvarname="follow_enabled"/>
          </Procedure>
          <Procedure id="_1m2I" name="follow_enabled_status">
            <variable name="follow_enabled"/>
            <comment>@teststep Check 'Follow' enabled status</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.checkFollow" id="_1m2K"
                              state="$(follow_enabled)"/>
          </Procedure>
          <Procedure id="_1m2P" name="locate_in_view_enabled">
            <comment>@teststep Check 'Locate in view' button enabled</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.buttonLocate_in_view"
                              id="_1m2Q" resvarname="locate_in_view_enabled"/>
          </Procedure>
          <Procedure id="_1l+e" name="locate_in_view_enabled_status">
            <variable name="locate_in_view"/>
            <comment>@teststep Check 'Locate in view' button enabled status</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="Dialog.buttonLocate_in_view"
                              id="_1lIZ" state="$(locate_in_view)"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1pZc" name="analysis">
        <Package id="_1pa6" name="histogram_dialog">
          <Package id="_1pa7" name="enabled">
            <Procedure id="_1pa8" name="use_ROI_mask">
              <comment>@teststep Check 'Use ROI Mask(s)' checkbox in the Histogram dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1pa9"
                                resvarname="use_ROI_mask_enabled"/>
            </Procedure>
          </Package>
          <Package id="_1paG" name="checked">
            <Procedure id="_1paH" name="use_ROI_mask">
              <comment>@teststep Check 'Use ROI Mask(s)' checkbox in the Histogram dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1paI"
                                resvarname="use_ROI_mask"/>
            </Procedure>
            <Procedure id="_1paJ" name="use_ROI_mask_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check Histogram dialog ROI Mask selection</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1paK"
                                state="$(selected)"/>
            </Procedure>
          </Package>
          <Package id="_1peg" name="text"/>
        </Package>
        <Package id="_1l8t" name="statistics_dialog">
          <Package id="_1pZh" name="enabled">
            <Procedure id="_1pZi" name="use_ROI_mask">
              <comment>@teststep Check 'Use ROI Mask(s)' checkbox in the Statistics dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.checkUse_ROI_mask(s):2"
                                id="_1pZj" resvarname="use_ROI_mask_enabled"/>
            </Procedure>
            <Procedure id="_1pZm" name="select_all">
              <comment>@teststep Check 'Select all' checkbox in the Statistics dialog is selected.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.checkSelect_all2"
                                id="_1pZn" resvarname="select_all_enabled"/>
            </Procedure>
            <Procedure id="_1pZq" name="select_none">
              <comment>@teststep Check 'Select none' checkbox in the Statistics dialog is selected.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.checkSelect_none2"
                                id="_1pZr" resvarname="select_none_enabled"/>
            </Procedure>
            <Procedure id="_1pZu" name="auto_accuracy">
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.useAutoAccuracy"
                                id="_1pZv"
                                resvarname="auto_accuracy_enabled"/>
            </Procedure>
          </Package>
          <Package id="_1pZg" name="checked">
            <Procedure id="_1lBv" name="use_ROI_mask">
              <comment>@teststep Check 'Use ROI Mask(s)' checkbox in the Statistics dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.checkUse_ROI_mask(s):2"
                                id="_1pYr" resvarname="use_ROI_mask"/>
            </Procedure>
            <Procedure id="_1l9X" name="use_ROI_mask_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check statistics dialog ROI Mask selection</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.checkUse_ROI_mask(s):2"
                                id="_1l9a" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1lBx" name="select_all">
              <comment>@teststep Check 'Select all' checkbox in the Statistics dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.checkSelect_all2"
                                id="_1pZB" resvarname="select_all"/>
            </Procedure>
            <Procedure id="_1lA7" name="select_all_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check statistics dialog 'Select All' selection</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.checkSelect_all2"
                                id="_1lAK" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1lCL" name="select_none">
              <comment>@teststep Check 'Select none' checkbox in the Statistics dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.checkSelect_none2"
                                id="_1pZD" resvarname="select_none"/>
            </Procedure>
            <Procedure id="_1lBz" name="select_none_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check statistics dialog 'Select None' selection</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.checkSelect_none2"
                                id="_1lB+" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1lCN" name="auto_accuracy">
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.useAutoAccuracy"
                                id="_1pZF" resvarname="auto_accuracy"/>
            </Procedure>
            <Procedure id="_1lC3" name="auto_accuracy_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check statistics dialog 'Auto Accuracy' selection</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.useAutoAccuracy"
                                id="_1lC5" state="$(selected)"/>
            </Procedure>
          </Package>
          <Procedure id="_1pZa" name="statistic_result">
            <variable name="statistic_txt"/>
            <CheckStringStep client="$(client)"
                             component="NbMainWindow.label_statistic_txt"
                             id="_1pZb">
              <text>$(statistic_txt)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1lC9" name="histogram_accuracy">
            <variable name="val"/>
            <comment>@teststep Check statistics dialog histogram accuracy</comment>
            <CheckStringStep client="$(client)"
                             component="NbMainWindow.accuracy.textHistogram_accuracy:"
                             id="_1lCC">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
        </Package>
        <Package id="_1pab" name="profile_plot"/>
        <Package id="_1pac" name="correlative_plot">
          <Package id="_1peX" name="enabled">
            <Procedure id="_1peY" name="use_ROI_mask">
              <comment>@teststep Check 'Use ROI Mask(s)' checkbox in the 'Correlative Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1peZ"
                                resvarname="use_ROI_mask_enabled"/>
            </Procedure>
            <Procedure id="_1pfY" name="tolerance_range">
              <comment>@teststep Check 'Tolerance range' TextField in the 'Correlative Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.acceptableDeviationInterval"
                                id="_1pfa"
                                resvarname="tolerance_range_enabled"/>
            </Procedure>
          </Package>
          <Package id="_1pea" name="checked">
            <Procedure id="_1peb" name="use_ROI_mask">
              <comment>@teststep Check 'Use ROI Mask(s)' checkbox in the 'Correlative Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1pec"
                                resvarname="use_ROI_mask"/>
            </Procedure>
            <Procedure id="_1ped" name="use_ROI_mask_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Correlative Plot' dialog ROI Mask selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1pee"
                                state="$(selected)"/>
            </Procedure>
            <Procedure id="_1pe-" name="auto_min_max_x">
              <comment>@teststep Check 'auto min/max' checkbox X-axis in the 'Correlative Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.autoMinMax" id="_1pf0"
                                resvarname="auto_min_max_x"/>
            </Procedure>
            <Procedure id="_1pf2" name="auto_min_max_x_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Correlative Plot' dialog  'auto min/max' X-axis selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.autoMinMax" id="_1pf3"
                                state="$(selected)"/>
            </Procedure>
            <Procedure id="_1pf7" name="x_axis_log_scaled">
              <comment>@teststep Check 'x axis Log10 scaled' checkbox in the 'Correlative Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.xAxisLogScaled"
                                id="_1pfP" resvarname="x_axis_log_scaled"/>
            </Procedure>
            <Procedure id="_1pf8" name="x_axis_log_scaled_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Correlative Plot' dialog 'x axis Log10 scaled' selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.xAxisLogScaled"
                                id="_1pfS" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1pf9" name="auto_min_max_y">
              <comment>@teststep Check 'auto min/max' checkbox Y-axis in the 'Correlative Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.autoMinMax2"
                                id="_1pfQ" resvarname="auto_min_max_y"/>
            </Procedure>
            <Procedure id="_1pfA" name="auto_min_max_y_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Correlative Plot' dialog  'auto min/max' Y-axis selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.autoMinMax2"
                                id="_1pfR" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1pfT" name="y_axis_log_scaled">
              <comment>@teststep Check 'y axis Log10 scaled' checkbox in the 'Correlative Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.yAxisLogScaled"
                                id="_1pfU" resvarname="y_axis_log_scaled"/>
            </Procedure>
            <Procedure id="_1pfV" name="y_axis_log_scaled_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Correlative Plot' dialog 'y axis Log10 scaled' selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.yAxisLogScaled"
                                id="_1pfW" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1pfB" name="show_tolerance_range">
              <comment>@teststep Check 'Show tolerance range' checkbox in the 'Correlative Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.showAcceptableDeviation"
                                id="_1pfc" resvarname="show_tolerance_range"/>
            </Procedure>
            <Procedure id="_1pfC" name="show_tolerance_range_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Correlative Plot' dialog ROI Mask selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.showAcceptableDeviation"
                                id="_1pfe" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1pfD" name="show_regression_line">
              <comment>@teststep Check 'Show regression line' checkbox in the 'Correlative Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.showRegressionLine"
                                id="_1pfd" resvarname="show_regression_line"/>
            </Procedure>
            <Procedure id="_1pfE" name="show_regression_line_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Correlative Plot' dialog 'Show regression line' selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.showRegressionLine"
                                id="_1pff" state="$(selected)"/>
            </Procedure>
          </Package>
          <Package id="_1pef" name="text">
            <Procedure id="_1pel" name="point_data_source">
              <variable name="val"/>
              <comment>@teststep Check 'Point data source' in the 'Correlative Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.pointDataSource"
                               id="_1pem">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pgG" name="data_field">
              <variable name="val"/>
              <comment>@teststep Check 'Data field' in the 'Correlative Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.dataField" id="_1pgH">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pgz" name="box_size">
              <variable name="val"/>
              <comment>@teststep Check 'Box size' in the 'Correlative Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.boxSize.textBox_size:"
                               id="_1pg-">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pep" name="x_axis_min">
              <variable name="val"/>
              <comment>@teststep Check X-Axis min in the 'Correlative Plot' dialog.</comment>
              <CheckStringStep client="$(client)" component="NbMainWindow.min"
                               id="_1per">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pet" name="x_axis_max">
              <variable name="val"/>
              <comment>@teststep Check X-Axis max in the 'Correlative Plot' dialog.</comment>
              <CheckStringStep client="$(client)" component="NbMainWindow.max"
                               id="_1pew">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pfJ" name="y_axis_min">
              <variable name="val"/>
              <comment>@teststep Check Y-Axis min in the 'Correlative Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.min2" id="_1pfK">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pfM" name="y_axis_max">
              <variable name="val"/>
              <comment>@teststep Check Y-Axis max in the 'Correlative Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.max2" id="_1pfO">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1peh" name="tolerance_range">
              <variable name="val"/>
              <comment>@teststep Check 'Tolerance range' in the 'Correlative Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.acceptableDeviationInterval"
                               id="_1pfX">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1pe0" name="scatter_plot">
          <Package id="_1ps6" name="enabled">
            <Procedure id="_1puT" name="refresh_button">
              <comment>@teststep Check 'Refresh' button in the 'Scatter Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.refreshButton"
                                id="_1puU"
                                resvarname="refresh_button_enabled"/>
            </Procedure>
            <Procedure id="_1ps7" name="use_ROI_mask">
              <comment>@teststep Check 'Use ROI Mask(s)' checkbox in the 'Scatter Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1ps8"
                                resvarname="use_ROI_mask_enabled"/>
            </Procedure>
            <Procedure id="_1ptw" name="x_min">
              <comment>@teststep Check X-Axis 'Min' textfield in the 'Scatter Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.min" id="_1piG"
                                resvarname="x_min_enabled"/>
              <IfSequence id="_1pty" test="${qftest:windows}">
                <ElseifSequence id="_1ptz" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
                <ElseSequence id="_1pt+"/>
              </IfSequence>
            </Procedure>
            <Procedure id="_1pu9" name="x_max">
              <comment>@teststep Check X-Axis 'Max' textfield in the 'Scatter Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.max" id="_1piH"
                                resvarname="x_max_enabled"/>
              <IfSequence id="_1puB" test="${qftest:windows}">
                <ElseifSequence id="_1puC" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
                <ElseSequence id="_1puD"/>
              </IfSequence>
            </Procedure>
            <Procedure id="_1puE" name="y_min">
              <comment>@teststep Check Y-Axis 'Min' textfield in the 'Scatter Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.min2" id="_1piI"
                                resvarname="y_min_enabled"/>
              <IfSequence id="_1puG" test="${qftest:windows}">
                <ElseifSequence id="_1puH" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
                <ElseSequence id="_1puI"/>
              </IfSequence>
            </Procedure>
            <Procedure id="_1puJ" name="y_max">
              <comment>@teststep Check Y-Axis 'Max' textfield in the 'Scatter Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.max2" id="_1piJ"
                                resvarname="y_mx_enabled"/>
              <IfSequence id="_1puL" test="${qftest:windows}">
                <ElseifSequence id="_1puM" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
                <ElseSequence id="_1puN"/>
              </IfSequence>
            </Procedure>
            <Procedure id="_1pu4" name="invert_plot_colors">
              <comment>@teststep Check 'Invert plot colors' checkbox in the 'Scatter Plot' dialog is enabled.</comment>
              <CheckBooleanStep checktype="enabled" client="$(client)"
                                component="NbMainWindow.checkInvert_plot_colors2"
                                id="_1puV"
                                resvarname="invert_plot_colors_enabled"/>
              <IfSequence id="_1pu6" test="${qftest:windows}">
                <ElseifSequence id="_1pu7" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
                <ElseSequence id="_1pu8"/>
              </IfSequence>
            </Procedure>
          </Package>
          <Package id="_1psB" name="checked">
            <Procedure id="_1psC" name="use_ROI_mask">
              <comment>@teststep Check 'Use ROI Mask(s)' checkbox in the 'Scatter Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1psD"
                                resvarname="use_ROI_mask"/>
            </Procedure>
            <Procedure id="_1psE" name="use_ROI_mask_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Scatter Plot' dialog ROI Mask selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.useRoiMask" id="_1psF"
                                state="$(selected)"/>
            </Procedure>
            <Procedure id="_1psG" name="auto_min_max_x">
              <comment>@teststep Check 'auto min/max' checkbox X-axis in the 'Scatter Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.autoMinMax" id="_1psH"
                                resvarname="auto_min_max_x"/>
            </Procedure>
            <Procedure id="_1psI" name="auto_min_max_x_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Scatter Plot' dialog  'auto min/max' X-axis selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.autoMinMax" id="_1psJ"
                                state="$(selected)"/>
            </Procedure>
            <Procedure id="_1psO" name="auto_min_max_y">
              <comment>@teststep Check 'auto min/max' checkbox Y-axis in the 'Scatter Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.autoMinMax2"
                                id="_1psP" resvarname="auto_min_max_y"/>
            </Procedure>
            <Procedure id="_1psQ" name="auto_min_max_y_selected_status">
              <variable name="selected"/>
              <comment>@teststep Check 'Scatter Plot' dialog  'auto min/max' Y-axis selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.autoMinMax2"
                                id="_1psR" state="$(selected)"/>
            </Procedure>
            <Procedure id="_1puW" name="invert_plot_colors">
              <comment>@teststep Check 'Invert plot colors' checkbox in the 'Scatter Plot' dialog is selected.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.checkInvert_plot_colors2"
                                id="_1puX" resvarname="invert_plot_colors"/>
              <IfSequence id="_1puY" test="${qftest:windows}">
                <ElseifSequence id="_1puZ" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
                <ElseSequence id="_1pua"/>
              </IfSequence>
            </Procedure>
            <Procedure id="_1pub" name="invert_plot_colors_selected_status">
              <comment>@teststep Check 'Scatter Plot' dialog  'Invert plot colors' selection.</comment>
              <CheckBooleanStep checktype="checked" client="$(client)"
                                component="NbMainWindow.checkInvert_plot_colors2"
                                id="_1puc" state="$(selected)"/>
              <IfSequence id="_1pud" test="${qftest:windows}">
                <ElseifSequence id="_1pue" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
                <ElseSequence id="_1puf"/>
              </IfSequence>
            </Procedure>
          </Package>
          <Package id="_1pse" name="text">
            <Procedure id="_1psl" name="x_axis_min">
              <variable name="val"/>
              <comment>@teststep Check X-Axis min in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)" component="NbMainWindow.min"
                               id="_1psm">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1psn" name="x_axis_max">
              <variable name="val"/>
              <comment>@teststep Check X-Axis max in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)" component="NbMainWindow.min"
                               id="_1pso">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1psp" name="y_axis_min">
              <variable name="val"/>
              <comment>@teststep Check Y-Axis min in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.min2" id="_1psq">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1psr" name="y_axis_max">
              <variable name="val"/>
              <comment>@teststep Check Y-Axis max in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.max2" id="_1pss">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pwn" name="selected_roi_mask">
              <variable name="val"/>
              <comment>@teststep Check selected ROI mask in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.roiMask" id="_1pwo">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pwv" name="selected_x_product">
              <variable name="val"/>
              <comment>@teststep Check selected X Product in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.xProduct" id="_1pww">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1pw-" name="selected_y_product">
              <variable name="val"/>
              <comment>@teststep Check selected Y Product in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.yProduct" id="_1px0">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1px1" name="selected_x_band">
              <variable name="val"/>
              <comment>@teststep Check selected X band in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.xBand" id="_1px2">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
            <Procedure id="_1px3" name="selected_y_band">
              <variable name="val"/>
              <comment>@teststep Check selected Y band in the 'Scatter Plot' dialog.</comment>
              <CheckStringStep client="$(client)"
                               component="NbMainWindow.yBand" id="_1px4">
                <text>$(val)</text>
              </CheckStringStep>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1pkJ" name="import_CSV_data_dialog">
        <Package id="_1pkj" name="enabled">
          <Procedure id="_1pkk" name="button_projection_parameters">
            <comment>@teststep Check 'Projection_Parameters..' button in the 'Import CSV Data' dialog is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="dialogImport_CSV_Data.buttonProjection_Parameters..."
                              id="_1pkl"
                              resvarname="button_projection_parameters_enabled"/>
          </Procedure>
        </Package>
        <Package id="_1pkm" name="checked">
          <Procedure id="_1pks" name="radio_use_target_CRS">
            <comment>@teststep Check 'Use target CRS' radiobutton in the 'Import CSV Data' dialog is selected.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogImport_CSV_Data.radioUse_target_CRS"
                              id="_1pkt" resvarname="radio_use_target_CRS"/>
          </Procedure>
          <Procedure id="_1pkx" name="radio_custom_CRS">
            <comment>@teststep Check 'Custom CRS' radiobutton in the 'Import CSV Data' dialog is selected.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogImport_CSV_Data.radioCustom_CRS"
                              id="_1pkz" resvarname="radio_custom_CRS"/>
          </Procedure>
          <Procedure id="_1pl0" name="radio_predefined_CRS">
            <comment>@teststep Check 'Use Predefined CRS' radiobutton in the 'Import CSV Data' dialog is selected.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogImport_CSV_Data.radioPredefined_CRS"
                              id="_1pl4" resvarname="radio_predefined_CRS"/>
          </Procedure>
        </Package>
        <Package id="_1pkr" name="text">
          <Procedure id="_1pl5" name="datum">
            <variable name="val"/>
            <comment>@teststep Check 'Datum' in the 'Import CSV Data' dialog.</comment>
            <CheckStringStep checktype="value" client="$(client)"
                             component="dialogImport_CSV_Data.datum"
                             id="_1pl6">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1plQ" name="projection">
            <variable name="val"/>
            <comment>@teststep Check 'Projection' in the 'Import CSV Data' dialog.</comment>
            <CheckStringStep checktype="value" client="$(client)"
                             component="dialogImport_CSV_Data.operationWrapper"
                             id="_1plS">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1pnQ" name="point_data_interpretation_dialog">
        <Package id="_1pos" name="checked">
          <Procedure id="_1poc"
                     name="radiobutton_interpret_each_point_as_track_point">
            <comment>@teststep Check 'Interpret each point as track point' radiobutton in the 'Point Data Interpretation' dialog is selected.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogPoint_Data_Interpretation.radioInterpret_each_point_as_track_point"
                              id="_1pkw"
                              resvarname="radiobutton_interpret_each_point_as_track_point"/>
          </Procedure>
          <Procedure id="_1poj"
                     name="radiobutton_iterpret_each_point_as_vertex_of_a_single_line_or_polygon">
            <comment>@teststep Check 'Iterpret each point as vertex of a single line or polygon' radiobutton in the 'Point Data Interpretation' dialog is selected.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogPoint_Data_Interpretation.radioInterpret_each_point_as_vertex_of_a_single_line_or_polygon_(This_will_remove_all_attributes_from_points)"
                              id="_1pkv"
                              resvarname="radiobutton_iterpret_each_point_as_vertex_of_a_single_line_or_polygon"/>
          </Procedure>
          <Procedure id="_1poq"
                     name="radiobutton_leave_imported_data_unchanged">
            <comment>@teststep Check 'Leave imported data unchanged' radiobutton in the 'Point Data Interpretation' dialog is selected.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogPoint_Data_Interpretation.radioLeave_imported_data_unchanged"
                              id="_1pku"
                              resvarname="radiobutton_leave_imported_data_unchanged"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_7" name="uncertainty_visualisation">
        <Package id="_1l7r" name="text">
          <Procedure id="_1l7t" name="band_name">
            <variable name="err_band"/>
            <comment>@teststep Check band in 'Uncertainty Visualisation' tool</comment>
            <SetGlobalStep id="_1l8G" varname="name_text">
              <default>Name: $(err_band)</default>
            </SetGlobalStep>
            <CheckStringStep client="$(client)"
                             component="NbMainWindow.labelName:_OGVI_err"
                             id="_1ply">
              <text>$(name_text)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1l89" name="max">
            <variable name="max"/>
            <comment>@teststep Check max value in 'Uncertainty Visualisation' tool</comment>
            <SetGlobalStep id="_1l8M" varname="max_text">
              <default>Max: $(max)</default>
            </SetGlobalStep>
            <CheckStringStep client="$(client)"
                             component="NbMainWindow.labelMax:_4.9E-324"
                             id="_1pmp">
              <text>$(max_text)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1l83" name="min">
            <variable name="min"/>
            <comment>@teststep Check min value in 'Uncertainty Visualisation' tool</comment>
            <SetGlobalStep id="_1l8L" varname="min_text">
              <default>Min: $(min)</default>
            </SetGlobalStep>
            <CheckStringStep client="$(client)"
                             component="NbMainWindow.labelMin:_0.0"
                             id="_1pmo">
              <text>$(min_text)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1l7s" name="rough_statistics">
            <comment>@teststep Check rough statistics in 'Uncertainty Visualisation' tool</comment>
            <ProcedureCall id="_1l8K"
                           procedure="set.variable.rough_statistics"/>
            <CheckStringStep client="$(client)"
                             component="NbMainWindow.labelRough_statistics!"
                             id="_1pmq">
              <text>$(rough_statistics)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1l7z" name="unit">
            <variable name="unit"/>
            <comment>@teststep Check unit in 'Uncertainty Visualisation' tool</comment>
            <SetGlobalStep id="_1l8F" varname="unit_text">
              <default>Unit: $(unit)</default>
            </SetGlobalStep>
            <CheckStringStep client="$(client)"
                             component="NbMainWindow.labelUnit:_null"
                             id="_1pmn">
              <text>$(unit_text)</text>
            </CheckStringStep>
          </Procedure>
        </Package>
        <Procedure disabled="true" id="_1l6T" name="label_More_Options">
          <variable name="txt"/>
          <variable name="txt_example">More Options ; Less Options</variable>
          <CheckStringStep client="$(client)"
                           component="NbMainWindow.labelLess_Options"
                           id="_1pmv">
            <text>Less Options</text>
          </CheckStringStep>
          <CheckStringStep client="$(client)"
                           component="NbMainWindow.labelMore_Options"
                           id="_1pmx">
            <text>More Options</text>
          </CheckStringStep>
        </Procedure>
      </Package>
      <Package id="_1k-n" name="image_view">
        <Procedure disabled="true" id="_1k-o" name="title">
          <variable name="prod_nr"/>
          <variable name="band_name"/>
          <comment>@teststep Check view title</comment>
          <CheckStringStep client="$(client)"
                           component="mainFrameESA_S-3_Toolbox.intFrame_band"
                           id="_1k-V">
            <text>[$(prod_nr)] $(band_name)</text>
          </CheckStringStep>
        </Procedure>
        <Procedure id="_1k-k" name="visible">
          <variable name="visible"/>
          <comment>@teststep Check image view is visible.</comment>
          <CheckBooleanStep checktype="visible" client="$(client)"
                            component="NbMainWindow.Tab_Displayer" id="_1mhg"
                            state="$(visible)"/>
        </Procedure>
        <Procedure id="_1oWJ" name="button_maximize_window_visible">
          <variable name="visible"/>
          <comment>@teststep Check button 'Maximize Window' is visible.</comment>
          <CheckBooleanStep checktype="visible" client="$(client)"
                            component="NbMainWindow.buttonTipMaximize_Window"
                            id="_1oWK" state="$(visible)"/>
        </Procedure>
        <Procedure id="_1oWO"
                   name="button_show_opened_documents_list_visible">
          <variable name="visible"/>
          <comment>@teststep Check button 'Show Opened Documents List' is visible.</comment>
          <CheckBooleanStep checktype="visible" client="$(client)"
                            component="NbMainWindow.buttonTipShow_Opened_Documents_List"
                            id="_1oWQ" state="$(visible)"/>
        </Procedure>
        <Procedure id="_1oWY" name="button_scroll_documents_right_visible">
          <variable name="visible"/>
          <comment>@teststep Check button 'Scroll Documents Right' is visible.</comment>
          <CheckBooleanStep checktype="visible" client="$(client)"
                            component="NbMainWindow.buttonTipScroll_Documents_Right"
                            id="_1oWa" state="$(visible)"/>
        </Procedure>
        <Procedure id="_1oWc" name="button_scroll_documents_left_visible">
          <variable name="visible"/>
          <comment>@teststep Check button 'Scroll Documents Left' is visible.</comment>
          <CheckBooleanStep checktype="visible" client="$(client)"
                            component="NbMainWindow.buttonTipScroll_Documents_Left"
                            id="_1oWf" state="$(visible)"/>
        </Procedure>
      </Package>
      <Package id="_1qct" name="help">
        <Procedure id="_1oWg" name="help_or_error_appears">
          <comment>@teststep Check Help or Error appears.</comment>
          <ProcedureCall id="_1qc-" procedure="check.help.help_appears"/>
          <ProcedureCall id="_1px7"
                         procedure="error_handling.if_error_shoot_message">
            <variable name="screenshot">Help error</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1qcu" name="help_appears">
          <comment>@teststep Check Help appears.</comment>
          <TryStep id="_1qcv">
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="frameHelp.toolbar" id="_1qcw"/>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="frameHelp.tabContents.tree"
                              id="_1qcx"/>
            <CatchSequence exception="TestException" id="_1qcy" maxerror="0">
              <ServerScriptStep id="_1qcz" name="error">
                <code>rc.logError("'Help' does not appear.")</code>
              </ServerScriptStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <IfSequence id="_1op7" test="${qftest:windows}">
      <ElseifSequence id="_1op8" name="MAC?"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
      <ElseSequence id="_1op9"/>
    </IfSequence>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
