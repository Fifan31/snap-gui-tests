<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.1.1">
  <include>qfs.qft</include>
  <include>snap_select.qft</include>
  <include>snap_components.qft</include>
  <include>snap_main.qft</include>
  <include>snap_open.qft</include>
  <include>snap_close.qft</include>
  <include>snap_check.qft</include>
  <include>snap_do_click.qft</include>
  <dependency>snap_main.qft</dependency>
  <comment>snap</comment>
  <PackageRoot id="_3">
    <comment>snap</comment>
    <Package id="_1oNH" name="menu">
      <Package id="_1oNM" name="utility">
        <Procedure id="_1oQp" name="attach_pixel_geo-coding">
          <ProcedureCall id="_1oQt" procedure="do_click.menu.tools"/>
          <ProcedureCall id="_1obB"
                         procedure="check.tools.pixel_geocoding.menu_item.attach_pixel_Geocoding_enabled"/>
          <IfSequence id="_1obC"
                      test="&#34;$(attach_pixel_Geocoding_enabled)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1oQu"
                           procedure="do_click.menu.tools.attach_pixel_geoCoding"/>
            <ElseSequence id="_1obD">
              <ServerScriptStep id="_1obE" name="error">
                <code>rc.logError("Menu item 'Attach Pixel Geo-Coding' is disabled.")</code>
              </ServerScriptStep>
            </ElseSequence>
          </IfSequence>
        </Procedure>
        <Procedure id="_1oQr" name="detach_pixel_geo-coding">
          <ProcedureCall id="_1oQk" procedure="do_click.menu.tools"/>
          <ProcedureCall id="_1obF"
                         procedure="check.tools.pixel_geocoding.menu_item.detach_pixel_Geocoding_enabled"/>
          <IfSequence id="_1obG"
                      test="&#34;$(detach_pixel_Geocoding_enabled)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1oQm"
                           procedure="do_click.menu.tools.detach_pixel_geoCoding"/>
            <ElseSequence id="_1obI">
              <ServerScriptStep id="_1obJ" name="error">
                <code>rc.logError("Menu item 'Detach Pixel Geo-Coding' is disabled.")</code>
              </ServerScriptStep>
            </ElseSequence>
          </IfSequence>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1lHP" name="test_events">
      <Package id="_1oR0" name="imaging_tools">
        <Procedure id="_1lHQ" name="open_band_check_masks_layers">
          <ProcedureCall id="_1l52" procedure="check.product.not_opened"/>
          <IfSequence id="_1l53"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1l39"
                           procedure="utility.open_image_view_check_it">
              <comment>@teststep Open image view and check it.</comment>
            </ProcedureCall>
            <ProcedureCall id="_1qes"
                           procedure="utility.check_masks_layer_world_map"/>
            <ProcedureCall id="_1qer" procedure="close.all_products"/>
          </IfSequence>
        </Procedure>
        <Procedure id="_1qfG"
                   name="open_image_window_in_target_product_check_masks_layers">
          <ProcedureCall id="_1qfH" procedure="check.product.not_opened"/>
          <IfSequence id="_1qfI"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qfJ"
                           procedure="utility.open_image_view_check_it">
              <comment>@teststep Open image view and check it.</comment>
            </ProcedureCall>
            <ProcedureCall id="_1qfK"
                           procedure="utility.check_masks_layer_world_map"/>
            <ProcedureCall id="_1qfL" procedure="close.all_products"/>
          </IfSequence>
        </Procedure>
      </Package>
      <Package id="_1p1R" name="analysis">
        <Procedure id="_1sdc"
                   name="check_dialog_options_available_else_expand_options">
          <TryStep id="_1sdo">
            <ProcedureCall id="_1sdv"
                           procedure="check.analysis.dialog.enabled.use_ROI_mask"/>
            <CatchSequence exception="TestException" id="_1sdq" maxerror="0">
              <SetGlobalStep id="_1sdr" varname="use_ROI_mask_enabled">
                <default>false</default>
              </SetGlobalStep>
            </CatchSequence>
          </TryStep>
          <IfSequence id="_1sds"
                      test="&#34;$(use_ROI_mask_enabled)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1sdx"
                           procedure="do_click.analysis.dialog.expand_options_button"/>
          </IfSequence>
          <TryStep id="_1sdu">
            <ProcedureCall id="_1sdw"
                           procedure="check.analysis.dialog.enabled.use_ROI_mask"/>
            <CatchSequence exception="TestException" id="_1sde" maxerror="0">
              <SetGlobalStep id="_1sdf" varname="use_ROI_mask_enabled">
                <default>false</default>
              </SetGlobalStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1lHV" name="open_band_compute_statistics_close_all">
          <ProcedureCall id="_1lHW"
                         procedure="utility.open_image_view_check_it"/>
          <ProcedureCall id="_1sdH" procedure="check.product.not_opened"/>
          <IfSequence id="_1sdI"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1l4g" procedure="compute.band_statistics"/>
          </IfSequence>
          <ProcedureCall id="_1p1O" procedure="close.all_products"/>
          <TryStep disabled="true" id="_1l4j"
                   name="close_band_statistics_dialog">
            <ProcedureCall id="_1l4i" procedure="close.dialog"/>
            <CatchSequence exception="TestException" id="_1l4k" maxerror="0">
              <ProcedureCall id="_1l4l" procedure="close.modal_dialogs"/>
              <ProcedureCall id="_1l4m" procedure="close.dialog"/>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1p1S" name="open_band_compute_histogram_close_all">
          <ProcedureCall id="_1p1T"
                         procedure="utility.open_image_view_check_it"/>
          <ProcedureCall id="_1sdN" procedure="check.product.not_opened"/>
          <IfSequence id="_1sdO"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1p1U" procedure="compute.band_histogram"/>
            <TryStep id="_1qZS" name="find_error_dialog_mask_is_empty">
              <ProcedureCall id="_1qZZ"
                             procedure="wait.appear.error.dialog_SNAP-Error"/>
              <ProcedureCall id="_1qZU" procedure="run-log.make_screensot">
                <variable name="iw_name">histogram_error</variable>
                <variable name="iw_name_example">error_dialog</variable>
              </ProcedureCall>
              <ProcedureCall id="_1qZX"
                             procedure="get.error_text.snap_error"/>
              <ProcedureCall id="_1qZQ"
                             procedure="do_click.error_dialog.dialog_SNAP_Error.button_OK"/>
              <IfSequence id="_1qZY"
                          test="&#34;$(snap_error)&#34;&lt;&gt;&#34;Either the selected ROI is empty or no pixels have been found within the minimum and maximum values&#34;">
                <ProcedureCall id="_1qZW" procedure="run-log.logError">
                  <variable name="message">Error: $(snap_error)</variable>
                  <variable name="withScreenshots"/>
                </ProcedureCall>
              </IfSequence>
              <CatchSequence exception="TestException" id="_1qZT"
                             maxerror="0"/>
            </TryStep>
          </IfSequence>
          <ProcedureCall id="_1qZR" procedure="close.all_products"/>
          <TryStep disabled="true" id="_1p1X" name="close_histogram_dialog">
            <ProcedureCall id="_1p1Y" procedure="close.dialog"/>
            <CatchSequence exception="TestException" id="_1p1Z" maxerror="0">
              <ProcedureCall id="_1p1a" procedure="close.modal_dialogs"/>
              <ProcedureCall id="_1p1b" procedure="close.dialog"/>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1rjx" name="open_band_test_profile_plot_close_all">
          <ProcedureCall id="_1rjy"
                         procedure="utility.open_image_view_check_it"/>
          <ProcedureCall id="_1sdK" procedure="check.product.not_opened"/>
          <IfSequence id="_1sdL"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rjz" procedure="geometry.draw.rectangle">
              <variable name="view_name">$(bandName)</variable>
              <variable name="x0">200</variable>
              <variable name="y0">200</variable>
              <variable name="x1">500</variable>
              <variable name="y1">500</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rkC"
                           procedure="open.analysis.profile_plot_dialog"/>
            <ProcedureCall id="_1rkH" procedure="resize.dialog"/>
            <ProcedureCall id="_1rkF"
                           procedure="select.analysis.profile_plot.compute_in_between_points"/>
            <ProcedureCall id="_1rkI"
                           procedure="select.analysis.profile_plot.mark_segments"/>
            <ProcedureCall id="_1rkR"
                           procedure="check.analysis.profile_plot.profile_plot_table"/>
            <IfSequence id="_1rkN"
                        test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34;">
              <ProcedureCall id="_1sdy"
                             procedure="test_events.analysis.check_dialog_options_available_else_expand_options"/>
              <IfSequence id="_1sdz"
                          test="&#34;$(use_ROI_mask_enabled)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1rkO"
                               procedure="select.analysis.profile_plot.use_ROI_mask"/>
                <ProcedureCall id="_1rkQ"
                               procedure="select.analysis.profile_plot.mask">
                  <variable name="mask">$(mask1)</variable>
                </ProcedureCall>
                <ProcedureCall id="_1rkS"
                               procedure="check.analysis.profile_plot.profile_plot_table"/>
                <ProcedureCall id="_1rkx"
                               procedure="deselect.analysis.profile_plot.use_ROI_mask"/>
                <ElseSequence id="_1sd-">
                  <ProcedureCall id="_1sdm"
                                 procedure="run-log.make_screensot">
                    <variable name="iw_name">profile_plot_1</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_1sdn" procedure="run-log.logError">
                    <variable name="message">profile plot dialog, 'Use ROI mask' checkbox is not available</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <IfSequence id="_1rkW"
                        test="&#34;$(csv_file)&#34;&lt;&gt;&#34;&#34;">
              <ProcedureCall id="_1rka"
                             procedure="import.vector_data.import_CSV_data_dialog.vector_data_csv"/>
              <IfSequence id="_1rkb"
                          test="&#34;$(import_csv_error)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1rkc"
                               procedure="select.product_tree.vector_node">
                  <variable name="prod_id">0</variable>
                  <variable name="node_id">0</variable>
                  <variable name="node_name">$(csv_file)</variable>
                </ProcedureCall>
                <ProcedureCall id="_1rkd"
                               procedure="get.tree.get_index_of_node">
                  <variable name="prod_id">0</variable>
                  <variable name="node">$(csv_file)</variable>
                  <variable name="nodeSeparator">@</variable>
                  <variable name="linear">false</variable>
                </ProcedureCall>
                <IfSequence id="_1rke"
                            test="&#34;$(new_band_id)&#34;&lt;&gt;&#34;&#34;">
                  <ProcedureCall id="_1se0"
                                 procedure="test_events.analysis.check_dialog_options_available_else_expand_options"/>
                  <IfSequence id="_1se1"
                              test="&#34;$(use_ROI_mask_enabled)&#34;==&#34;true&#34;">
                    <ProcedureCall id="_1rky"
                                   procedure="select.analysis.profile_plot.use_correlative_data"/>
                    <ProcedureCall id="_1rl0"
                                   procedure="select.analysis.profile_plot.point_data_source">
                      <variable name="data_source">$(csv_file)</variable>
                    </ProcedureCall>
                    <ProcedureCall id="_1rk+"
                                   procedure="select.analysis.profile_plot.data_field">
                      <variable name="data_field">$(bandName)</variable>
                    </ProcedureCall>
                    <ProcedureCall id="_1rl1"
                                   procedure="check.analysis.profile_plot.profile_plot_table"/>
                    <ElseSequence id="_1se6">
                      <ProcedureCall id="_1se7"
                                     procedure="run-log.make_screensot">
                        <variable name="iw_name">profile_plot_2</variable>
                      </ProcedureCall>
                      <ProcedureCall id="_1se8" procedure="run-log.logError">
                        <variable name="message">profile plot dialog, 'Use correlative data' checkbox is not available</variable>
                        <variable name="withScreenshots">true</variable>
                      </ProcedureCall>
                    </ElseSequence>
                  </IfSequence>
                  <IfSequence id="_1rkm"
                              test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34;">
                    <ProcedureCall id="_1se9"
                                   procedure="test_events.analysis.check_dialog_options_available_else_expand_options"/>
                    <IfSequence id="_1seA"
                                test="&#34;$(use_ROI_mask_enabled)&#34;==&#34;true&#34;">
                      <ProcedureCall id="_1rl2"
                                     procedure="select.analysis.profile_plot.use_ROI_mask"/>
                      <ProcedureCall id="_1rl3"
                                     procedure="select.analysis.profile_plot.mask">
                        <variable name="mask">$(mask1)</variable>
                      </ProcedureCall>
                      <ProcedureCall id="_1rl4"
                                     procedure="check.analysis.profile_plot.profile_plot_table"/>
                      <ProcedureCall id="_1rl5"
                                     procedure="deselect.analysis.profile_plot.use_ROI_mask"/>
                      <ElseSequence id="_1seF">
                        <ProcedureCall id="_1seG"
                                       procedure="run-log.make_screensot">
                          <variable name="iw_name">profile_plot_2</variable>
                        </ProcedureCall>
                        <ProcedureCall id="_1seH"
                                       procedure="run-log.logError">
                          <variable name="message">profile plot dialog, 'Use ROI mask' checkbox is not available</variable>
                          <variable name="withScreenshots">true</variable>
                        </ProcedureCall>
                      </ElseSequence>
                    </IfSequence>
                  </IfSequence>
                </IfSequence>
                <ElseSequence id="_1rkv">
                  <ProcedureCall id="_1rkw" procedure="run-log.logError">
                    <variable name="message">CSV file $(csv_file) is not imported</variable>
                    <variable name="withScreenshots">false</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
          </IfSequence>
          <ProcedureCall id="_1rkT" procedure="close.all_products"/>
        </Procedure>
        <Procedure id="_1p1s"
                   name="open_band_compute_correlative_plot_close_all">
          <ProcedureCall id="_1pyI" procedure="check.product.not_opened"/>
          <IfSequence id="_1pyJ"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1poe"
                           procedure="compute.band_correlative_plot"/>
            <ProcedureCall id="_1rRn" procedure="run-log.make_screensot">
              <variable name="iw_name">import_CSV_data</variable>
              <variable name="iw_name_example">error_dialog</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rRo"
                           procedure="qfs.swing.cleanup.closeAllModalDialogs">
              <variable name="maxDialogs">5</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rRp" procedure="close.all_products"/>
            <TryStep disabled="true" id="_1p1x"
                     name="close_correlative_plot_dialog">
              <ProcedureCall id="_1p1y" procedure="close.dialog"/>
              <CatchSequence exception="TestException" id="_1p1z"
                             maxerror="0">
                <ProcedureCall id="_1p1+" procedure="close.modal_dialogs"/>
                <ProcedureCall id="_1p1-" procedure="close.dialog"/>
              </CatchSequence>
            </TryStep>
          </IfSequence>
        </Procedure>
        <Procedure id="_1pom" name="open_band_compute_scatter_plot_close_all">
          <ProcedureCall id="_1ppJ"
                         procedure="utility.open_image_view_check_it"/>
          <ProcedureCall id="_1sdE" procedure="check.product.not_opened"/>
          <IfSequence id="_1sdF"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1r5a" procedure="compute.band_scatter_plot"/>
          </IfSequence>
          <ProcedureCall id="_1qZb" procedure="close.modal_dialogs"/>
          <ProcedureCall id="_1qZc" procedure="close.all_products"/>
          <TryStep disabled="true" id="_1pop"
                   name="close_scatter_plot_dialog">
            <ProcedureCall id="_1poq" procedure="close.dialog"/>
            <CatchSequence exception="TestException" id="_1por" maxerror="0">
              <ProcedureCall id="_1pos" procedure="close.modal_dialogs"/>
              <ProcedureCall id="_1pot" procedure="close.dialog"/>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
      <Procedure id="_1ruB" name="check_target_product">
        <comment>@teststep Check target product.</comment>
        <ProcedureCall id="_1ruD" procedure="set.target_product_with_path"/>
        <ProcedureCall id="_1ruE"
                       procedure="check_external_file.file_exists_setGlobal">
          <variable name="fileName">$(target_product)</variable>
        </ProcedureCall>
        <IfSequence id="_1ruF" test="&#34;$(fileExists)&#34;==&#34;True&#34;">
          <IfSequence id="_1ruG"
                      test="&#34;$(output_format)&#34;&lt;&gt;&#34;HDF5&#34;">
            <ProcedureCall id="_1ruH" procedure="check.product.not_opened"/>
            <IfSequence id="_1ruI"
                        test="&#34;$(not_opened)&#34;==&#34;false&#34;">
              <TestStep id="_1ruJ" name="open_image_view">
                <ProcedureCall id="_1ruL"
                               procedure="utility.open_image_view_check_it"/>
              </TestStep>
              <TestStep id="_1ruM" name="open_world_map_close_product">
                <SetGlobalStep id="_1ruN" varname="mask1"/>
                <ProcedureCall id="_1ruO"
                               procedure="utility.check_masks_layer_world_map"/>
                <ProcedureCall id="_1ruP" procedure="close.all_products"/>
              </TestStep>
              <TestStep disabled="true" id="_1ruQ"
                        name="open_image_view_check_masks_layers_close_product">
                <SetGlobalStep id="_1ruR" varname="view_Id1">
                  <default>1</default>
                </SetGlobalStep>
                <ProcedureCall id="_1ruS"
                               procedure="test_events.imaging_tools.open_band_check_masks_layers"/>
              </TestStep>
              <ElseSequence id="_1ruT">
                <ProcedureCall id="_1ruU" procedure="run-log.logError">
                  <variable name="message">$(target_product) is not opened.</variable>
                  <variable name="withScreenshots">false</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </IfSequence>
          <ElseSequence id="_1ruV">
            <ProcedureCall id="_1ruW" procedure="run-log.logError">
              <variable name="message">$(target_product) is not written.</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1rtr" name="check_target_product_with_grouping">
        <ProcedureCall id="_1ruA"
                       procedure="product_meta_data.for_open_image_view_with_grouping"/>
        <ProcedureCall id="_1ruX"
                       procedure="test_events.check_target_product"/>
      </Procedure>
      <Procedure id="_1pbm" name="check_target_product_without_grouping">
        <ProcedureCall id="_1pxv"
                       procedure="product_meta_data.for_open_image_view_without_grouping"/>
        <ProcedureCall id="_1ruY"
                       procedure="test_events.check_target_product"/>
      </Procedure>
    </Package>
    <Package id="_6" name="compute">
      <Procedure id="_1p1c" name="band_histogram">
        <comment>@teststep Compute band histogram.</comment>
        <ProcedureCall id="_1p1d" procedure="open.analysis.histogram_dialog"/>
        <ProcedureCall id="_1p1o"
                       procedure="deselect.analysis.histogram_dialog.use_ROI_mask"/>
        <ProcedureCall id="_1p1f"
                       procedure="do_click.analysis.histogram.refresh_button"/>
        <ProcedureCall id="_1p1g"
                       procedure="wait.disappear.computing_histogram_progress monitor"/>
        <IfSequence id="_1p1h" test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34;">
          <TestStep id="_1rl6" name="compute_band_histogram_for_roi">
            <comment>@teststep Compute band histogram for $(mask1)</comment>
            <ProcedureCall id="_1p1q"
                           procedure="select.analysis.histogram_dialog.use_ROI_mask"/>
            <ProcedureCall id="_1p1j"
                           procedure="select.analysis.histogram_dialog.mask">
              <variable name="mask">$(mask1)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rl7"
                           procedure="do_click.analysis.histogram.refresh_button"/>
            <TryStep disabled="true" id="_1pyK"
                     name="do_click_refresh_button">
              <ProcedureCall id="_1p1m"
                             procedure="do_click.analysis.histogram.refresh_button"/>
              <CatchSequence exception="TestException" id="_1pyL"
                             maxerror="0">
                <ProcedureCall id="_1pyM"
                               procedure="deselect.analysis.histogram_dialog.use_ROI_mask"/>
                <ProcedureCall id="_1pyP"
                               procedure="select.analysis.histogram_dialog.use_ROI_mask"/>
                <TryStep id="_1rho">
                  <ProcedureCall id="_1pyQ"
                                 procedure="do_click.analysis.histogram.refresh_button"/>
                  <CatchSequence exception="TestException" id="_1rhp"
                                 maxerror="0">
                    <ProcedureCall id="_1rhq"
                                   procedure="run-log.make_screensot">
                      <variable name="iw_name">histogram_refresh_button</variable>
                    </ProcedureCall>
                    <ProcedureCall id="_1rhr" procedure="run-log.logError">
                      <variable name="message">Refresh button is disabled</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
            <ProcedureCall id="_1p1r"
                           procedure="wait.disappear.computing_histogram_progress monitor"/>
          </TestStep>
        </IfSequence>
      </Procedure>
      <Procedure id="_7" name="band_statistics">
        <comment>@teststep Compute band statistics.</comment>
        <ProcedureCall id="_1l5R"
                       procedure="open.analysis.statistics_dialog"/>
        <ProcedureCall id="_1p1Q"
                       procedure="deselect.analysis.statistics_dialog.use_ROI_mask"/>
        <ProcedureCall id="_1l8Z"
                       procedure="do_click.analysis.statistics.refresh_button"/>
        <ProcedureCall id="_1l8e"
                       procedure="wait.disappear.computing_statistics_progress monitor"/>
        <IfSequence id="_1lEr" test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_1lCf"
                         procedure="select.analysis.statistics_dialog.use_ROI_mask"/>
          <ProcedureCall id="_1lCg"
                         procedure="select.analysis.statistics_dialog.mask">
            <variable name="mask">$(mask1)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1lCi"
                         procedure="do_click.analysis.statistics.refresh_button"/>
          <ProcedureCall id="_1lCj"
                         procedure="wait.disappear.computing_statistics_progress monitor"/>
          <ElseifSequence id="_1rtU"
                          test="&#34;$(mask1)&#34;==&#34;&#34; and &#34;$(mask2)&#34;&lt;&gt;&#34;&#34;">
            <ProcedureCall id="_1rtV"
                           procedure="select.analysis.statistics_dialog.mask">
              <variable name="mask">$(mask2)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rtW"
                           procedure="do_click.analysis.statistics.refresh_button"/>
            <ProcedureCall id="_1rtX"
                           procedure="wait.disappear.computing_statistics_progress monitor"/>
          </ElseifSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1p20" name="band_correlative_plot">
        <comment>@teststep Compute correlative plot. </comment>
        <ProcedureCall id="_1p3j"
                       procedure="import.vector_data.import_CSV_data_dialog.vector_data_csv"/>
        <IfSequence id="_1po6"
                    test="&#34;$(import_csv_error)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1poD"
                         procedure="select.product_tree.vector_node">
            <variable name="prod_id">0</variable>
            <variable name="node_id">0</variable>
            <variable name="node_name">$(csv_file)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1pn+" procedure="get.tree.get_index_of_node">
            <variable name="prod_id">0</variable>
            <variable name="node">$(csv_file)</variable>
            <variable name="nodeSeparator">@</variable>
            <variable name="linear">false</variable>
          </ProcedureCall>
          <IfSequence id="_1poG"
                      test="&#34;$(new_band_id)&#34;&lt;&gt;&#34;&#34;">
            <ProcedureCall id="_1poE"
                           procedure="open.analysis.correlative_plot_dialog"/>
            <ProcedureCall id="_1p1t"
                           procedure="utility.open_image_view_check_it"/>
            <ProcedureCall id="_1poM"
                           procedure="select.analysis.correlative_plot.point_data_source">
              <variable name="data_source">$(csv_file)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1poS"
                           procedure="select.analysis.correlative_plot.data_field">
              <variable name="data_field">$(data_field)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1p22"
                           procedure="deselect.analysis.correlative_plot.use_ROI_mask"/>
            <ProcedureCall id="_1poW"
                           procedure="do_click.analysis.correlative_plot.switch_to_table_button"/>
            <ProcedureCall id="_1poY"
                           procedure="do_click.analysis.correlative_plot.switch_to_chart_button"/>
            <IfSequence id="_1p25"
                        test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34;">
              <TryStep id="_1rRd">
                <ProcedureCall id="_1rRi"
                               procedure="select.analysis.correlative_plot.use_ROI_mask"/>
                <CatchSequence exception="TestException" id="_1rRe"
                               maxerror="0">
                  <TryStep id="_1rRg">
                    <ProcedureCall id="_1rRf"
                                   procedure="do_click.analysis.dialog.switch_to_chart_button"/>
                    <CatchSequence exception="TestException" id="_1rRh"
                                   maxerror="0"/>
                  </TryStep>
                  <ProcedureCall id="_1rRj"
                                 procedure="select.analysis.correlative_plot.use_ROI_mask"/>
                </CatchSequence>
              </TryStep>
              <ProcedureCall id="_1p27"
                             procedure="select.analysis.correlative_plot.mask">
                <variable name="mask">$(mask1)</variable>
              </ProcedureCall>
            </IfSequence>
          </IfSequence>
          <ElseSequence id="_1pyF">
            <ProcedureCall id="_1pyG" procedure="run-log.logError">
              <variable name="message">CSV file $(csv_file) is not imported</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1pou" name="band_scatter_plot">
        <comment>@teststep Compute scatter plot. </comment>
        <ProcedureCall id="_1ppA"
                       procedure="open.analysis.scatter_plot_dialog"/>
        <ProcedureCall id="_1ppB"
                       procedure="deselect.analysis.scatter_plot.use_ROI_mask"/>
        <ProcedureCall id="_1ppR"
                       procedure="select.analysis.scatter_plot.x_band">
          <variable name="x_band">$(bandName)</variable>
        </ProcedureCall>
        <TryStep id="_1rtY" name="select_scatter_plot_y_band">
          <ProcedureCall id="_1ppU"
                         procedure="select.analysis.scatter_plot.y_band">
            <variable name="y_band">$(bandName2)</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1rtZ" maxerror="0">
            <TryStep id="_1rtm">
              <ProcedureCall id="_1rtb"
                             procedure="select.analysis.scatter_plot.y_band">
                <variable name="y_band">$(bandName)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rtn"
                             maxerror="0">
                <ProcedureCall id="_1rto" procedure="run-log.make_screensot">
                  <variable name="iw_name">select_y_band</variable>
                  <variable name="iw_name_example">error_dialog</variable>
                </ProcedureCall>
                <ProcedureCall id="_1rtp" procedure="run-log.logError">
                  <variable name="message">Y- Band either $(bandName2) or $(bandName) can not be selected</variable>
                  <variable name="withScreenshots">true</variable>
                </ProcedureCall>
              </CatchSequence>
            </TryStep>
          </CatchSequence>
        </TryStep>
        <ProcedureCall id="_1ri7"
                       procedure="do_click.analysis.scatter_plot.refresh_button"/>
        <ProcedureCall id="_1r5b"
                       procedure="wait.disappear.computing_scatter_plot_progress monitor"/>
        <ProcedureCall disabled="true" id="_1ppV"
                       procedure="select.analysis.scatter_plot.invert_plot_colors"/>
        <IfSequence id="_1ppE" test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_1ppF"
                         procedure="select.analysis.scatter_plot.use_ROI_mask"/>
          <ProcedureCall id="_1ppG"
                         procedure="select.analysis.scatter_plot.mask">
            <variable name="mask">$(mask1)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1ppW"
                         procedure="do_click.analysis.scatter_plot.refresh_button"/>
          <ProcedureCall id="_1ppX"
                         procedure="wait.disappear.computing_scatter_plot_progress monitor"/>
        </IfSequence>
      </Procedure>
    </Package>
    <Package id="_1lFv" name="create"/>
    <Package id="_1l8Q" name="preparation">
      <Procedure id="_1l5e" name="application_for_test">
        <comment>@teststep Test preparation</comment>
        <ProcedureCall id="_1l5g" procedure="open.product_in_snap">
          <variable name="prod_dir">$(dataInDir)</variable>
          <variable name="prod">$(fileName)</variable>
          <variable name="in_out"/>
          <variable name="product_type"/>
          <comment> 	 
</comment>
        </ProcedureCall>
        <ProcedureCall id="_1l5h" procedure="wait.product_is_opened"/>
        <ProcedureCall id="_1oar"
                       procedure="utility.open_image_view_check_it">
          <comment>@teststep Open image view and check it.</comment>
        </ProcedureCall>
      </Procedure>
    </Package>
    <Package id="_1l2b" name="utility">
      <Procedure id="_1rtJ"
                 name="open_image_view_by_select_menu_check_image_else_shoot_error">
        <comment>@teststep Open $(bandName) by select menu Window - Open Image Window, &lt;br&gt; Check if image is opened, else shoot error.</comment>
        <TryStep id="_1rld" name="select_band">
          <ProcedureCall id="_1rle" procedure="select.product_tree.band">
            <variable name="prod_id">0</variable>
            <variable name="group_id">$(group_id1)</variable>
            <variable name="view_id">$(view_Id1)</variable>
            <variable name="band">$(bandName)</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1rlf" maxerror="0">
            <TryStep id="_1rlg">
              <ProcedureCall id="_1rlh" procedure="select.product_tree.band">
                <variable name="prod_id">0</variable>
                <variable name="group_id">0</variable>
                <variable name="view_id">0</variable>
                <variable name="band">$(bandName)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rli"
                             maxerror="0">
                <ProcedureCall id="_1rlj"
                               procedure="select.product_tree.band">
                  <variable name="prod_id">0</variable>
                  <variable name="group_id"/>
                  <variable name="view_id">0</variable>
                  <variable name="band">$(bandName)</variable>
                </ProcedureCall>
              </CatchSequence>
            </TryStep>
          </CatchSequence>
        </TryStep>
        <TryStep id="_1rlk" name="select_menu_open_image_window">
          <ProcedureCall id="_1rs+" procedure="open.open_image_window"/>
          <CatchSequence exception="TestException" id="_1rln" maxerror="0">
            <TryStep id="_1rlo">
              <ProcedureCall id="_1rlp" procedure="select.product_tree.band">
                <variable name="prod_id">0</variable>
                <variable name="group_id">0</variable>
                <variable name="view_id">0</variable>
                <variable name="band">$(bandName)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rlq"
                             maxerror="0">
                <ProcedureCall id="_1rlr"
                               procedure="select.product_tree.band">
                  <variable name="prod_id">0</variable>
                  <variable name="group_id"/>
                  <variable name="view_id">0</variable>
                  <variable name="band">$(bandName)</variable>
                </ProcedureCall>
              </CatchSequence>
            </TryStep>
            <TryStep id="_1rls" name="select_menu_open_image_window">
              <ProcedureCall id="_1rs-" procedure="open.open_image_window"/>
              <CatchSequence exception="TestException" id="_1rlv"
                             maxerror="0">
                <TryStep id="_1rlw">
                  <ProcedureCall id="_1rlx"
                                 procedure="select.product_tree.band">
                    <variable name="prod_id">0</variable>
                    <variable name="group_id"/>
                    <variable name="view_id">0</variable>
                    <variable name="band">$(bandName)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1rly"
                                 maxerror="0"/>
                </TryStep>
                <TryStep id="_1rlz" name="select_menu_opem_image_window">
                  <ProcedureCall id="_1rt0"
                                 procedure="open.open_image_window"/>
                  <CatchSequence exception="TestException" id="_1rm0"
                                 maxerror="0"/>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </CatchSequence>
        </TryStep>
        <ProcedureCall id="_1rm1"
                       procedure="utility.wait_image_created_handle_error"/>
        <IfSequence id="_1rm2"
                    test="&#34;$(image_window_appears)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1rm3" procedure="run-log.logError">
            <variable name="message">image view is not appear</variable>
            <variable name="withScreenshots">true</variable>
          </ProcedureCall>
        </IfSequence>
      </Procedure>
      <Procedure id="_1rt7"
                 name="open_image_view_by_doubleclick_check_image_else_shoot_error">
        <comment>@teststep Open $(bandName).</comment>
        <TryStep id="_1rt8" name="open_image_view_by_doubleclick"
                 predelay="200">
          <ProcedureCall id="_1rt9"
                         procedure="do_click.tree.doubleclick_product_node">
            <variable name="prod_id">0</variable>
            <variable name="group_id">$(group_id1)</variable>
            <variable name="view_id">$(view_Id1)</variable>
            <variable name="band">$(bandName)</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1rtA" maxerror="0">
            <TryStep id="_1rtB" name="open_image_view_by_doubleclick">
              <ProcedureCall id="_1rtC"
                             procedure="do_click.tree.doubleclick_product_node">
                <variable name="prod_id">0</variable>
                <variable name="group_id"/>
                <variable name="view_id">0</variable>
                <variable name="band">$(bandName)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rtD"
                             maxerror="0"/>
            </TryStep>
          </CatchSequence>
        </TryStep>
        <ProcedureCall id="_1rtE"
                       procedure="utility.wait_image_created_handle_error"/>
        <ProcedureCall id="_1rtq"
                       procedure="utility.wait_image_created_handle_error"/>
        <ProcedureCall id="_1sdD"
                       procedure="utility.wait_image_created_handle_error"/>
        <IfSequence id="_1rtF"
                    test="&#34;$(image_window_appears)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1rtG" procedure="run-log.logError">
            <variable name="message">image view is not appear</variable>
            <variable name="withScreenshots">true</variable>
          </ProcedureCall>
        </IfSequence>
      </Procedure>
      <Procedure id="_1l38" name="open_image_view_check_it">
        <ProcedureCall id="_1l3B" procedure="check.product.not_opened"/>
        <IfSequence id="_1kk7" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1l3C" procedure="wait.product_is_opened"/>
        </IfSequence>
        <ProcedureCall id="_1l3D" procedure="check.product.not_opened"/>
        <IfSequence id="_1l3v" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1l3w" predelay="3000"
                         procedure="wait.product_is_opened"/>
        </IfSequence>
        <ProcedureCall id="_1l3x" procedure="check.product.not_opened"/>
        <IfSequence id="_1l3E" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1l3F" procedure="wait.product_is_opened"/>
          <ElseSequence id="_1l3G">
            <IfSequence id="_1lFb"
                        test="&#34;$(view_Id1)&#34;&lt;&gt;&#34;&#34;">
              <ProcedureCall id="_1rtH"
                             procedure="utility.open_image_view_by_doubleclick_check_image_else_shoot_error"/>
            </IfSequence>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1qaC" name="wait_image_created_handle_error">
        <ProcedureCall id="_1qcw"
                       procedure="wait.disappear.creating_image_progress monitor">
          <variable name="bandName">$(bandName)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1rRw"
                       procedure="error_handling.if_any_error_make_screenshot_shoot_error_message"/>
        <TryStep id="_1qdN" name="check_image_view">
          <ProcedureCall id="_1rhz"
                         procedure="check.image_view.button_maximize_window_visible"/>
          <CatchSequence exception="TestException" id="_1seI" maxerror="0"/>
        </TryStep>
      </Procedure>
      <Procedure id="_1qd-" name="check_masks_layer_world_map">
        <TestStep id="_1qe0" name="check_world_map">
          <comment>@teststep Check World Map.</comment>
          <ProcedureCall id="_1r4y" procedure="open.views.worldmap"/>
        </TestStep>
        <IfSequence id="_1qe3" test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34;">
          <TestStep id="_1qe4" name="check_mask_manager">
            <comment>@teststep Check Mask Managment.</comment>
            <ProcedureCall id="_1r4z" procedure="open.views.mask_manager"/>
            <ProcedureCall id="_1rt2"
                           procedure="get.mask_manager.number_of_masks"/>
            <SetGlobalStep id="_1riB" varname="masks_number">
              <default>$(rowCount)</default>
            </SetGlobalStep>
            <IfSequence id="_1qeD" test="$(masks_number)&gt;0">
              <comment>@teststep Select and deselect all the mask after each other.</comment>
              <IfSequence id="_1qeE" test="$(masks_number)&gt;200">
                <SetGlobalStep id="_1qeF" varname="number_of_repeats">
                  <default>200</default>
                </SetGlobalStep>
                <ElseSequence id="_1qeG">
                  <SetGlobalStep id="_1qeH" varname="number_of_repeats">
                    <default>$(masks_number)</default>
                  </SetGlobalStep>
                </ElseSequence>
              </IfSequence>
              <RepeatSequence count="$(number_of_repeats)" id="_1rje"
                              name="check_masks" var="m">
                <ProcedureCall id="_1rt5" procedure="variables.mask_manager"/>
                <TryStep id="_1rji" name="select_visible">
                  <ProcedureCall id="_1rjj"
                                 procedure="do_click.table.checkbox">
                    <variable name="tableId">$(table)</variable>
                    <variable name="column">0</variable>
                    <variable name="row">$(m)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1rjk"
                                 maxerror="0">
                    <TryStep id="_1rjl">
                      <ProcedureCall id="_1rjm"
                                     procedure="do_click.table.checkbox">
                        <variable name="tableId">$(table2)</variable>
                        <variable name="column">0</variable>
                        <variable name="row">$(m)</variable>
                      </ProcedureCall>
                      <CatchSequence exception="TestException" id="_1rjn"
                                     maxerror="0">
                        <ServerScriptStep id="_1rjo" name="error">
                          <code>rc.logError("Mask $(m) cannot be selected.")</code>
                        </ServerScriptStep>
                      </CatchSequence>
                    </TryStep>
                  </CatchSequence>
                </TryStep>
                <TryStep id="_1rjp" name="deselect_visible">
                  <ProcedureCall id="_1rjq"
                                 procedure="do_click.table.checkbox">
                    <variable name="tableId">$(table)</variable>
                    <variable name="column">0</variable>
                    <variable name="row">$(m)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1rjr"
                                 maxerror="0">
                    <TryStep id="_1rjs">
                      <ProcedureCall id="_1rjt"
                                     procedure="do_click.table.checkbox">
                        <variable name="tableId">$(table2)</variable>
                        <variable name="column">0</variable>
                        <variable name="row">$(m)</variable>
                      </ProcedureCall>
                      <CatchSequence exception="TestException" id="_1rju"
                                     maxerror="0">
                        <ServerScriptStep disabled="true" id="_1rjv"
                                          name="error">
                          <code>rc.logError("Mask $(m) cannot be selected.")</code>
                        </ServerScriptStep>
                      </CatchSequence>
                    </TryStep>
                  </CatchSequence>
                </TryStep>
              </RepeatSequence>
              <ProcedureCall disabled="true" id="_1rjw"
                             procedure="run-log.make_screensot">
                <variable name="iw_name">mask/$(mask1)</variable>
              </ProcedureCall>
              <ElseSequence id="_1qeT">
                <ProcedureCall id="_1qeU" procedure="run-log.make_screensot">
                  <variable name="iw_name">mask_manager</variable>
                  <variable name="iw_name_example">error_dialog</variable>
                </ProcedureCall>
                <ServerScriptStep id="_1qeV" name="error">
                  <code>rc.logError("Mask manager is empty.")</code>
                </ServerScriptStep>
              </ElseSequence>
            </IfSequence>
          </TestStep>
          <TestStep id="_1qeY" name="check_layer_manager">
            <comment>@teststep Check Layer Managment.</comment>
            <ProcedureCall id="_1r4+" procedure="open.views.layer_manager"/>
            <TryStep id="_1qea">
              <ProcedureCall id="_1qec" procedure="get.tree.layer_node_id">
                <variable name="layer_name">Masks</variable>
                <comment>@teststep Find Masks in the layer manager</comment>
              </ProcedureCall>
              <IfSequence id="_1qef" test="$(number_of_repeats)&gt;0">
                <comment>@teststep Select and deselect all the layer after each other.</comment>
                <RepeatSequence count="$(number_of_repeats)" id="_1qeg"
                                name="check_masks" var="m">
                  <ProcedureCall id="_1qeh"
                                 procedure="do_click.layer_manager.layer_checkbox">
                    <variable name="layer_node1">$(layer_node_id)</variable>
                    <variable name="layer_node2">$(m)</variable>
                  </ProcedureCall>
                </RepeatSequence>
                <ElseSequence id="_1qem">
                  <ServerScriptStep id="_1qen" name="error">
                    <code>rc.logError("Layer manager is empty.")</code>
                  </ServerScriptStep>
                </ElseSequence>
              </IfSequence>
              <CatchSequence exception="TestException" id="_1qeo"
                             maxerror="0"/>
            </TryStep>
          </TestStep>
        </IfSequence>
      </Procedure>
    </Package>
    <Package id="_1oQf" name="pixel_geo_coding">
      <Procedure id="_1oQe" name="attach">
        <variable name="prod_id"/>
        <ProcedureCall id="_1oas" procedure="select.product_tree.product">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <TryStep id="_1oQv" name="open_dialog_attach_pixel_geo_coding">
          <ProcedureCall id="_1oQq"
                         procedure="menu.utility.attach_pixel_geo-coding"/>
          <ProcedureCall id="_1oat"
                         procedure="do_click.tools.pixel_geocoding.attach.ok_button"/>
          <CatchSequence exception="TestException" id="_1oQw" maxerror="0">
            <ProcedureCall disabled="true" id="_1oQz"
                           procedure="run-log.error_message.dialog_does_not_appear">
              <variable name="dialog">Attach pixel geo-coding</variable>
            </ProcedureCall>
          </CatchSequence>
        </TryStep>
        <TryStep id="_1ob3"
                 name="click_button_Yes_in_do_you_really_want_to_continue_dialog">
          <ProcedureCall id="_1ob5"
                         procedure="wait.appear.tools.dialogSNAP_Attach_Pixel_Geo-Coding"/>
          <ProcedureCall id="_1ob2"
                         procedure="do_click.tools.pixel_geocoding.attach.do_you_really_want_to_continue_dialog.yes_button"/>
          <CatchSequence exception="TestException" id="_1ob4" maxerror="0"/>
        </TryStep>
        <TryStep id="_1ob7"
                 name="click_button_OK_in_pixel_geocoding_has_been_attached_dialog">
          <ProcedureCall id="_1ob8"
                         procedure="wait.appear.tools.dialogSNAP_Attach_Pixel_Geo-Coding"/>
          <ProcedureCall id="_1ob6"
                         procedure="do_click.tools.pixel_geocoding.attach.do_you_really_want_to_continue_dialog.cancel_button"/>
          <CatchSequence exception="TestException" id="_1obA" maxerror="0">
            <TryStep id="_1p1I"
                     name="click_button_OK_in_pixel_geocoding_has_been_attached_dialog"
                     predelay="5000">
              <ProcedureCall id="_1p1J"
                             procedure="wait.appear.tools.dialogSNAP_Attach_Pixel_Geo-Coding"/>
              <ProcedureCall id="_1p1K"
                             procedure="do_click.tools.pixel_geocoding.attach.do_you_really_want_to_continue_dialog.cancel_button"/>
              <CatchSequence exception="TestException" id="_1p1L"
                             maxerror="0"/>
            </TryStep>
          </CatchSequence>
        </TryStep>
      </Procedure>
      <Procedure id="_1oQg" name="detach">
        <variable name="prod_id"/>
        <ProcedureCall id="_1ob1" procedure="select.product_tree.product">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <TryStep id="_1oQx" name="open_dialog_detach_pixel_geo_coding">
          <ProcedureCall id="_1oQs"
                         procedure="menu.utility.detach_pixel_geo-coding"/>
          <ProcedureCall id="_1obK"
                         procedure="do_click.tools.pixel_geocoding.detach.ok_button"/>
          <CatchSequence exception="TestException" id="_1oQy" maxerror="0">
            <ProcedureCall disabled="true" id="_1oQ+"
                           procedure="run-log.error_message.dialog_does_not_appear">
              <variable name="dialog">Detach pixel geo-coding</variable>
            </ProcedureCall>
          </CatchSequence>
        </TryStep>
      </Procedure>
    </Package>
    <Package id="_1obL" name="draw">
      <Procedure id="_1obH" name="line">
        <ProcedureCall id="_1ocJ"
                       procedure="do_click.main_toolbar.tools.draw_line"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obO" modifiers="16"
                        x="427" y="204"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obP" modifiers="16"
                        x="611" y="372"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obQ" modifiers="16"
                        x="611" y="372"/>
      </Procedure>
      <Procedure id="_1obR" name="polyline">
        <ProcedureCall id="_1ocK"
                       procedure="do_click.main_toolbar.tools.draw_polyline"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1obT" modifiers="0" x="514"
                        y="202"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obU" modifiers="16"
                        x="514" y="202"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obV" modifiers="16"
                        x="641" y="183"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obW" modifiers="16"
                        x="641" y="183"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obX" modifiers="16" x="641"
                        y="183"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obY" modifiers="16" x="677"
                        y="296"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obZ" modifiers="16" x="533"
                        y="397"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1oba" modifiers="16" x="482"
                        y="273"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obb" modifiers="16" x="558"
                        y="190"/>
        <MouseEventStep clicks="2" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obc" modifiers="16" x="558"
                        y="190"/>
      </Procedure>
      <Procedure id="_1obd" name="rectangle">
        <variable name="band"/>
        <ProcedureCall id="_1ocL"
                       procedure="do_click.main_toolbar.tools.draw_rectangle"/>
        <TryStep id="_1qZM">
          <MouseEventStep clicks="0" client="$(client)"
                          component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                          event="MOUSE_MOVED" id="_1qZL" modifiers="0" x="442"
                          y="206"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                          event="MOUSE_PRESSED" id="_1obg" modifiers="16"
                          x="442" y="206"/>
          <MouseEventStep clicks="0" client="$(client)"
                          component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                          event="MOUSE_DRAGGED" id="_1obh" modifiers="16"
                          x="632" y="293"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                          event="MOUSE_RELEASED" id="_1obi" modifiers="16"
                          x="632" y="293"/>
          <CatchSequence exception="TestException" id="_1qZN" maxerror="0">
            <TryStep id="_1qZO">
              <MouseEventStep clicks="0" client="$(client)"
                              component="NbMainWindow.image_view.panel"
                              event="MOUSE_MOVED" id="_1qZH" modifiers="0"
                              x="429" y="210"/>
              <MouseEventStep clicks="1" client="$(client)"
                              component="NbMainWindow.image_view.panel"
                              event="MOUSE_PRESSED" id="_1qZI" modifiers="16"
                              x="429" y="210"/>
              <MouseEventStep clicks="0" client="$(client)"
                              component="NbMainWindow.image_view.panel"
                              event="MOUSE_DRAGGED" id="_1qZJ" modifiers="16"
                              x="639" y="423"/>
              <MouseEventStep clicks="1" client="$(client)"
                              component="NbMainWindow.image_view.panel"
                              event="MOUSE_RELEASED" id="_1qZK" modifiers="16"
                              x="639" y="423"/>
              <CatchSequence exception="TestException" id="_1qZP"
                             maxerror="0"/>
            </TryStep>
          </CatchSequence>
        </TryStep>
      </Procedure>
      <Procedure id="_1obj" name="ellipse">
        <ProcedureCall id="_1ocM"
                       procedure="do_click.main_toolbar.tools.draw_ellipse"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1obl" modifiers="0" x="524"
                        y="201"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obm" modifiers="16"
                        x="524" y="201"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obn" modifiers="16"
                        x="695" y="384"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obo" modifiers="16"
                        x="695" y="384"/>
      </Procedure>
      <Procedure id="_1obp" name="polygon">
        <ProcedureCall id="_1ocN"
                       procedure="do_click.main_toolbar.tools.draw_polygon"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1obr" modifiers="0" x="540"
                        y="204"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obs" modifiers="16"
                        x="540" y="204"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obt" modifiers="16"
                        x="639" y="175"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obu" modifiers="16"
                        x="639" y="175"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obv" modifiers="16" x="639"
                        y="175"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obw" modifiers="16" x="711"
                        y="321"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obx" modifiers="16" x="549"
                        y="410"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1oby" modifiers="0" x="457"
                        y="449"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obz" modifiers="16"
                        x="457" y="449"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1ob+" modifiers="16"
                        x="457" y="441"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1ob-" modifiers="16"
                        x="457" y="441"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1oc0" modifiers="16" x="472"
                        y="313"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1oc1" modifiers="0" x="509"
                        y="203"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1oc2" modifiers="16"
                        x="509" y="203"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1oc3" modifiers="16"
                        x="508" y="198"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1oc4" modifiers="16"
                        x="508" y="198"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1oc5" modifiers="16" x="560"
                        y="176"/>
        <MouseEventStep clicks="2" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1oc6" modifiers="16" x="560"
                        y="176"/>
      </Procedure>
      <Procedure id="_1oc8" name="new_vector_data_container">
        <ProcedureCall id="_1ocO"
                       procedure="do_click.main_toolbar.tools.create_new_vector_data_container"/>
        <ComponentWaiter client="$(client)"
                         component="dialogNew_Vector_Data_Container"
                         id="_1ocA"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="dialogNew_Vector_Data_Container.name"
                        event="MOUSE_MOVED" id="_1ocB" modifiers="0" x="72"
                        y="7"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogNew_Vector_Data_Container.name"
                        event="MOUSE_PRESSED" id="_1ocC" modifiers="16" x="72"
                        y="7"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="dialogNew_Vector_Data_Container"
                        event="MOUSE_DRAGGED" id="_1ocD" modifiers="16"
                        x="-184" y="24"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogNew_Vector_Data_Container"
                        event="MOUSE_RELEASED" id="_1ocE" modifiers="16"
                        x="-184" y="24"/>
        <TextInputStep clear="true" client="$(client)"
                       component="dialogNew_Vector_Data_Container.name"
                       id="_1ocF">
          <text>test_geometry</text>
        </TextInputStep>
        <CheckStringStep client="$(client)"
                         component="dialogNew_Vector_Data_Container.MyModalDialog.help"
                         id="_1ocG">
          <text>Help</text>
        </CheckStringStep>
        <CheckStringStep client="$(client)"
                         component="dialogNew_Vector_Data_Container.MyModalDialog.cancel"
                         id="_1ocH">
          <text>Cancel</text>
        </CheckStringStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogNew_Vector_Data_Container.MyModalDialog.ok"
                        event="MOUSE_MPRC" id="_1ocI" modifiers="16"/>
      </Procedure>
    </Package>
    <Package id="_1pyR" name="error_handling">
      <Procedure id="_1r4e" name="check_invalid_input_else_shoot_error">
        <TryStep id="_1rS3">
          <ComponentWaiter client="$(client)" component="dialogInvalid_Input"
                           id="_1pxP" raise="false" timeout="100"/>
          <ProcedureCall id="_1sdA"
                         procedure="do_click.error_dialog.invalid_input.button_OK"/>
          <CatchSequence exception="TestException" id="_1rS4" maxerror="0">
            <ProcedureCall id="_1r4g" procedure="run-log.make_screensot">
              <variable name="iw_name">invalid_input</variable>
            </ProcedureCall>
            <ProcedureCall id="_1r4o"
                           procedure="run-log.error_message.dialog_does_not_appear">
              <variable name="dialog">Invalid Input</variable>
            </ProcedureCall>
          </CatchSequence>
        </TryStep>
      </Procedure>
      <Procedure id="_1rud" name="if_Error_shoot_error_message">
        <TryStep id="_1rue">
          <ProcedureCall id="_1ruf"
                         procedure="wait.appear.error.dialog_Error"/>
          <ProcedureCall id="_1rug" procedure="run-log.make_screensot">
            <variable name="iw_name">error_dialog_Error</variable>
            <variable name="iw_name_example">error_dialog</variable>
          </ProcedureCall>
          <TryStep id="_1ruh" name="get_error_text">
            <ProcedureCall id="_1rui"
                           procedure="get.error_text.snap_error_open_product"/>
            <CatchSequence exception="TestException" id="_1ruj" maxerror="0">
              <SetGlobalStep id="_1ruk" varname="open_product_error"/>
            </CatchSequence>
          </TryStep>
          <ProcedureCall id="_1rul"
                         procedure="do_click.error_dialog.button_OK_Error"/>
          <ProcedureCall id="_1rum"
                         procedure="run-log.error_message.error_dialog_appears">
            <variable name="dialog">Error $(open_product_error)</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1run" maxerror="0"/>
        </TryStep>
      </Procedure>
      <Procedure id="_1r4S"
                 name="if_any_error_make_screenshot_shoot_error_message">
        <ProcedureCall id="_1rRs"
                       procedure="error_handling.if_SNAP_Error_shoot_error_message"/>
        <ProcedureCall id="_1r4U"
                       procedure="error_handling.if_SNAP_SNAP_Error_shoot_error_message">
          <variable name="screenshot">SNAP_SNAP_Error</variable>
        </ProcedureCall>
        <ProcedureCall id="_1r4X"
                       procedure="error_handling.if_SNAP_SNAP_Error_shoot_error_message">
          <variable name="screenshot">SNAP_SNAP_Error</variable>
        </ProcedureCall>
        <ProcedureCall id="_1r4s"
                       procedure="error_handling.if_Error_shoot_error_message"/>
        <ProcedureCall id="_1r4Z"
                       procedure="qfs.swing.cleanup.closeAllModalDialogs">
          <variable name="maxDialogs">5</variable>
        </ProcedureCall>
      </Procedure>
      <Procedure id="_1r4x" name="if_SNAP_Error_shoot_error_message">
        <TryStep id="_1pEe">
          <ProcedureCall id="_1pEc"
                         procedure="wait.appear.error.dialog_SNAP-Error"/>
          <ProcedureCall id="_1pEh" procedure="run-log.make_screensot">
            <variable name="iw_name">error_dialog</variable>
            <variable name="iw_name_example">error_dialog</variable>
          </ProcedureCall>
          <TryStep id="_1rRx" name="get_error_text">
            <comment>snap_error</comment>
            <ProcedureCall id="_1pEd" procedure="get.error_text.snap_error"/>
            <CatchSequence exception="TestException" id="_1rRy" maxerror="0">
              <SetGlobalStep id="_1rS1" varname="snap_error"/>
            </CatchSequence>
          </TryStep>
          <ProcedureCall id="_1pEb"
                         procedure="do_click.error_dialog.dialog_SNAP_Error.button_OK"/>
          <ProcedureCall id="_1pEg" procedure="run-log.logError">
            <variable name="message">$(snap_error)</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1pEf" maxerror="0"/>
        </TryStep>
      </Procedure>
      <Procedure id="_1pyV" name="if_SNAP_SNAP_Error_shoot_error_message">
        <variable name="screenshot"/>
        <TryStep id="_1qJl" name="click_OK_in_dialog_SNAP_SNAP_Error">
          <ProcedureCall id="_1qJm"
                         procedure="wait.appear.error.dialog_SNAP_SNAP_Error"/>
          <ProcedureCall id="_1qJq" procedure="run-log.make_screensot">
            <variable name="iw_name">$(screenshot)</variable>
            <variable name="iw_name_example">error_dialog</variable>
          </ProcedureCall>
          <TryStep id="_1rRz" name="get_error_text">
            <comment>error_message</comment>
            <ProcedureCall id="_1rR+"
                           procedure="get.error_text.message_in_dialog_SNAP_SNAP_Error"/>
            <CatchSequence exception="TestException" id="_1rR-" maxerror="0">
              <SetGlobalStep id="_1rS0" varname="error_message"/>
            </CatchSequence>
          </TryStep>
          <ProcedureCall id="_1qJn"
                         procedure="do_click.error_dialog.dialog_SNAP_SNAP_Error.button_OK"/>
          <ProcedureCall id="_1qJr" procedure="run-log.logError">
            <variable name="message">SNAP_SNAP_Error $(error_message)</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1qJo" maxerror="0"/>
        </TryStep>
        <ProcedureCall id="_1qJs"
                       procedure="error_handling.cancel_dialogException"/>
      </Procedure>
      <Procedure id="_1pv5" name="cancel_dialogException">
        <TryStep id="_1pyT">
          <ComponentWaiter client="$(client)" component="dialogException"
                           errorlevel="0" id="_1pv6" raise="false"
                           timeout="10"/>
          <FetchTextStep client="$(client)" component="dialogException.editor"
                         id="_1pvC" local="true" varname="exception_text"/>
          <ProcedureCall id="_1pyS"
                         procedure="do_click.error_dialog.exception.button_cancel"/>
          <ProcedureCall id="_1qJu" procedure="run-log.logError">
            <variable name="message">$(exception_text)</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1pyU" maxerror="0"/>
        </TryStep>
      </Procedure>
    </Package>
    <Package id="_1rS9" name="subset">
      <Procedure id="_1rZX" name="check_subset_tool_appears">
        <comment>@teststep Check Subset tool window appears.</comment>
        <TryStep id="_1rZY" name="check_subset_tool_appears">
          <ProcedureCall id="_1rZZ" procedure="check.opened.subset_dialog"/>
          <SetGlobalStep id="_1rZa" varname="subset_tool_appears">
            <default>true</default>
          </SetGlobalStep>
          <CatchSequence exception="TestException" id="_1rZb" maxerror="0">
            <SetGlobalStep id="_1rZc" varname="subset_tool_appears">
              <default>false</default>
            </SetGlobalStep>
          </CatchSequence>
        </TryStep>
      </Procedure>
      <Procedure id="_1rZQ" name="define_spatial_subset_pixelpos">
        <variable name="start_x"/>
        <variable name="start_y"/>
        <variable name="end_x"/>
        <variable name="end_y"/>
        <comment>@teststep Define spatial subset according to pixel position.</comment>
        <ProcedureCall id="_1rZd"
                       procedure="subset.check_subset_tool_appears"/>
        <IfSequence id="_1rZV"
                    test="&#34;$(subset_tool_appears)&#34;==&#34;true&#34;">
          <TryStep id="_1rWl" name="define_spatial_subset">
            <ProcedureCall id="_1ra5"
                           procedure="do_click.subset_tool.tab_spatial_subset"/>
            <ProcedureCall id="_1rWr" procedure="set.subset_tool.start_X">
              <variable name="val">$(start_x)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rWs" procedure="set.subset_tool.start_Y">
              <variable name="val">$(start_y)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rWt" procedure="set.subset_tool.end_X">
              <variable name="val">$(end_x)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rWu" procedure="set.subset_tool.end_Y">
              <variable name="val">$(end_y)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1rWn" maxerror="0">
              <ProcedureCall id="_1rWo" procedure="run-log.make_screensot">
                <variable name="iw_name">import_product_window</variable>
              </ProcedureCall>
              <ProcedureCall id="_1rWp" procedure="run-log.logError">
                <variable name="message">Subset button is disabled</variable>
                <variable name="withScreenshots"/>
              </ProcedureCall>
            </CatchSequence>
          </TryStep>
          <ElseSequence id="_1rZW">
            <ProcedureCall id="_1rXf" procedure="run-log.make_screensot">
              <variable name="iw_name">subset_tool_not_appears</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rXg" procedure="run-log.logError">
              <variable name="message">pixel position subset failed</variable>
              <variable name="withScreenshots">true</variable>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1rZe" name="define_band_subset">
        <variable name="band_name"/>
        <comment>@teststep Define band subset.</comment>
        <ProcedureCall id="_1rZf"
                       procedure="subset.check_subset_tool_appears"/>
        <IfSequence id="_1rZg"
                    test="&#34;$(subset_tool_appears)&#34;==&#34;true&#34;">
          <TryStep id="_1rY1" name="define_band_subset">
            <ProcedureCall id="_1rXw"
                           procedure="do_click.subset_tool.tab_spatial_subset"/>
            <ProcedureCall id="_1ra4"
                           procedure="do_click.subset_tool.tab_band_subset"/>
            <ProcedureCall id="_1rY0"
                           procedure="select.subset_tool.select_none_band"/>
            <TryStep id="_1rhd">
              <ProcedureCall id="_1rhb"
                             procedure="do_click.subset_tool.check_box_band">
                <variable name="band_name">$(band_name)</variable>
              </ProcedureCall>
              <SetGlobalStep id="_1rhh" varname="band_subset">
                <default>$(band_name)</default>
              </SetGlobalStep>
              <CatchSequence exception="TestException" id="_1rhe"
                             maxerror="0">
                <ProcedureCall id="_1rhf"
                               procedure="get.subset_tool.the_first_band_name"/>
                <SetGlobalStep id="_1rhg" varname="band_subset">
                  <default>$(band_for_subset)</default>
                </SetGlobalStep>
                <TryStep id="_1rhi">
                  <ProcedureCall id="_1rhc"
                                 procedure="do_click.subset_tool.check_box_band">
                    <variable name="band_name">$(band_subset)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1rY6"
                                 maxerror="0">
                    <ProcedureCall id="_1rY7"
                                   procedure="run-log.make_screensot">
                      <variable name="iw_name">band_subset</variable>
                    </ProcedureCall>
                    <ProcedureCall id="_1rY8" procedure="run-log.logError">
                      <variable name="message">Band subset failed</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
            <CatchSequence exception="TestException" id="_1seJ" maxerror="0"/>
          </TryStep>
          <ElseSequence id="_1rZp">
            <ProcedureCall id="_1rZq" procedure="run-log.make_screensot">
              <variable name="iw_name">subset_tool_not_appears</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rZr" procedure="run-log.logError">
              <variable name="message">Subset tool is not appear</variable>
              <variable name="withScreenshots">true</variable>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1rZs" name="define_spatial_subset_geoposition">
        <variable name="north_lat"/>
        <variable name="west_lon"/>
        <variable name="south_lat"/>
        <variable name="east_lon"/>
        <comment>@teststep Define spatial subset according to geo position.</comment>
        <ProcedureCall id="_1rZt"
                       procedure="subset.check_subset_tool_appears"/>
        <IfSequence id="_1rZu"
                    test="&#34;$(subset_tool_appears)&#34;==&#34;true&#34;">
          <TryStep id="_1rZv" name="define_spatial_subset">
            <ProcedureCall id="_1ra6"
                           procedure="do_click.subset_tool.tab_spatial_subset"/>
            <ProcedureCall id="_1ra7"
                           procedure="do_click.subset_tool.tab_geo_coordinates"/>
            <ProcedureCall id="_1ra8" procedure="set.subset_tool.north_lat">
              <variable name="val">$(north_lat)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1ra9" procedure="set.subset_tool.west_lon">
              <variable name="val">$(west_lon)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1raA" procedure="set.subset_tool.south_lat">
              <variable name="val">$(south_lat)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1raB" procedure="set.subset_tool.east_lon">
              <variable name="val">$(east_lon)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1rZ+" maxerror="0">
              <ProcedureCall id="_1rZ-" procedure="run-log.make_screensot">
                <variable name="iw_name">import_geo_subset</variable>
              </ProcedureCall>
              <ProcedureCall id="_1ra0" procedure="run-log.logError">
                <variable name="message">geo-coding subset failed</variable>
                <variable name="withScreenshots">true</variable>
              </ProcedureCall>
            </CatchSequence>
          </TryStep>
          <ElseSequence id="_1ra1">
            <ProcedureCall id="_1ra2" procedure="run-log.make_screensot">
              <variable name="iw_name">subset_tool_not_appears</variable>
            </ProcedureCall>
            <ProcedureCall id="_1ra3" procedure="run-log.logError">
              <variable name="message">Subset tool is not appear</variable>
              <variable name="withScreenshots"/>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1rSA" name="handle_incomplete_subset_definition_dialog">
        <TryStep id="_1rht">
          <ComponentWaiter client="$(client)"
                           component="dialogIncomplete_Subset_Definition.buttonYes"
                           errorlevel="0" id="_1sdP" timeout="100"/>
          <ProcedureCall id="_1rha"
                         procedure="do_click.subset_tool.incomplete_subset_definition.button_YES_incomplete_subset_definition"/>
          <CatchSequence exception="TestException" id="_1rhu" maxerror="0"/>
        </TryStep>
        <TryStep id="_1sdR">
          <ComponentWaiter client="$(client)"
                           component="dialogNo_Flag_Dataset_Selected.buttonYes"
                           errorlevel="0" id="_1sdS" timeout="10"/>
          <ProcedureCall id="_1sdT"
                         procedure="do_click.subset_tool.incomplete_subset_definition.button_YES_no_flag_dataset_selected"/>
          <CatchSequence exception="TestException" id="_1sdU" maxerror="0"/>
        </TryStep>
      </Procedure>
      <Procedure id="_1riT" name="handle_multi_size_warning">
        <TryStep id="_1riW">
          <SetGlobalStep id="_1riY" local="true" varname="error_label"/>
          <ProcedureCall id="_1riV"
                         procedure="wait.appear.error.dialog_SNAP-Error"/>
          <FetchTextStep client="$(client)"
                         component="dialogSNAP_-_Error.label_multi-size_subset"
                         id="_1rjW" varname="error_label_multi-size"/>
          <IfSequence id="_1rjX"
                      test="&#34;$(error_label_multi-size)&#34;==&#34;No subset can be created of a multi-size products.&#34;">
            <ProcedureCall id="_1rjc" procedure="variables.multi_size">
              <variable name="multi_size">true</variable>
            </ProcedureCall>
            <ProcedureCall id="_1riU"
                           procedure="do_click.error_dialog.dialog_SNAP_Error.button_OK"/>
            <ElseSequence id="_1rjZ">
              <ProcedureCall id="_1riv" procedure="variables.multi_size">
                <variable name="multi_size">false</variable>
              </ProcedureCall>
              <ProcedureCall id="_1rjb" procedure="run-log.make_screensot">
                <variable name="iw_name">error_dialog</variable>
              </ProcedureCall>
              <ProcedureCall id="_1rja"
                             procedure="do_click.error_dialog.dialog_SNAP_Error.button_OK"/>
              <ProcedureCall id="_1rjY"
                             procedure="run-log.error_message.error_dialog_appears">
                <variable name="dialog">Error</variable>
              </ProcedureCall>
            </ElseSequence>
          </IfSequence>
          <CatchSequence exception="TestException" id="_1riX" maxerror="0"/>
        </TryStep>
      </Procedure>
    </Package>
    <Package id="_1rhj" name="help">
      <Procedure id="_1rhk" name="check_help_appears_close">
        <TryStep id="_1qcv" name="check_help_appears">
          <CheckBooleanStep checktype="enabled" client="$(client)"
                            component="frameHelp.toolbar" id="_1rhl"/>
          <CheckBooleanStep checktype="enabled" client="$(client)"
                            component="frameHelp.tabContents.tree"
                            id="_1qcx"/>
          <CatchSequence exception="TestException" id="_1qcy" maxerror="0">
            <ServerScriptStep id="_1qcz" name="error">
              <code>rc.logError("'Help' does not appear.")</code>
            </ServerScriptStep>
          </CatchSequence>
        </TryStep>
        <TryStep id="_1rhm" name="close_help">
          <WindowEventStep client="$(client)" component="frameHelp"
                           event="WINDOW_CLOSING" id="_1oaK"/>
          <CatchSequence exception="TestException" id="_1rhn" maxerror="0"/>
        </TryStep>
      </Procedure>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4"/>
  <WindowList id="_5"/>
</RootStep>
