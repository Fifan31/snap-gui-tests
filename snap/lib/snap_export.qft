<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.11">
  <include>qfs.qft</include>
  <include>snap_components.qft</include>
  <include>snap_main.qft</include>
  <dependency>snap_main.qft</dependency>
  <dependency>snap_workflow.qft</dependency>
  <dependency>../05_export/005_01_colour_legend_as_image.qft</dependency>
  <dependency>../05_export/005_02_colour_palette.qft</dependency>
  <dependency>../05_export/005_03_geocoding_envi_gcp_file.qft</dependency>
  <dependency>../05_export/005_04_geometry_as_shape_file.qft</dependency>
  <dependency>../05_export/subset/005_05_envisat.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1qdt" name="check_exported_file"/>
    <Package id="_2Jbq" name="open_export_dialog">
      <Procedure id="_2Jbv" name="dimap">
        <variable name="prod_id"/>
        <ProcedureCall id="_2Jbx"
                       procedure="utility.select_product_select_menu_file_export">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <ProcedureCall id="_2Jby"
                       procedure="do_click.menu.file.export.beam_dimap"/>
        <TestStep disabled="true" id="_1rtB" name="open_export_dimap_dialog">
          <ProcedureCall id="_1s97" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1s98" procedure="do_click.menu.file.export"/>
          <ProcedureCall id="_1rtD"
                         procedure="do_click.menu.file.export.beam_dimap"/>
        </TestStep>
      </Procedure>
      <Procedure id="_2Jbz" name="geotiff">
        <variable name="prod_id"/>
        <ProcedureCall id="_2Jdv"
                       procedure="utility.select_product_select_menu_file_export">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <ProcedureCall id="_2JcL"
                       procedure="do_click.menu.file.export.geotiff"/>
      </Procedure>
      <Procedure id="_2Jc1" name="netcdf_cf">
        <variable name="prod_id"/>
        <ProcedureCall id="_2Jdw"
                       procedure="utility.select_product_select_menu_file_export">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <ProcedureCall id="_2JcQ"
                       procedure="do_click.menu.file.export.netcdf_cf"/>
      </Procedure>
      <Procedure id="_2Jc5" name="netcdf4_cf">
        <variable name="prod_id"/>
        <ProcedureCall id="_2Jdx"
                       procedure="utility.select_product_select_menu_file_export">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <ProcedureCall id="_2JcV"
                       procedure="do_click.menu.file.export.netcdf4_cf"/>
      </Procedure>
      <Procedure id="_2Jc9" name="netcdf_beam">
        <variable name="prod_id"/>
        <ProcedureCall id="_2Jdy"
                       procedure="utility.select_product_select_menu_file_export">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <ProcedureCall id="_2Jca"
                       procedure="do_click.menu.file.export.netcdf_beam"/>
      </Procedure>
      <Procedure id="_2JcD" name="netcdf4_beam">
        <variable name="prod_id"/>
        <ProcedureCall id="_2Jdz"
                       procedure="utility.select_product_select_menu_file_export">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <ProcedureCall id="_2Jcf"
                       procedure="do_click.menu.file.export.netcdf4_beam"/>
      </Procedure>
    </Package>
    <Package id="_1lB5" name="export">
      <Procedure id="_1qb2" name="colour_legend_as_image">
        <variable name="file_name"/>
        <ProcedureCall id="_1l3w" procedure="path.main_path"/>
        <SetGlobalStep id="_1pxw" local="true" varname="export_directory">
          <default>${path:output_data_directory}export${path:slash}</default>
        </SetGlobalStep>
        <ProcedureCall id="_1qba"
                       procedure="utility.export_colour_legend_image_dialog">
          <variable name="file">$(export_directory)$(file_name)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1qbb"
                       procedure="check_external_file.file_exists_setGlobal">
          <variable name="fileName">$(export_directory)$(file_name)</variable>
        </ProcedureCall>
        <IfSequence id="_1qbm"
                    test="&#34;$(fileExists)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1qbn" procedure="run-log.logError">
            <variable name="message">$(file_name) is not exported</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
        </IfSequence>
      </Procedure>
      <Procedure id="_1qbo" name="colour_palette_as_file_and_check">
        <variable name="file_name"/>
        <ProcedureCall id="_1qbp" procedure="path.main_path"/>
        <SetGlobalStep id="_1qbq" local="true" varname="export_directory">
          <default>${path:output_data_directory}export${path:slash}</default>
        </SetGlobalStep>
        <ProcedureCall id="_1qbr"
                       procedure="utility.export_colour_palette_dialog">
          <variable name="file">$(export_directory)$(file_name)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1qbs"
                       procedure="check_external_file.file_exists_setGlobal">
          <variable name="fileName">$(export_directory)$(file_name)</variable>
        </ProcedureCall>
        <IfSequence id="_1qbt"
                    test="&#34;$(fileExists)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1qbu" procedure="run-log.logError">
            <variable name="message">$(file_name) is not exported</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
          <ElseSequence id="_1qb-">
            <ProcedureCall id="_1qb+"
                           procedure="check_external_file.check_text_in_external_file">
              <variable name="file">$(export_directory)$(file_name)</variable>
              <variable name="text">Sample</variable>
              <comment>
</comment>
            </ProcedureCall>
            <ProcedureCall id="_1qc0"
                           procedure="check_external_file.check_text_in_external_file">
              <variable name="file">$(export_directory)$(file_name)</variable>
              <variable name="text">Number of colors</variable>
              <comment>
</comment>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1qc7" name="geocoding_envi_gcp_file_and_check">
        <variable name="file_name"/>
        <ProcedureCall id="_1qc8" procedure="path.main_path"/>
        <SetGlobalStep id="_1qc9" local="true" varname="export_directory">
          <default>${path:output_data_directory}export${path:slash}</default>
        </SetGlobalStep>
        <ProcedureCall id="_1qcA" postdelay="1000"
                       procedure="utility.export_geocoding_envi_gcp_file_dialog">
          <variable name="file">$(export_directory)$(file_name)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1qcB"
                       procedure="check_external_file.file_exists_setGlobal">
          <variable name="fileName">$(export_directory)$(file_name)</variable>
        </ProcedureCall>
        <IfSequence id="_1qcC"
                    test="&#34;$(fileExists)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1qcD" procedure="run-log.logError">
            <variable name="message">$(file_name) is not exported</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
          <ElseSequence id="_1qcE">
            <ProcedureCall id="_1qcF" predelay="1000"
                           procedure="check_external_file.check_text_in_external_file">
              <variable name="file">$(export_directory)$(file_name)</variable>
              <variable name="text">ENVI</variable>
            </ProcedureCall>
            <ProcedureCall id="_1qcG"
                           procedure="check_external_file.check_text_in_external_file">
              <variable name="file">$(export_directory)$(file_name)</variable>
              <variable name="text">GCP</variable>
              <comment>
</comment>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1qbD" name="view_as_image"/>
      <Procedure id="_1qc1" name="view_as_google_earth_KMZ"/>
      <Procedure id="_1qcK" name="transect_pixels"/>
      <Procedure id="_1qcP" name="mask_pixels"/>
      <Procedure id="_1qcb" name="geometry_as_shape_file">
        <ProcedureCall id="_1qcj" procedure="path.main_path"/>
        <SetGlobalStep id="_1qeK" local="true" varname="output_file">
          <default>${path:output_data_directory}export${path:slash}$(exp_file)</default>
        </SetGlobalStep>
        <ProcedureCall id="_1qeJ"
                       procedure="utility.geometry_as_shape_file_dialog">
          <variable name="file">$(output_file)</variable>
        </ProcedureCall>
        <TestStep id="_1qeM" name="check_exported_files">
          <SetGlobalStep id="_1qeO" varname="file_name">
            <default>$(output_file)_Polygon.dbf</default>
          </SetGlobalStep>
          <ProcedureCall id="_1qeP"
                         procedure="check_external_file.file_exists_setGlobal">
            <variable name="fileName">$(file_name)</variable>
          </ProcedureCall>
          <IfSequence id="_1qdj"
                      test="&#34;$(fileExists)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qdk" procedure="run-log.logError">
              <variable name="message">$(file_name) is not exported</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </IfSequence>
          <SetGlobalStep id="_1qdR" varname="file_name">
            <default>$(output_file)_Polygon.fix</default>
          </SetGlobalStep>
          <ProcedureCall id="_1qeQ"
                         procedure="check_external_file.file_exists_setGlobal">
            <variable name="fileName">$(file_name)</variable>
          </ProcedureCall>
          <IfSequence id="_1qdl"
                      test="&#34;$(fileExists)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qdm" procedure="run-log.logError">
              <variable name="message">$(file_name) is not exported</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </IfSequence>
          <SetGlobalStep id="_1qdZ" varname="file_name">
            <default>$(output_file)_Polygon.prj</default>
          </SetGlobalStep>
          <ProcedureCall id="_1qeR"
                         procedure="check_external_file.file_exists_setGlobal">
            <variable name="fileName">$(file_name)</variable>
          </ProcedureCall>
          <IfSequence id="_1qdn"
                      test="&#34;$(fileExists)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qdo" procedure="run-log.logError">
              <variable name="message">$(file_name) is not exported</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </IfSequence>
          <SetGlobalStep id="_1qdb" varname="file_name">
            <default>$(output_file)_Polygon.qix</default>
          </SetGlobalStep>
          <ProcedureCall id="_1qeS"
                         procedure="check_external_file.file_exists_setGlobal">
            <variable name="fileName">$(file_name)</variable>
          </ProcedureCall>
          <IfSequence id="_1qdp"
                      test="&#34;$(fileExists)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qdq" procedure="run-log.logError">
              <variable name="message">$(file_name) is not exported</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </IfSequence>
          <SetGlobalStep id="_1qdd" varname="file_name">
            <default>$(output_file)_Polygon.shp</default>
          </SetGlobalStep>
          <ProcedureCall id="_1qeT"
                         procedure="check_external_file.file_exists_setGlobal">
            <variable name="fileName">$(file_name)</variable>
          </ProcedureCall>
          <IfSequence id="_1qdr"
                      test="&#34;$(fileExists)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qds" procedure="run-log.logError">
              <variable name="message">$(file_name) is not exported</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </IfSequence>
          <SetGlobalStep id="_1qdf" varname="file_name">
            <default>$(output_file)_Polygon.shx</default>
          </SetGlobalStep>
          <ProcedureCall id="_1qeU"
                         procedure="check_external_file.file_exists_setGlobal">
            <variable name="fileName">$(file_name)</variable>
          </ProcedureCall>
          <IfSequence id="_1qcn"
                      test="&#34;$(fileExists)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1qco" procedure="run-log.logError">
              <variable name="message">$(file_name) is not exported</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </IfSequence>
        </TestStep>
      </Procedure>
      <Package id="_1r3G" name="subset">
        <Procedure id="_1rsk" name="test_sequence_multiresolution">
          <variable name="prod_reader_type"/>
          <SetGlobalStep id="_1rsl" varname="target_dir">
            <default>export</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1rt7" varname="target_file">
            <default>test</default>
          </SetGlobalStep>
          <ProcedureCall id="_1rsm" procedure="cleanup.output_data_folder">
            <variable name="directory">$(target_dir)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1rsn" postdelay="2000"
                         procedure="open.product_in_snap">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="in_out">in</variable>
            <variable name="prod">$(fileName)</variable>
            <variable name="product_type">$(prod_reader_type)</variable>
          </ProcedureCall>
          <ProcedureCall id="_2JGl" procedure="check.product.not_opened"/>
          <IfSequence id="_2JGm"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <SetGlobalStep id="_2JHB" varname="target_file">
              <default>test</default>
            </SetGlobalStep>
            <SetGlobalStep id="_2JHC" varname="resampled_file">
              <default>resample</default>
            </SetGlobalStep>
            <ProcedureCall id="_2JGn" procedure="utility.resample"/>
            <ProcedureCall id="_2Jd+"
                           procedure="check.product.opened_else_shoot_error">
              <variable name="product_name">$(resampled_file)</variable>
            </ProcedureCall>
            <SetGlobalStep id="_2Jd-" varname="resampled_id">
              <default>$(product_id)</default>
            </SetGlobalStep>
            <ServerScriptStep disabled="true" id="_1l5A" name="print">
              <code>print "!!!!  resampled_id = $(resampled_id)"</code>
            </ServerScriptStep>
            <IfSequence id="_2JH7"
                        test="&#34;$(resampled_id)&#34;&lt;&gt;&#34;&#34;">
              <TestStep id="_2JHE" name="open_image_window">
                <ServerScriptStep disabled="true" id="_2Jdu" name="print">
                  <code>print "!!!!  pid 0 = $(pid)"</code>
                </ServerScriptStep>
                <TryStep id="_2JHF" name="doubleclick_product_node">
                  <ProcedureCall id="_2JHG"
                                 procedure="do_click.tree.doubleclick_product_node">
                    <variable name="prod_id">$(pid)</variable>
                    <variable name="group_id">0</variable>
                    <variable name="view_id">0</variable>
                    <variable name="band">$(bandName)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_2JHH"
                                 maxerror="0">
                    <TryStep id="_2JHI" name="doubleclick_product_node">
                      <ProcedureCall id="_2JHJ"
                                     procedure="do_click.tree.doubleclick_product_node">
                        <variable name="prod_id">$(pid)</variable>
                        <variable name="group_id"/>
                        <variable name="view_id">0</variable>
                        <variable name="band">$(bandName)</variable>
                      </ProcedureCall>
                      <CatchSequence exception="TestException" id="_2JHK"
                                     maxerror="0">
                        <ProcedureCall id="_2JHL"
                                       procedure="wait.disappear.reading_product_progress_monitor"/>
                        <TryStep id="_2JHM" name="doubleclick_product_node">
                          <ProcedureCall id="_2JHN"
                                         procedure="do_click.tree.doubleclick_product_node">
                            <variable name="prod_id">$(pid)</variable>
                            <variable name="group_id">0</variable>
                            <variable name="view_id">0</variable>
                            <variable name="band">$(bandName)</variable>
                          </ProcedureCall>
                          <CatchSequence exception="TestException" id="_2JHO"
                                         maxerror="0">
                            <TryStep id="_2JHP"
                                     name="doubleclick_product_node">
                              <ProcedureCall id="_2JHQ"
                                             procedure="do_click.tree.doubleclick_product_node">
                                <variable name="prod_id">$(pid)</variable>
                                <variable name="group_id"/>
                                <variable name="view_id">0</variable>
                                <variable name="band">$(bandName)</variable>
                              </ProcedureCall>
                              <CatchSequence exception="TestException"
                                             id="_2JHR" maxerror="0"/>
                            </TryStep>
                          </CatchSequence>
                        </TryStep>
                      </CatchSequence>
                    </TryStep>
                  </CatchSequence>
                </TryStep>
                <ProcedureCall id="_2JHS"
                               procedure="utility.wait_image_created_handle_error"/>
                <IfSequence id="_2JHT"
                            test="&#34;$(image_window_appears)&#34;==&#34;false&#34;">
                  <ProcedureCall id="_2JHU" procedure="run-log.logError">
                    <variable name="message">image view is not appear</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </IfSequence>
              </TestStep>
              <ProcedureCall id="_2JHZ"
                             procedure="placemark.utility_sequences.get_geo_coordinates_for_subset"/>
              <TestStep id="_1rt8" name="export_beam_dimap_subset_and_check">
                <ServerScriptStep disabled="true" id="_2Jdr" name="print">
                  <code>print "!!!!  pid 1 = $(pid)"</code>
                </ServerScriptStep>
                <ProcedureCall disabled="true" id="_2Jdt"
                               procedure="select.product_tree.product">
                  <variable name="prod_id">$(pid)</variable>
                </ProcedureCall>
                <SetGlobalStep id="_1rtA" varname="extension">
                  <default>dim</default>
                </SetGlobalStep>
                <ProcedureCall id="_2JcH"
                               procedure="open_export_dialog.dimap">
                  <variable name="prod_id">$(pid)</variable>
                </ProcedureCall>
                <ProcedureCall id="_2JZ6"
                               procedure="utility.export_subset_check_subset_multires"/>
              </TestStep>
              <TestStep id="_2JYl" name="export_geotiff_subset_and_check">
                <ProcedureCall id="_2JZI"
                               procedure="utility.check_resampled_product_is_opened"/>
                <IfSequence id="_2JWm"
                            test="&#34;$(resampled_id)&#34;&lt;&gt;&#34;&#34;">
                  <SetGlobalStep id="_2JZ9" varname="extension">
                    <default>tif</default>
                  </SetGlobalStep>
                  <ProcedureCall id="_2JcM"
                                 procedure="open_export_dialog.geotiff">
                    <variable name="prod_id">$(pid)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_2JZE"
                                 procedure="utility.export_subset_check_subset_multires"/>
                </IfSequence>
              </TestStep>
              <TestStep id="_2JYm"
                        name="export_beam_netcdf_cf_subset_and_check">
                <ProcedureCall id="_2JZJ"
                               procedure="utility.check_resampled_product_is_opened"/>
                <IfSequence id="_2JXx"
                            test="&#34;$(resampled_id)&#34;&lt;&gt;&#34;&#34;">
                  <SetGlobalStep id="_2JYd" varname="target_file">
                    <default>test_netcdf_cf</default>
                  </SetGlobalStep>
                  <SetGlobalStep id="_2JYe" varname="extension">
                    <default>nc</default>
                  </SetGlobalStep>
                  <ProcedureCall id="_2JcR"
                                 procedure="open_export_dialog.netcdf_cf">
                    <variable name="prod_id">$(pid)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_2JZK"
                                 procedure="utility.export_subset_check_subset_multires"/>
                </IfSequence>
              </TestStep>
              <TestStep id="_2JZM"
                        name="export_beam_netcdf4_cf_subset_and_check">
                <ProcedureCall id="_2JZX"
                               procedure="utility.check_resampled_product_is_opened"/>
                <IfSequence id="_2JZa"
                            test="&#34;$(resampled_id)&#34;&lt;&gt;&#34;&#34;">
                  <SetGlobalStep id="_2JZO" varname="target_file">
                    <default>test_netcdf4_cf</default>
                  </SetGlobalStep>
                  <SetGlobalStep id="_2JZP" varname="extension">
                    <default>nc</default>
                  </SetGlobalStep>
                  <ProcedureCall id="_2JcW"
                                 procedure="open_export_dialog.netcdf4_cf">
                    <variable name="prod_id">$(pid)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_2JZi"
                                 procedure="utility.export_subset_check_subset_multires"/>
                </IfSequence>
              </TestStep>
              <TestStep id="_2JaH"
                        name="export_beam_netcdf_beam_subset_and_check">
                <ProcedureCall id="_2Jab"
                               procedure="utility.check_resampled_product_is_opened"/>
                <IfSequence id="_2Jae"
                            test="&#34;$(resampled_id)&#34;&lt;&gt;&#34;&#34;">
                  <SetGlobalStep id="_2JaJ" varname="target_file">
                    <default>test_netcdf_beam</default>
                  </SetGlobalStep>
                  <SetGlobalStep id="_2JaK" varname="extension">
                    <default>nc</default>
                  </SetGlobalStep>
                  <ProcedureCall id="_2Jcb"
                                 procedure="open_export_dialog.netcdf_beam">
                    <variable name="prod_id">$(pid)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_2Jal"
                                 procedure="utility.export_subset_check_subset_multires"/>
                </IfSequence>
              </TestStep>
              <TestStep id="_2JaR"
                        name="export_beam_netcdf4_beam_subset_and_check">
                <ProcedureCall id="_2Jb0"
                               procedure="utility.check_resampled_product_is_opened"/>
                <IfSequence id="_2Jb1"
                            test="&#34;$(resampled_id)&#34;&lt;&gt;&#34;&#34;">
                  <ProcedureCall disabled="true" id="_2Jb2"
                                 procedure="select.product_tree.product">
                    <variable name="prod_id">$(pid)</variable>
                  </ProcedureCall>
                  <SetGlobalStep id="_2JaT" varname="target_file">
                    <default>test_netcdf4_beam</default>
                  </SetGlobalStep>
                  <SetGlobalStep id="_2JaU" varname="extension">
                    <default>nc</default>
                  </SetGlobalStep>
                  <ProcedureCall id="_2Jcg"
                                 procedure="open_export_dialog.netcdf4_beam">
                    <variable name="prod_id">$(pid)</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_2Jb9"
                                 procedure="utility.export_subset_check_subset_multires"/>
                </IfSequence>
              </TestStep>
            </IfSequence>
            <ProcedureCall id="_1rty" procedure="close.all_products"/>
          </IfSequence>
        </Procedure>
        <Procedure id="_1r3F" name="test_sequence">
          <variable name="prod_reader_type"/>
          <SetGlobalStep id="_1roS" varname="target_dir">
            <default>export</default>
          </SetGlobalStep>
          <ProcedureCall id="_1rpz" procedure="cleanup.output_data_folder">
            <variable name="directory">$(target_dir)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1lXI" postdelay="2000"
                         procedure="open.product_in_snap">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="in_out">in</variable>
            <variable name="prod">$(fileName)</variable>
            <variable name="product_type">$(prod_reader_type)</variable>
          </ProcedureCall>
          <ProcedureCall id="_2JdG"
                         procedure="utility.open_image_view_check_it"/>
          <ProcedureCall id="_2Je0" procedure="check.product.not_opened"/>
          <IfSequence id="_2Je1"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2JdH"
                           procedure="placemark.utility_sequences.get_geo_coordinates_for_subset"/>
            <SetGlobalStep id="_2JdI" varname="target_file">
              <default>test</default>
            </SetGlobalStep>
            <TestStep id="_2JdJ" name="export_beam_dimap_subset_and_check">
              <ProcedureCall id="_2JdK"
                             procedure="select.product_tree.product">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <SetGlobalStep id="_2JdL" varname="extension">
                <default>dim</default>
              </SetGlobalStep>
              <ProcedureCall id="_2JdM" procedure="open_export_dialog.dimap">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <ProcedureCall id="_2JdN"
                             procedure="utility.export_subset_check_subset"/>
            </TestStep>
            <TestStep id="_2JdO" name="export_geotiff_subset_and_check">
              <ProcedureCall id="_2JdP"
                             procedure="select.product_tree.product">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <SetGlobalStep id="_2JdQ" varname="extension">
                <default>tif</default>
              </SetGlobalStep>
              <ProcedureCall id="_2JdR"
                             procedure="open_export_dialog.geotiff">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <ProcedureCall id="_2JdS"
                             procedure="utility.export_subset_check_subset"/>
            </TestStep>
            <TestStep id="_2JdT"
                      name="export_beam_netcdf_cf_subset_and_check">
              <ProcedureCall id="_2JdU"
                             procedure="select.product_tree.product">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <SetGlobalStep id="_2JdV" varname="target_file">
                <default>test_netcdf_cf</default>
              </SetGlobalStep>
              <SetGlobalStep id="_2JdW" varname="extension">
                <default>nc</default>
              </SetGlobalStep>
              <ProcedureCall id="_2JdX"
                             procedure="open_export_dialog.netcdf_cf">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <ProcedureCall id="_2JdY"
                             procedure="utility.export_subset_check_subset"/>
            </TestStep>
            <TestStep id="_2JdZ"
                      name="export_beam_netcdf4_cf_subset_and_check">
              <ProcedureCall id="_2Jda"
                             procedure="select.product_tree.product">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <SetGlobalStep id="_2Jdb" varname="target_file">
                <default>test_netcdf4_cf</default>
              </SetGlobalStep>
              <SetGlobalStep id="_2Jdc" varname="extension">
                <default>nc</default>
              </SetGlobalStep>
              <ProcedureCall id="_2Jdd"
                             procedure="open_export_dialog.netcdf4_cf">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <ProcedureCall id="_2Jde"
                             procedure="utility.export_subset_check_subset"/>
            </TestStep>
            <TestStep id="_2Jdf"
                      name="export_beam_netcdf_beam_subset_and_check">
              <ProcedureCall id="_2Jdg"
                             procedure="select.product_tree.product">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <SetGlobalStep id="_2Jdh" varname="target_file">
                <default>test_netcdf_beam</default>
              </SetGlobalStep>
              <SetGlobalStep id="_2Jdi" varname="extension">
                <default>nc</default>
              </SetGlobalStep>
              <ProcedureCall id="_2Jdj"
                             procedure="open_export_dialog.netcdf_beam">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <ProcedureCall id="_2Jdk"
                             procedure="utility.export_subset_check_subset"/>
            </TestStep>
            <TestStep id="_2Jdl"
                      name="export_beam_netcdf4_beam_subset_and_check">
              <ProcedureCall id="_2Jdm"
                             procedure="select.product_tree.product">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <SetGlobalStep id="_2Jdn" varname="target_file">
                <default>test_netcdf4_beam</default>
              </SetGlobalStep>
              <SetGlobalStep id="_2Jdo" varname="extension">
                <default>nc</default>
              </SetGlobalStep>
              <ProcedureCall id="_2Jdp"
                             procedure="open_export_dialog.netcdf4_beam">
                <variable name="prod_id">0</variable>
              </ProcedureCall>
              <ProcedureCall id="_2Jdq"
                             procedure="utility.export_subset_check_subset"/>
            </TestStep>
            <ElseSequence id="_2Je2">
              <ProcedureCall id="_2Je3" procedure="run-log.make_screensot">
                <variable name="iw_name">product_is_not_opened</variable>
                <variable name="iw_name_example">error_dialog</variable>
              </ProcedureCall>
              <ProcedureCall id="_2Je4" procedure="run-log.logError">
                <variable name="message">$(fileName) is not opened, the test is terminated</variable>
                <variable name="withScreenshots"/>
              </ProcedureCall>
            </ElseSequence>
          </IfSequence>
          <ProcedureCall id="_1rpy" procedure="close.all_products"/>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1qbK" name="utility">
      <Procedure id="_2JZF" name="check_resampled_product_is_opened">
        <ProcedureCall id="_2JZG"
                       procedure="check.product.opened_else_shoot_error">
          <variable name="product_name">$(resampled_file)</variable>
        </ProcedureCall>
        <SetGlobalStep id="_2JZH" varname="resampled_id">
          <default>$(product_id)</default>
        </SetGlobalStep>
      </Procedure>
      <Procedure id="_2JYx" name="export_subset_check_subset_help">
        <ProcedureCall id="_2JYy" postdelay="1000"
                       procedure="utility.export_subset_utility">
          <variable name="outdir">$(target_dir)</variable>
          <variable name="ext">$(extension)</variable>
          <variable name="target_file">$(target_file)</variable>
        </ProcedureCall>
        <ProcedureCall id="_2JYz"
                       procedure="utility.check_exported_subset_in_SNAP">
          <variable name="subset_name">$(target_file)</variable>
        </ProcedureCall>
        <ProcedureCall id="_2JY+" procedure="get.tree.get_test_product_id">
          <variable name="product">$(target_file)</variable>
        </ProcedureCall>
      </Procedure>
      <Procedure id="_2JYn" name="export_subset_check_subset">
        <ProcedureCall id="_2JZ5"
                       procedure="utility.export_subset_check_subset_help"/>
        <IfSequence id="_2Jbj"
                    test="&#34;$(product_id)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_2Jbk" procedure="close.all_products"/>
          <ProcedureCall id="_2Jbl" postdelay="2000"
                         procedure="open.product_in_snap">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="in_out">in</variable>
            <variable name="prod">$(fileName)</variable>
            <variable name="product_type">$(prod_reader_type)</variable>
          </ProcedureCall>
        </IfSequence>
      </Procedure>
      <Procedure id="_2Jcj" name="export_subset_check_subset_multires">
        <ProcedureCall id="_2Jck"
                       procedure="utility.export_subset_check_subset_help"/>
        <IfSequence id="_2Jcl"
                    test="&#34;$(product_id)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_2Jcu" procedure="close.all_products"/>
          <ProcedureCall id="_2Jcv" postdelay="2000"
                         procedure="open.product_in_snap">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="in_out">in</variable>
            <variable name="prod">$(fileName)</variable>
            <variable name="product_type">$(prod_reader_type)</variable>
          </ProcedureCall>
          <ProcedureCall id="_2Jcw" procedure="check.product.not_opened"/>
          <IfSequence id="_2Jcx"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_2Jcy" procedure="utility.resample"/>
          </IfSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1rp+" name="select_product_select_menu_file_export">
        <variable name="prod_id"/>
        <ProcedureCall id="_1l3B" procedure="check.product.not_opened"/>
        <IfSequence id="_1kk7" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1rns" postdelay="2000"
                         procedure="open.product_in_snap">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="in_out">in</variable>
            <variable name="prod">$(fileName)</variable>
            <variable name="product_type">$(prod_reader_type)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1rMh" procedure="wait.product_is_opened"/>
        </IfSequence>
        <ProcedureCall id="_1rp-" procedure="select.product_tree.product">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1rq0" procedure="do_click.menu.file"/>
        <ProcedureCall id="_1rq1" procedure="do_click.menu.file.export"/>
      </Procedure>
      <Procedure id="_1rpr" name="wait_export">
        <TryStep id="_1rqO" predelay="500">
          <ComponentWaiter absence="true" client="$(client)"
                           component="dialog2.buttonCancel" id="_1ret"
                           raise="false" timeout="1500000"/>
          <CatchSequence exception="TestException" id="_1rqP" maxerror="0">
            <TryStep id="_1rqi" predelay="500">
              <ComponentWaiter absence="true" client="$(client)"
                               component="dialog9.buttonCancel" id="_1rqj"
                               timeout="1500000"/>
              <CatchSequence exception="TestException" id="_1rqk"
                             maxerror="0"/>
            </TryStep>
          </CatchSequence>
        </TryStep>
      </Procedure>
      <Procedure id="_1rnt" name="export_subset_utility">
        <variable name="outdir">export</variable>
        <variable name="ext">dim</variable>
        <variable name="target_file"/>
        <TestStep id="_1rsR" name="set_target_file_name">
          <ProcedureCall id="_1rra" procedure="path.output_data_directory">
            <variable name="output_dir">$(outdir)</variable>
          </ProcedureCall>
          <SetGlobalStep id="_1rsS" varname="output_file">
            <default>$(output_data_directory)$(target_file).$(ext)</default>
          </SetGlobalStep>
          <ServerScriptStep disabled="true" id="_1rrc" name="print">
            <code>print "output_file =$(output_file)"  </code>
          </ServerScriptStep>
          <TryStep id="_2JdC" name="set_file_name">
            <ProcedureCall id="_2Jd7" postdelay="500"
                           procedure="set.export_dialog.file_name">
              <variable name="file">$(output_file)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_2JdD" maxerror="0"/>
          </TryStep>
        </TestStep>
        <TryStep id="_1rrG" name="open_subset_dialog">
          <ProcedureCall id="_1rrH"
                         procedure="do_click.export_product_dialog.button_Subset"/>
          <ProcedureCall id="_1rrI" procedure="check.opened.subset_dialog"/>
          <SetGlobalStep id="_1rrJ" varname="subset_tool_window_appears">
            <default>true</default>
          </SetGlobalStep>
          <CatchSequence exception="TestException" id="_1rrK" maxerror="0">
            <SetGlobalStep id="_1rrL" varname="subset_tool_window_appears">
              <default>false</default>
            </SetGlobalStep>
            <ProcedureCall disabled="true" id="_1rrM"
                           procedure="run-log.make_screensot">
              <variable name="iw_name">export_product_window</variable>
            </ProcedureCall>
            <ProcedureCall disabled="true" id="_1rrN"
                           procedure="run-log.logError">
              <variable name="message">Subset button is disabled</variable>
              <variable name="withScreenshots"/>
            </ProcedureCall>
            <ProcedureCall disabled="true" id="_1rrO"
                           procedure="do_click.import_product_dialog.cancel"/>
          </CatchSequence>
        </TryStep>
        <IfSequence id="_1rrP"
                    test="&#34;$(subset_tool_window_appears)&#34;==&#34;true&#34;">
          <IfSequence id="_2Jes"
                      test="&#34;$(geo_coding)&#34;==&#34;true&#34;">
            <ProcedureCall id="_2Jet"
                           procedure="subset.define_spatial_subset_geoposition">
              <variable name="north_lat">$(north_latitude)</variable>
              <variable name="west_lon">$(west_longitude)</variable>
              <variable name="south_lat">$(south_latitude)</variable>
              <variable name="east_lon">$(east_longitude)</variable>
            </ProcedureCall>
            <ProcedureCall id="_2Jeu" procedure="subset.define_band_subset">
              <variable name="band_name">$(bandName)</variable>
            </ProcedureCall>
            <ProcedureCall id="_2Jev"
                           procedure="do_click.subset_tool.button_OK"/>
            <ProcedureCall id="_2Jew"
                           procedure="subset.handle_incomplete_subset_definition_dialog"/>
            <ElseSequence id="_2Jex">
              <ProcedureCall id="_2Jey"
                             procedure="subset.define_spatial_subset_pixelpos">
                <variable name="start_x">200</variable>
                <variable name="start_y">200</variable>
                <variable name="end_x">400</variable>
                <variable name="end_y">400</variable>
              </ProcedureCall>
              <ProcedureCall id="_2Jez" procedure="subset.define_band_subset">
                <variable name="band_name">$(bandName)</variable>
              </ProcedureCall>
              <ProcedureCall id="_2Je+"
                             procedure="do_click.subset_tool.button_OK"/>
              <ProcedureCall id="_2Je-"
                             procedure="subset.handle_incomplete_subset_definition_dialog"/>
            </ElseSequence>
          </IfSequence>
          <TestStep id="_2JeV" name="set_target_file_name">
            <ProcedureCall id="_2JeW" procedure="path.output_data_directory">
              <variable name="output_dir">$(outdir)</variable>
            </ProcedureCall>
            <SetGlobalStep id="_2JeX" varname="output_file">
              <default>$(output_data_directory)$(target_file).$(ext)</default>
            </SetGlobalStep>
            <ServerScriptStep disabled="true" id="_2JeY" name="print">
              <code>print "output_file =$(output_file)"  </code>
            </ServerScriptStep>
            <ProcedureCall id="_2JeZ" postdelay="500"
                           procedure="set.export_dialog.file_name">
              <variable name="file">$(output_file)</variable>
            </ProcedureCall>
          </TestStep>
          <ProcedureCall id="_1rre" postdelay="500"
                         procedure="do_click.export_product_dialog.button_Export_Product"/>
          <ProcedureCall id="_1rrf" procedure="utility.wait_export"/>
          <ElseSequence id="_1rrg">
            <ProcedureCall id="_1rrh" procedure="run-log.make_screensot">
              <variable name="iw_name">subset_tool_window</variable>
            </ProcedureCall>
            <TryStep id="_1rsG">
              <SetGlobalStep id="_1rsK" varname="snap_error"/>
              <ProcedureCall id="_1rsE"
                             procedure="get.error_text.message_in_dialog_SNAP_Error_multi-size_subset"/>
              <CatchSequence exception="TestException" id="_1rsH"
                             maxerror="0">
                <SetGlobalStep id="_1rsJ" varname="snap_error"/>
              </CatchSequence>
            </TryStep>
            <IfSequence id="_1rsI"
                        test="&#34;$(snap_error)&#34;==&#34;No subset can be created of a multi-size products.&#34;">
              <ProcedureCall id="_1rsF"
                             procedure="do_click.error_dialog.dialog_SNAP_Error.button_OK"/>
              <ProcedureCall id="_1rsN"
                             procedure="do_click.export_product_dialog.cancel"/>
              <ProcedureCall id="_1rsQ"
                             procedure="qfs.swing.cleanup.closeAllModalDialogs">
                <variable name="maxDialogs">5</variable>
              </ProcedureCall>
              <ElseSequence id="_1rsL">
                <ProcedureCall disabled="true" id="_1rri"
                               procedure="do_click.export_product_dialog.cancel"/>
                <ProcedureCall id="_2JdF"
                               procedure="qfs.swing.cleanup.closeAllModalDialogs">
                  <variable name="maxDialogs">5</variable>
                </ProcedureCall>
                <ProcedureCall id="_1rrj" procedure="run-log.logError">
                  <variable name="message">subset_tool_window</variable>
                  <variable name="withScreenshots">true</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </ElseSequence>
        </IfSequence>
        <ProcedureCall id="_2JdE"
                       procedure="qfs.swing.cleanup.closeAllModalDialogs">
          <variable name="maxDialogs">5</variable>
        </ProcedureCall>
      </Procedure>
      <Procedure id="_1roT" name="check_exported_subset_in_SNAP">
        <variable name="subset_name"/>
        <ProcedureCall disabled="true" id="_1roU"
                       procedure="close.all_products"/>
        <ProcedureCall id="_1roV"
                       procedure="check_external_file.file_exists_setGlobal">
          <variable name="fileName">$(output_file)</variable>
        </ProcedureCall>
        <IfSequence id="_1roW" test="&#34;$(fileExists)&#34;==&#34;True&#34;">
          <ProcedureCall id="_1roX" postdelay="1000"
                         procedure="open.product_in_snap">
            <variable name="prod_dir">$(target_dir)</variable>
            <variable name="in_out">out</variable>
            <variable name="prod">$(target_file).$(extension)</variable>
            <variable name="product_type"/>
          </ProcedureCall>
          <ProcedureCall disabled="true" id="_1roY"
                         procedure="wait.product_is_opened"/>
          <ProcedureCall id="_2JGN"
                         procedure="wait.disappear.reading_product_progress_monitor"/>
          <ProcedureCall id="_2JGP"
                         procedure="check.product.opened_else_shoot_error">
            <variable name="product_name">$(subset_name)</variable>
          </ProcedureCall>
          <IfSequence id="_2JS-"
                      test="&#34;$(product_id)&#34;&lt;&gt;&#34;&#34;">
            <TestStep id="_2JT0" name="open_image_window">
              <TryStep id="_2JT1" name="doubleclick_product_node">
                <ProcedureCall id="_2JT2"
                               procedure="do_click.tree.doubleclick_product_node">
                  <variable name="prod_id">$(pid)</variable>
                  <variable name="group_id">0</variable>
                  <variable name="view_id">0</variable>
                  <variable name="band">$(bandName)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_2JT3"
                               maxerror="0">
                  <TryStep id="_2JT4" name="doubleclick_product_node">
                    <ProcedureCall id="_2JT5"
                                   procedure="do_click.tree.doubleclick_product_node">
                      <variable name="prod_id">$(pid)</variable>
                      <variable name="group_id"/>
                      <variable name="view_id">0</variable>
                      <variable name="band">$(bandName)</variable>
                    </ProcedureCall>
                    <CatchSequence exception="TestException" id="_2JT6"
                                   maxerror="0">
                      <ProcedureCall id="_2JT7"
                                     procedure="wait.disappear.reading_product_progress_monitor"/>
                      <TryStep id="_2JT8" name="doubleclick_product_node">
                        <ProcedureCall id="_2JT9"
                                       procedure="do_click.tree.doubleclick_product_node">
                          <variable name="prod_id">$(pid)</variable>
                          <variable name="group_id">0</variable>
                          <variable name="view_id">0</variable>
                          <variable name="band">$(bandName)</variable>
                        </ProcedureCall>
                        <CatchSequence exception="TestException" id="_2JTA"
                                       maxerror="0">
                          <TryStep id="_2JTB" name="doubleclick_product_node">
                            <ProcedureCall id="_2JTC"
                                           procedure="do_click.tree.doubleclick_product_node">
                              <variable name="prod_id">$(pid)</variable>
                              <variable name="group_id"/>
                              <variable name="view_id">0</variable>
                              <variable name="band">$(bandName)</variable>
                            </ProcedureCall>
                            <CatchSequence exception="TestException"
                                           id="_2JTD" maxerror="0"/>
                          </TryStep>
                        </CatchSequence>
                      </TryStep>
                    </CatchSequence>
                  </TryStep>
                </CatchSequence>
              </TryStep>
              <ProcedureCall id="_2JTE"
                             procedure="utility.wait_image_created_handle_error"/>
              <IfSequence id="_2JTF"
                          test="&#34;$(image_window_appears)&#34;==&#34;false&#34;">
                <ProcedureCall id="_2JTG" procedure="run-log.logError">
                  <variable name="message">image view is not appear</variable>
                  <variable name="withScreenshots">true</variable>
                </ProcedureCall>
              </IfSequence>
            </TestStep>
            <TestStep id="_1s9e" name="close_selected_product">
              <TryStep id="_1s9f" name="select_product">
                <ProcedureCall id="_1s9g"
                               procedure="select.product_tree.product">
                  <variable name="prod_id">$(pid)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1s9h"
                               maxerror="0">
                  <ProcedureCall id="_1s9i"
                                 procedure="run-log.make_screensot">
                    <variable name="iw_name">exported_subset</variable>
                  </ProcedureCall>
                  <ProcedureCall id="_1s9j" procedure="run-log.logError">
                    <variable name="message">exported subset is not opened in SNAP</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
              <ProcedureCall id="_1s9k" procedure="close.selected_product"/>
            </TestStep>
          </IfSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1qbL" name="export_colour_legend_image_dialog">
        <variable name="file"/>
        <TextInputStep clear="true" client="$(client)"
                       component="dialogSNAP_-_export_Colour_Legend_Image.textFile_name:"
                       id="_1qaa">
          <text>$(file)</text>
        </TextInputStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogSNAP_-_export_Colour_Legend_Image.buttonProperties..."
                        event="MOUSE_MPRC" id="_1qaf" modifiers="16"/>
        <ProcedureCall id="_1qbY"
                       procedure="utility.colour_legend_image_property"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogSNAP_-_export_Colour_Legend_Image.buttonSave"
                        event="MOUSE_MPRC" id="_1qbZ" modifiers="16"/>
      </Procedure>
      <Procedure id="_1qbM" name="colour_legend_image_property">
        <ComponentWaiter client="$(client)"
                         component="dialogSNAP_-_Colour_Legend_Properties"
                         id="_1qag" timeout="100"/>
        <TestStep id="_1qbQ" name="select_using_header">
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="dialogSNAP_-_Colour_Legend_Properties.legend.usingHeader.Editor"
                            id="_1paI" resvarname="using_header"/>
          <IfSequence id="_1qbO"
                      test="&#34;$(using_header)&#34;==&#34;false&#34;">
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogSNAP_-_Colour_Legend_Properties.legend.usingHeader.Editor"
                            event="MOUSE_MPRC" id="_1qah" modifiers="16"/>
          </IfSequence>
        </TestStep>
        <TestStep id="_1qbR" name="set_header">
          <TextInputStep clear="true" client="$(client)"
                         component="dialogSNAP_-_Colour_Legend_Properties.legend.headerText.Editor"
                         id="_1qak">
            <text>test</text>
          </TextInputStep>
        </TestStep>
        <TestStep id="_1qbP" name="select_orientation_vertical">
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSNAP_-_Colour_Legend_Properties.legend.orientation.Editor.button"
                          event="MOUSE_MPRC" id="_1qal" modifiers="16"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSNAP_-_Colour_Legend_Properties.listInvokerName:_legend.orientation.Editor.Vertical"
                          event="MOUSE_MPRC" id="_1qam" modifiers="16"/>
        </TestStep>
        <TestStep id="_1qbS" name="fontSize">
          <TextInputStep clear="true" client="$(client)"
                         component="dialogSNAP_-_Colour_Legend_Properties.legend.fontSize.Editor"
                         id="_1qat">
            <text>12</text>
          </TextInputStep>
        </TestStep>
        <TestStep id="_1qbT" name="select_antialiasing">
          <CheckBooleanStep checktype="checked" client="$(client)"
                            component="dialogSNAP_-_Colour_Legend_Properties.legend.antialiasing.Editor"
                            id="_1qbU" resvarname="antialiasing"/>
          <IfSequence id="_1qbV"
                      test="&#34;$(antialiasing)&#34;==&#34;false&#34;">
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogSNAP_-_Colour_Legend_Properties.legend.antialiasing.Editor"
                            event="MOUSE_MPRC" id="_1qav" modifiers="16"/>
          </IfSequence>
        </TestStep>
        <TestStep id="_1qbX" name="check_preview">
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSNAP_-_Colour_Legend_Properties.buttonPreview..."
                          event="MOUSE_MPRC" id="_1qax" modifiers="16"/>
          <ComponentWaiter client="$(client)"
                           component="dialogSNAP_-_Colour_Legend_Preview"
                           id="_1qay" timeout="100"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSNAP_-_Colour_Legend_Preview.ModalDialog.ok"
                          event="MOUSE_MPRC" id="_1qaz" modifiers="16"/>
        </TestStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogSNAP_-_Colour_Legend_Properties.ImageLegendDialog.ok"
                        event="MOUSE_MPRC" id="_1qb0" modifiers="16"/>
      </Procedure>
      <Procedure id="_1qbv" name="export_colour_palette_dialog">
        <variable name="file"/>
        <TextInputStep clear="true" client="$(client)"
                       component="dialogExport_Colour_Palette.textFile_name:"
                       id="_1qY+">
          <text>$(file)</text>
        </TextInputStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogExport_Colour_Palette.buttonSave"
                        event="MOUSE_MPRC" id="_1qY-" modifiers="16"/>
      </Procedure>
      <Procedure id="_1qc3" name="export_geocoding_envi_gcp_file_dialog">
        <variable name="file"/>
        <TextInputStep clear="true" client="$(client)"
                       component="dialogExport_ENVI_Ground_Control_Points.textFile_name:"
                       id="_1qcI">
          <text>$(file)</text>
        </TextInputStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogExport_ENVI_Ground_Control_Points.buttonSave"
                        event="MOUSE_MPRC" id="_1qcJ" modifiers="16"/>
      </Procedure>
      <Procedure id="_1qcc" name="view_as_image"/>
      <Procedure id="_1qcd" name="view_as_google_earth_KMZ"/>
      <Procedure id="_1qce" name="transect_pixels"/>
      <Procedure id="_1qcf" name="mask_pixels"/>
      <Procedure id="_1qcg" name="geometry_as_shape_file_dialog">
        <variable name="file"/>
        <TextInputStep clear="true" client="$(client)"
                       component="dialogSNAP_-_Export_Geometry_as_ESRI_Shapefile.textFile_name:"
                       id="_1qdT">
          <text>$(file)</text>
        </TextInputStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogSNAP_-_Export_Geometry_as_ESRI_Shapefile.buttonSave"
                        event="MOUSE_MPRC" id="_1qdU" modifiers="16"/>
        <IfSequence id="_1r3C" test="${qftest:windows}">
          <ElseifSequence id="_1r3D" name="MAC?"
                          test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
          <ElseSequence id="_1r3E"/>
        </IfSequence>
      </Procedure>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <ProcedureCall id="_1rZG"
                   procedure="qfs.swing.cleanup.closeAllModalDialogs">
      <variable name="maxDialogs">5</variable>
    </ProcedureCall>
    <IfSequence id="_1op7" test="${qftest:windows}">
      <ElseifSequence id="_1op8" name="MAC?"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
      <ElseSequence id="_1op9"/>
    </IfSequence>
    <ProcedureCall id="_1oXb" procedure="select.product_tree.band">
      <variable name="prod_id">0</variable>
      <variable name="group_id"/>
      <variable name="view_id">4</variable>
      <variable name="band">Oa05_radiance</variable>
    </ProcedureCall>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
