<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.11">
  <include>qfs.qft</include>
  <include>snap_check.qft</include>
  <include>snap_components.qft</include>
  <include>snap_main.qft</include>
  <include>snap_do_click.qft</include>
  <dependency>snap_main.qft</dependency>
  <dependency>snap_workflow.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1lB5" name="select">
      <Package id="_1pYw" name="band_chooser">
        <Procedure id="_1pYz" name="checkbox_band">
          <variable name="band"/>
          <comment>@teststep Click on checkbox 'band' in the 'Band Chooser' dialog.</comment>
          <SetGlobalStep disabled="true" id="_1pZi" varname="band">
            <default>algal_1</default>
          </SetGlobalStep>
          <ProcedureCall id="_1pZW"
                         procedure="do_click.band_chooser.checkbox_band">
            <variable name="band">$(band)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1pZZ"
                         procedure="check.band_chooser.checkbox_band_selected_status">
            <variable name="sel_status">true</variable>
            <variable name="band">$(band)</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pZH" name="select_all">
          <comment>@teststep Click on checkbox 'Select All' in the 'Band Chooser' dialog.</comment>
          <ProcedureCall id="_1pZR"
                         procedure="check.band_chooser.select_all_selected"/>
          <IfSequence id="_1pZg"
                      test="&#34;$(select_all_selected)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pZX"
                           procedure="do_click.band_chooser.select_all"/>
          </IfSequence>
          <ProcedureCall id="_1pZT"
                         procedure="check.band_chooser.select_all_selected_status">
            <variable name="sel_status">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1pZO" name="select_none">
          <comment>@teststep Click on checkbox 'Select None' in the 'Band Chooser' dialog.</comment>
          <ProcedureCall id="_1pZd"
                         procedure="check.band_chooser.select_none_selected"/>
          <IfSequence id="_1pZh"
                      test="&#34;$(select_none_selected)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1pZb"
                           procedure="do_click.band_chooser.select_none"/>
          </IfSequence>
          <ProcedureCall id="_1pZf"
                         procedure="check.band_chooser.select_none_selected_status">
            <variable name="sel_status">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package id="_1l05" name="product_tree">
        <Procedure id="_1l06" name="band" postdelay="500">
          <variable name="prod_id"/>
          <variable name="group_id"/>
          <variable name="view_id"/>
          <variable name="band"/>
          <comment>@teststep Select band</comment>
          <ProcedureCall id="_1oRr" procedure="get.tree.bands_node_id">
            <variable name="prod_id">$(prod_id)</variable>
          </ProcedureCall>
          <IfSequence id="_1oTc"
                      test="&#34;$(bands_group)&#34;==&#34;true&#34;">
            <SetGlobalStep disabled="true" id="_1oUQ" varname="nid">
              <default>/$(prod_id)/$(bands_node_id)/$(view_id)</default>
            </SetGlobalStep>
            <ServerScriptStep disabled="true" id="_1l5A" name="print">
              <code>print "1 Bands Node = $(nid)"</code>
            </ServerScriptStep>
            <IfSequence id="_1oQJ" test="&#34;$(group_id)&#34;==&#34;&#34;">
              <SetGlobalStep id="_1oUR" varname="nid">
                <default>/$(prod_id)/$(bands_node_id)/$(view_id)</default>
              </SetGlobalStep>
              <ElseSequence id="_1oQL">
                <SetGlobalStep id="_1oUS" varname="nid">
                  <default>/$(prod_id)/$(bands_node_id)/$(group_id)/$(view_id)</default>
                </SetGlobalStep>
              </ElseSequence>
            </IfSequence>
            <ElseSequence id="_1oTd">
              <IfSequence id="_1oUN"
                          test="&#34;$(band)&#34;&lt;&gt;&#34;&#34;">
                <ProcedureCall id="_1oUM"
                               procedure="get.tree.get_index_of_node">
                  <variable name="node">$(band)</variable>
                  <variable name="nodeSeparator">@</variable>
                  <variable name="linear">false</variable>
                </ProcedureCall>
                <SetGlobalStep id="_1oUT" varname="nid">
                  <default>$(new_band_id)</default>
                </SetGlobalStep>
                <ServerScriptStep id="_1oUe" name="print">
                  <code>print "2 Bands Node = $(nid)"</code>
                </ServerScriptStep>
                <ElseSequence id="_1oUO">
                  <SetGlobalStep id="_1oUU" varname="nid">
                    <default>/$(prod_id)/0</default>
                  </SetGlobalStep>
                  <ServerScriptStep id="_1oUf" name="print">
                    <code>print "3 Bands Node = $(nid)"</code>
                  </ServerScriptStep>
                </ElseSequence>
              </IfSequence>
            </ElseSequence>
          </IfSequence>
          <ServerScriptStep id="_1oUg" name="print">
            <code>print "Bands Node = $(nid)"</code>
          </ServerScriptStep>
          <MouseEventStep clicks="1" client="$(client)"
                          component="NbMainWindow.Product_Explorer.tree&amp;$(nid)"
                          event="MOUSE_MPRC" hardevent="true" id="_1pyj"
                          modifiers="16" postdelay="500"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="NbMainWindow.Product_Explorer.tree&amp;$(nid)"
                          event="MOUSE_MPRC" hardevent="true" id="_1pDv"
                          modifiers="16"/>
        </Procedure>
        <Procedure id="_1pD+" name="vector_node" postdelay="500">
          <variable name="prod_id"/>
          <variable name="node_id"/>
          <variable name="node_name"/>
          <comment>@teststep Select 'Vector Data' node.</comment>
          <ProcedureCall id="_1pD-" procedure="get.tree.vector_data_node_id">
            <variable name="prod_id">$(prod_id)</variable>
          </ProcedureCall>
          <IfSequence id="_1pE0"
                      test="&#34;$(vector_data)&#34;==&#34;true&#34;">
            <SetGlobalStep id="_1pE1" varname="nid">
              <default>/$(prod_id)/$(vector_data_node_id)/$(node_id)</default>
            </SetGlobalStep>
            <ServerScriptStep id="_1pEF" name="print">
              <code>print "Vector Node = $(nid)"</code>
            </ServerScriptStep>
            <MouseEventStep clicks="1" client="$(client)"
                            component="NbMainWindow.Product_Explorer.tree&amp;$(nid)"
                            event="MOUSE_MPRC" hardevent="true" id="_1pEG"
                            modifiers="16" postdelay="500"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="NbMainWindow.Product_Explorer.tree&amp;$(nid)"
                            event="MOUSE_MPRC" hardevent="true" id="_1pEH"
                            modifiers="16"/>
            <ElseSequence id="_1pE7">
              <ProcedureCall id="_1pEJ"
                             procedure="run-log.error_message.node_does_not_exist">
                <variable name="node_name">$(node_name)</variable>
              </ProcedureCall>
            </ElseSequence>
          </IfSequence>
        </Procedure>
        <Procedure id="_1rRO" name="tree_node" postdelay="500">
          <variable name="node_id"/>
          <variable name="node_id_example">0/0/0; 0/1</variable>
          <comment>@teststep Select node.</comment>
          <TryStep id="_1rRX">
            <MouseEventStep clicks="1" client="$(client)"
                            component="NbMainWindow.Product_Explorer.tree&amp;/$(node_id)"
                            event="MOUSE_MPRC" hardevent="true" id="_1rRT"
                            modifiers="16" postdelay="500"/>
            <CatchSequence exception="TestException" id="_1rRY" maxerror="0"/>
          </TryStep>
          <TryStep id="_1rRZ">
            <MouseEventStep clicks="1" client="$(client)"
                            component="NbMainWindow.Product_Explorer.tree&amp;/$(node_id)"
                            event="MOUSE_MPRC" hardevent="true" id="_1rRU"
                            modifiers="16"/>
            <CatchSequence exception="TestException" id="_1rRa" maxerror="0">
              <ProcedureCall id="_1rRW"
                             procedure="run-log.error_message.node_does_not_exist">
                <variable name="node_name">$(node_id)</variable>
              </ProcedureCall>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1oTh" name="metadata" postdelay="500">
          <variable name="prod_id"/>
          <variable name="group_id"/>
          <variable name="metadata_id"/>
          <comment>@teststep Select 'Meta Data' node.</comment>
          <ProcedureCall id="_1oTi" procedure="get.tree.metadata_node_id">
            <variable name="prod_id">$(prod_id)</variable>
          </ProcedureCall>
          <IfSequence id="_1oTj"
                      test="&#34;$(metadata_group)&#34;==&#34;true&#34;">
            <MouseEventStep clicks="1" client="$(client)"
                            component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(metadata_node_id)/$(metadata_id)"
                            event="MOUSE_MPRC" hardevent="true" id="_1oTk"
                            modifiers="16"/>
            <IfSequence disabled="true" id="_1oTl"
                        test="&#34;$(group_id)&#34;==&#34;&#34;">
              <MouseEventStep clicks="1" client="$(client)"
                              component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(metadata_node_id)/$(metadata_id)"
                              event="MOUSE_MPRC" hardevent="true" id="_1oTm"
                              modifiers="16"/>
              <ElseSequence id="_1oTn">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(metadata_node_id)/$(group_id)/$(metadata_id)"
                                event="MOUSE_MPRC" hardevent="true" id="_1oTo"
                                modifiers="16"/>
              </ElseSequence>
            </IfSequence>
            <ElseSequence id="_1oTp">
              <MouseEventStep clicks="1" client="$(client)"
                              component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(metadata_id)"
                              event="MOUSE_MPRC" hardevent="true" id="_1oTq"
                              modifiers="16"/>
            </ElseSequence>
          </IfSequence>
        </Procedure>
        <Procedure id="_1m2l" name="product">
          <variable name="prod_id"/>
          <comment>@teststep Select product node.</comment>
          <IfSequence id="_1miu" test="&#34;$(prod_id)&#34;==&#34;&#34;">
            <SetGlobalStep id="_1miv" local="true" varname="pid">
              <default>0</default>
            </SetGlobalStep>
            <ElseSequence id="_1miw">
              <SetGlobalStep id="_1mix" local="true" varname="pid">
                <default>$(prod_id)</default>
              </SetGlobalStep>
            </ElseSequence>
          </IfSequence>
          <MouseEventStep clicks="1" client="$(client)"
                          component="NbMainWindow.Product_Explorer.tree&amp;/$(pid)"
                          event="MOUSE_MPRC" id="_1mis" modifiers="16"/>
        </Procedure>
      </Package>
      <Package id="_1oOp" name="tools">
        <Package id="_1oOq" name="bandMaths">
          <Procedure id="_1oQI" name="target_product">
            <variable name="target_product">[1]_MER_RR__1PNMAP20070729_022435_000000792060_00175_28285_0001.N1</variable>
            <MouseEventStep clicks="1" client="$(client)"
                            component="productName" event="MOUSE_MPRC"
                            id="_1paZ" modifiers="16" x="342" y="13"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="listInvokerName:_productName@$(target_product)"
                            event="MOUSE_MPRC" id="_1paa" modifiers="16"/>
            <IfSequence disabled="true" id="_1pDh" test="${qftest:windows}">
              <MouseEventStep clicks="1" client="$(client)"
                              component="BandMathsDialog.productName"
                              event="MOUSE_MPRC" id="_1mlL" modifiers="16"
                              x="225" y="13"/>
              <MouseEventStep clicks="1" client="$(client)"
                              component="dialogBand_Maths.popupInvokerName:_productName.listTarget_product_target_product"
                              event="MOUSE_MPRC" id="_1mlM" modifiers="16"/>
              <ElseifSequence id="_1pDi" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="productName" event="MOUSE_MPRC"
                                id="_1pDm" modifiers="16" x="342" y="13"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="listInvokerName:_productName@$(target_product)"
                                event="MOUSE_MPRC" id="_1pDn" modifiers="16"/>
              </ElseifSequence>
              <ElseSequence id="_1pDj">
                <MouseEventStep clicks="1" client="$(client)"
                                component="productName" event="MOUSE_MPRC"
                                id="_1pDo" modifiers="16" x="342" y="13"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="listInvokerName:_productName@$(target_product)"
                                event="MOUSE_MPRC" id="_1pDp" modifiers="16"/>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1oPr" name="saveExpressionOnly">
            <comment>@teststep Check-in checkbox 'Virtual (save expression only)' .</comment>
            <ProcedureCall id="_1oP-"
                           procedure="check.tools.bandMaths.saveExpressionOnly_selected"/>
            <IfSequence id="_1oQ3"
                        test="&#34;$(saveExpressionOnly_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1oPz"
                             procedure="do_click.tools.bandMaths.saveExpressionOnly"/>
            </IfSequence>
            <ProcedureCall id="_1oQ0"
                           procedure="check.tools.bandMaths.saveExpressionOnly_selected_status">
              <variable name="sel_status">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1oPx" name="noDataValueUsed_selected">
            <comment>@teststep Check-in checkbox 'Replace NaN and infinity results'.</comment>
            <ProcedureCall id="_1oQ1"
                           procedure="check.tools.bandMaths.noDataValueUsed_selected"/>
            <IfSequence id="_1oQ4"
                        test="&#34;$(noDataValueUsed_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1oP+"
                             procedure="do_click.tools.bandMaths.noDataValueUsed_selected"/>
            </IfSequence>
            <ProcedureCall id="_1oQ2"
                           procedure="check.tools.bandMaths.noDataValueUsed_selected_status">
              <variable name="sel_status">true</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1pDw" name="view">
        <Procedure id="_1pDx" name="geometry">
          <variable name="view_name"/>
          <variable name="x0"/>
          <variable name="y0"/>
          <variable name="x1"/>
          <variable name="y1"/>
          <ProcedureCall id="_1pDy"
                         procedure="do_click.main_toolbar.tools.selectTool"/>
          <ProcedureCall id="_1pDz"
                         procedure="geometry.utility.drag_from_start_point_to_end_point">
            <variable name="view_name">$(view_name)</variable>
            <variable name="start_x">$(x0)</variable>
            <variable name="start_y">$(y0)</variable>
            <variable name="end_x">$(x1)</variable>
            <variable name="end_y">$(y1)</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Procedure id="_1oUW" name="file_of_type">
        <variable name="file_of_type"/>
        <comment>@teststep Select 'File of type'.</comment>
        <TryStep id="_1oUY">
          <SetGlobalStep id="_1rhN" varname="file_of_type_selected">
            <default>true</default>
          </SetGlobalStep>
          <IfSequence id="_1owN" test="${qftest:windows}">
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogSNAP_-_Open_Product.comboFiles_of_type:"
                            event="MOUSE_MPRC" id="_1rd6" modifiers="16"
                            x="148" y="12"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogSNAP_-_Open_Product.listInvokerFeature:_Label:_Files_of_type_item"
                            event="MOUSE_MPRC" id="_1rd7" modifiers="16"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogOpen_Product.comboFiles_of_type:"
                            disabled="true" event="MOUSE_MPRC" id="_1pDq"
                            modifiers="16" x="130" y="13"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialogOpen_Product.popupInvokerFeature:_Label:_Files_of_type:.listFiles_of_type"
                            disabled="true" event="MOUSE_MPRC" id="_1pDr"
                            modifiers="16"/>
            <ElseifSequence id="_1owO" name="MAC?"
                            test="'${system:os.name}' .find('Mac OS X')&gt;=0">
              <MouseEventStep clicks="1" client="$(client)"
                              component="dialogOpen_Product.comboFiles_of_type:"
                              event="MOUSE_MPRC" id="_1msJ" modifiers="16"
                              x="130" y="13"/>
              <MouseEventStep clicks="1" client="$(client)"
                              component="dialogOpen_Product.popupInvokerFeature:_Label:_Files_of_type:.listFiles_of_type"
                              event="MOUSE_MPRC" id="_1msK" modifiers="16"/>
            </ElseifSequence>
            <ElseSequence id="_1owP">
              <TryStep disabled="true" id="_1owc" name="todo">
                <MouseEventStep clicks="1" client="$(client)"
                                component="comboFilter:" event="MOUSE_MPRC"
                                id="_1owK" modifiers="4" popup="true" x="38"
                                y="11"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="listInvokerFeature:_Label:_Filter:@$(file_of_type)"
                                event="MOUSE_MPRC" id="_1owM" modifiers="16"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="listInvokerFeature:_Label:_Filter:@BEAM-DIMAP product files (*.dim)"
                                disabled="true" event="MOUSE_MPRC" id="_1owQ"
                                modifiers="16"/>
                <CatchSequence exception="TestException" id="_1owd"
                               maxerror="0">
                  <TryStep id="_1owe">
                    <MouseEventStep clicks="1" client="$(client)"
                                    component="comboFilter:.button"
                                    event="MOUSE_MPRC" id="_1owR"
                                    modifiers="4" popup="true" x="38" y="11"/>
                    <MouseEventStep clicks="1" client="$(client)"
                                    component="listInvokerFeature:_Label:_Filter:@$(file_of_type)"
                                    event="MOUSE_MPRC" id="_1owS"
                                    modifiers="16"/>
                    <CatchSequence exception="TestException" id="_1owi"
                                   maxerror="0"/>
                  </TryStep>
                </CatchSequence>
              </TryStep>
            </ElseSequence>
          </IfSequence>
          <SetGlobalStep id="_1rhL" varname="file_of_type_selected">
            <default>true</default>
          </SetGlobalStep>
          <CatchSequence exception="TestException" id="_1oUZ" maxerror="0">
            <SetGlobalStep id="_1rhM" varname="file_of_type_selected">
              <default>false</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oUa" procedure="run-log.logError">
              <variable name="message">$(file_of_type) can not be selected</variable>
              <variable name="withScreenshots">true</variable>
            </ProcedureCall>
          </CatchSequence>
        </TryStep>
      </Procedure>
      <Package disabled="true" id="_1lbo" name="smos_box">
        <Package id="_1lbx" name="grid_point_bt_chart">
          <Procedure id="_1lc4" name="snap_to_selected_pin">
            <comment>@teststep Select 'Snap to selected pin'</comment>
            <ProcedureCall id="_1m0J"
                           procedure="check.smos_box.grid_point_bt_chart.snap_to_pin_selected"/>
            <IfSequence id="_1m0L"
                        test="&#34;$(snap_to_pin_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m0F"
                             procedure="do_click.smos_box.grid_point_bt_chart.snap_to_selected_pin"/>
            </IfSequence>
            <ProcedureCall id="_1m0K"
                           procedure="check.smos_box.grid_point_bt_chart.snap_to_pin_selected_status">
              <variable name="snap_to_pin">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lda" name="check_X">
            <comment>@teststep Select 'X' checkbox</comment>
            <ProcedureCall id="_1m0M"
                           procedure="check.smos_box.grid_point_bt_chart.check_X_selected"/>
            <IfSequence id="_1m0O"
                        test="&#34;$(check_X_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m0G"
                             procedure="do_click.smos_box.grid_point_bt_chart.check_X"/>
            </IfSequence>
            <ProcedureCall id="_1m0N"
                           procedure="check.smos_box.grid_point_bt_chart.check_X_selected_status">
              <variable name="x_selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lf4" name="check_Y">
            <comment>@teststep Select 'Y' checkbox</comment>
            <ProcedureCall id="_1m0P"
                           procedure="check.smos_box.grid_point_bt_chart.check_Y_selected"/>
            <IfSequence id="_1m0R"
                        test="&#34;$(check_Y_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m0H"
                             procedure="do_click.smos_box.grid_point_bt_chart.check_Y"/>
            </IfSequence>
            <ProcedureCall id="_1m0Q"
                           procedure="check.smos_box.grid_point_bt_chart.check_Y_selected_status">
              <variable name="y_selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lx4" name="check_XY">
            <comment>@teststep Select 'XY' checkbox</comment>
            <ProcedureCall id="_1m0S"
                           procedure="check.smos_box.grid_point_bt_chart.check_XY_selected"/>
            <IfSequence id="_1m0U"
                        test="&#34;$(check_XY_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m0I"
                             procedure="do_click.smos_box.grid_point_bt_chart.check_XY"/>
            </IfSequence>
            <ProcedureCall id="_1m0T"
                           procedure="check.smos_box.grid_point_bt_chart.check_XY_selected_status">
              <variable name="xy_selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Package id="_1m0V" name="deselect">
            <Procedure id="_1m0W" name="snap_to_selected_pin">
              <comment>@teststep Deselect 'Snap to selected pin'</comment>
              <ProcedureCall id="_1m0X"
                             procedure="check.smos_box.grid_point_bt_chart.snap_to_pin_selected"/>
              <IfSequence id="_1m0Y"
                          test="&#34;$(snap_to_pin_selected)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1m0Z"
                               procedure="do_click.smos_box.grid_point_bt_chart.snap_to_selected_pin"/>
              </IfSequence>
              <ProcedureCall id="_1m0a"
                             procedure="check.smos_box.grid_point_bt_chart.snap_to_pin_selected_status">
                <variable name="snap_to_pin">false</variable>
              </ProcedureCall>
            </Procedure>
            <Procedure id="_1m0b" name="check_X">
              <comment>@teststep Deselect 'X' checkbox</comment>
              <ProcedureCall id="_1m0c"
                             procedure="check.smos_box.grid_point_bt_chart.check_X_selected"/>
              <IfSequence id="_1m0d"
                          test="&#34;$(check_X_selected)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1m0e"
                               procedure="do_click.smos_box.grid_point_bt_chart.check_X"/>
              </IfSequence>
              <ProcedureCall id="_1m0f"
                             procedure="check.smos_box.grid_point_bt_chart.check_X_selected_status">
                <variable name="x_selected">false</variable>
              </ProcedureCall>
            </Procedure>
            <Procedure id="_1m0g" name="check_Y">
              <comment>@teststep Deselect 'Y' checkbox</comment>
              <ProcedureCall id="_1m0h"
                             procedure="check.smos_box.grid_point_bt_chart.check_Y_selected"/>
              <IfSequence id="_1m0i"
                          test="&#34;$(check_Y_selected)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1m0j"
                               procedure="do_click.smos_box.grid_point_bt_chart.check_Y"/>
              </IfSequence>
              <ProcedureCall id="_1m0k"
                             procedure="check.smos_box.grid_point_bt_chart.check_Y_selected_status">
                <variable name="y_selected">false</variable>
              </ProcedureCall>
            </Procedure>
            <Procedure id="_1m0l" name="check_XY">
              <comment>@teststep Deselect 'XY' checkbox</comment>
              <ProcedureCall id="_1m0m"
                             procedure="check.smos_box.grid_point_bt_chart.check_XY_selected"/>
              <IfSequence id="_1m0n"
                          test="&#34;$(check_XY_selected)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1m0o"
                               procedure="do_click.smos_box.grid_point_bt_chart.check_XY"/>
              </IfSequence>
              <ProcedureCall id="_1m0p"
                             procedure="check.smos_box.grid_point_bt_chart.check_XY_selected_status">
                <variable name="xy_selected">false</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1lby" name="grid_point_flag_matrix">
          <Procedure id="_1m0q" name="snap_to_selected_pin">
            <comment>@teststep Select 'Snap to selected pin'</comment>
            <ProcedureCall id="_1m0v"
                           procedure="check.smos_box.grid_point_flag_matrix.snap_to_pin_selected"/>
            <IfSequence id="_1m0s"
                        test="&#34;$(snap_to_pin_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m0t"
                             procedure="do_click.smos_box.grid_point_flag_matrix.snap_to_selected_pin"/>
            </IfSequence>
            <ProcedureCall id="_1m0w"
                           procedure="check.smos_box.grid_point_flag_matrix.snap_to_pin_selected_status">
              <variable name="snap_to_pin">true</variable>
            </ProcedureCall>
          </Procedure>
          <Package id="_1m0x" name="deselect">
            <Procedure id="_1m1G" name="snap_to_selected_pin">
              <comment>@teststep Deselect 'Snap to selected pin'</comment>
              <ProcedureCall id="_1m1H"
                             procedure="check.smos_box.grid_point_flag_matrix.snap_to_pin_selected"/>
              <IfSequence id="_1m1I"
                          test="&#34;$(snap_to_pin_selected)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1m1J"
                               procedure="do_click.smos_box.grid_point_flag_matrix.snap_to_selected_pin"/>
              </IfSequence>
              <ProcedureCall id="_1m1K"
                             procedure="check.smos_box.grid_point_flag_matrix.snap_to_pin_selected_status">
                <variable name="snap_to_pin">false</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
        </Package>
        <Package id="_1lbz" name="grid_point_data_table">
          <Procedure id="_1m1W" name="snap_to_selected_pin">
            <comment>@teststep Select 'Snap to selected pin'</comment>
            <ProcedureCall id="_1m1h"
                           procedure="check.smos_box.grid_point_data_table.snap_to_pin_selected"/>
            <IfSequence id="_1m1Y"
                        test="&#34;$(snap_to_pin_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m1Z"
                             procedure="do_click.smos_box.grid_point_data_table.snap_to_selected_pin"/>
            </IfSequence>
            <ProcedureCall id="_1m1i"
                           procedure="check.smos_box.grid_point_data_table.snap_to_pin_selected_status">
              <variable name="snap_to_pin">true</variable>
            </ProcedureCall>
          </Procedure>
          <Package id="_1m1b" name="deselect">
            <Procedure id="_1m1c" name="snap_to_selected_pin">
              <comment>@teststep Deselect 'Snap to selected pin'</comment>
              <ProcedureCall id="_1m1j"
                             procedure="check.smos_box.grid_point_data_table.snap_to_pin_selected"/>
              <IfSequence id="_1m1k"
                          test="&#34;$(snap_to_pin_selected)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1m1l"
                               procedure="do_click.smos_box.grid_point_data_table.snap_to_selected_pin"/>
              </IfSequence>
              <ProcedureCall id="_1m1m"
                             procedure="check.smos_box.grid_point_data_table.snap_to_pin_selected_status">
                <variable name="snap_to_pin">false</variable>
              </ProcedureCall>
            </Procedure>
          </Package>
          <Procedure id="_1lyK" name="snap_to_selected_pin">
            <comment>@teststep Click 'Snap to selected pin' checkbox</comment>
            <MouseEventStep clicks="1" client="$(client)"
                            component="Dialog.checkSnap_to_selected_pin3"
                            event="MOUSE_MPRC" id="_1lyO" modifiers="16"/>
          </Procedure>
          <Procedure id="_1lyP" name="columns">
            <comment>@teststep Click 'Columns...' button</comment>
            <MouseEventStep clicks="1" client="$(client)"
                            component="Dialog.buttonColumns..."
                            event="MOUSE_MPRC" id="_1lyQ" modifiers="16"/>
          </Procedure>
          <Procedure id="_1ll4" name="export">
            <comment>@teststep Click 'Export...' button</comment>
            <MouseEventStep clicks="1" client="$(client)"
                            component="Dialog.buttonExport..."
                            event="MOUSE_MPRC" id="_1llj" modifiers="16"/>
          </Procedure>
          <Procedure id="_1lyM" name="help">
            <comment>@teststep Click 'Help' button</comment>
            <MouseEventStep clicks="1" client="$(client)"
                            component="Dialog.helpButton4" event="MOUSE_MPRC"
                            id="_1llr" modifiers="16"/>
          </Procedure>
        </Package>
        <Package id="_1lb+" name="snapshot">
          <Procedure id="_1lyW" name="synchronise_with_view">
            <comment>@teststep Select 'Synchronise with view' </comment>
            <ProcedureCall id="_1m1n"
                           procedure="check.smos_box.snapshot.synchronise_with_view_selected"/>
            <IfSequence id="_1m1q"
                        test="&#34;$(synchronise_with_view_selected)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m1p"
                             procedure="do_click.smos_box.snapshot.synchronise_with_view"/>
            </IfSequence>
            <ProcedureCall id="_1m1o"
                           procedure="check.smos_box.snapshot.synchronise_with_view_selected_status">
              <variable name="synchronise_with_view">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1l+6" name="follow">
            <comment>@teststep Click 'Follow' checkbox</comment>
            <ProcedureCall id="_1m1z"
                           procedure="check.smos_box.snapshot.follow_enabled"/>
            <IfSequence id="_1m26"
                        test="&#34;$(follow_enabled)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m27"
                             procedure="select.smos_box.snapshot.synchronise_with_view"/>
              <ProcedureCall id="_1m2F"
                             procedure="do_click.smos_box.snapshot.snapshot"/>
            </IfSequence>
            <ProcedureCall id="_1m28"
                           procedure="check.smos_box.snapshot.follow_enabled"/>
            <IfSequence id="_1m2B"
                        test="&#34;$(follow_enabled)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1m23"
                             procedure="check.smos_box.snapshot.follow_selected"/>
              <IfSequence id="_1m24"
                          test="&#34;$(follow_selected)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1m25"
                               procedure="do_click.smos_box.snapshot.follow"/>
              </IfSequence>
              <ProcedureCall id="_1m1y"
                             procedure="check.smos_box.snapshot.follow_selected_status">
                <variable name="follow">true</variable>
              </ProcedureCall>
              <ElseSequence id="_1m2C">
                <ProcedureCall id="_1m2D" procedure="run-log.logError">
                  <variable name="message">'Follow' radiobutton is disabled</variable>
                  <variable name="withScreenshots">true</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1m2W" name="comboMode_utility">
            <variable name="mode"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="Dialog.SnapshotInfoToolView.Control.comboMode:"
                            event="MOUSE_MPRC" id="_1lJV" modifiers="16"
                            x="17" y="12"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="Dialog.popupInvokerClass:_ComboBox.listMode_mode"
                            event="MOUSE_MPRC" id="_1m2Z" modifiers="16"/>
          </Procedure>
          <Procedure id="_1l-A" name="comboMode">
            <variable name="mode"/>
            <ProcedureCall id="_1m2V"
                           procedure="check.smos_box.snapshot.comboMode_enabled"/>
            <IfSequence id="_1m2h"
                        test="&#34;$(comboMode_enabled)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1m2i"
                             procedure="select.smos_box.snapshot.deselect.synchronise_with_view"/>
            </IfSequence>
            <TryStep id="_1m2b">
              <ProcedureCall id="_1m2a"
                             procedure="select.smos_box.snapshot.comboMode_utility">
                <variable name="mode">$(mode)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1m2c"
                             maxerror="0">
                <TryStep id="_1m2d">
                  <ProcedureCall id="_1m2e"
                                 procedure="select.smos_box.snapshot.comboMode_utility">
                    <variable name="mode">$(mode)</variable>
                  </ProcedureCall>
                  <CatchSequence exception="TestException" id="_1m2f"
                                 maxerror="0">
                    <ProcedureCall id="_1m2g" procedure="run-log.logError">
                      <variable name="message">Mode $(mode) can not be selected</variable>
                      <variable name="withScreenshots">true</variable>
                    </ProcedureCall>
                  </CatchSequence>
                </TryStep>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Package id="_1m1r" name="deselect">
            <Procedure id="_1m1s" name="synchronise_with_view">
              <comment>@teststep Deselect 'Synchronise with view' </comment>
              <ProcedureCall id="_1m1t"
                             procedure="check.smos_box.snapshot.synchronise_with_view_selected"/>
              <IfSequence id="_1m1u"
                          test="&#34;$(synchronise_with_view_selected)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1m1v"
                               procedure="do_click.smos_box.snapshot.synchronise_with_view"/>
              </IfSequence>
              <ProcedureCall id="_1m1w"
                             procedure="check.smos_box.snapshot.synchronise_with_view_selected_status">
                <variable name="synchronise_with_view">false</variable>
              </ProcedureCall>
            </Procedure>
            <Procedure id="_1m2G" name="follow">
              <comment>@teststep Click 'Follow' checkbox</comment>
              <ProcedureCall id="_1m2H"
                             procedure="check.smos_box.snapshot.follow_enabled"/>
              <IfSequence id="_1m2I"
                          test="&#34;$(follow_enabled)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1m2J"
                               procedure="select.smos_box.snapshot.synchronise_with_view"/>
                <ProcedureCall id="_1m2K"
                               procedure="do_click.smos_box.snapshot.snapshot"/>
              </IfSequence>
              <ProcedureCall id="_1m2L"
                             procedure="check.smos_box.snapshot.follow_enabled"/>
              <IfSequence id="_1m2M"
                          test="&#34;$(follow_enabled)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1m2N"
                               procedure="check.smos_box.snapshot.follow_selected"/>
                <IfSequence id="_1m2O"
                            test="&#34;$(follow_selected)&#34;==&#34;true&#34;">
                  <ProcedureCall id="_1m2P"
                                 procedure="do_click.smos_box.snapshot.follow"/>
                </IfSequence>
                <ProcedureCall disabled="true" id="_1m2Q"
                               procedure="check.smos_box.snapshot.follow_selected_status">
                  <variable name="follow">false</variable>
                </ProcedureCall>
                <ElseSequence id="_1m2R">
                  <ProcedureCall id="_1m2S" procedure="run-log.logError">
                    <variable name="message">'Follow' radiobutton is disabled</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </Procedure>
          </Package>
        </Package>
      </Package>
      <Package id="_1pZj" name="analysis">
        <Package id="_1pab" name="histogram_dialog">
          <Procedure id="_1pac" name="use_ROI_mask">
            <comment>@teststep Select 'Use ROI mask(s)</comment>
            <ProcedureCall id="_1pad"
                           procedure="check.analysis.histogram_dialog.checked.use_ROI_mask"/>
            <IfSequence id="_1pae"
                        test="&#34;$(use_ROI_mask)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1paf"
                             procedure="do_click.analysis.histogram.use_ROI_mask"/>
            </IfSequence>
            <ProcedureCall id="_1pag"
                           procedure="check.analysis.histogram_dialog.checked.use_ROI_mask_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1rQ+" name="mask">
            <variable name="mask"/>
            <comment>@teststep Select $(mask) mask</comment>
            <TryStep id="_1rQ-">
              <ProcedureCall id="_1rR0"
                             procedure="select.analysis.dialog.mask">
                <variable name="mask">$(mask)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rR1"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.roiMask"
                                event="MOUSE_MPRC" id="_1rR2" modifiers="16"
                                x="68" y="11"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_roiMask2_correlative_plot.mask"
                                event="MOUSE_MPRC" id="_1rR3" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
        </Package>
        <Package id="_1l8t" name="statistics_dialog">
          <Procedure id="_1lBv" name="use_ROI_mask">
            <comment>@teststep Select 'Use ROI mask(s)</comment>
            <ProcedureCall id="_1lCP"
                           procedure="check.analysis.statistics_dialog.checked.use_ROI_mask"/>
            <IfSequence id="_1lCR"
                        test="&#34;$(use_ROI_mask)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pZn"
                             procedure="do_click.analysis.statistics.use_ROI_mask"/>
            </IfSequence>
            <ProcedureCall id="_1lCQ"
                           procedure="check.analysis.statistics_dialog.checked.use_ROI_mask_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1l9q" name="mask">
            <variable name="mask"/>
            <comment>@teststep Select $(mask) mask</comment>
            <TryStep id="_1rRM">
              <ProcedureCall id="_1rRL"
                             procedure="select.analysis.dialog.mask_statistic">
                <variable name="mask">$(mask)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rRN"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.Content_displayer.listFilter:2.mask"
                                event="MOUSE_MPRC" id="_1lD3" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1lBx" name="select_all">
            <comment>@teststep Select all</comment>
            <ProcedureCall id="_1lCX"
                           procedure="check.analysis.statistics_dialog.checked.select_all"/>
            <IfSequence id="_1lCY"
                        test="&#34;$(select_all)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pZm"
                             procedure="do_click.analysis.statistics.select_all"/>
            </IfSequence>
            <ProcedureCall id="_1lCa"
                           procedure="check.analysis.statistics_dialog.checked.select_all_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lCL" name="select_none">
            <comment>@teststep Select none</comment>
            <ProcedureCall id="_1lCb"
                           procedure="check.analysis.statistics_dialog.checked.select_none"/>
            <IfSequence id="_1lCc"
                        test="&#34;$(select_none)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pZo"
                             procedure="do_click.analysis.statistics.select_none"/>
            </IfSequence>
            <ProcedureCall id="_1lCe"
                           procedure="check.analysis.statistics_dialog.checked.select_none_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lCN" name="useAutoAccuracy">
            <comment>@teststep Select 'Auto accuracy'</comment>
            <ProcedureCall id="_1lCf"
                           procedure="check.analysis.statistics_dialog.checked.auto_accuracy"/>
            <IfSequence id="_1lCg"
                        test="&#34;$(auto_accuracy)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pZr"
                             procedure="do_click.analysis.statistics.auto_accuracy"/>
            </IfSequence>
            <ProcedureCall id="_1lCi"
                           procedure="check.analysis.statistics_dialog.checked.auto_accuracy_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1pbK" name="correlative_plot">
          <Procedure id="_1pbM" name="use_ROI_mask">
            <comment>@teststep Select 'Use ROI mask(s)</comment>
            <ProcedureCall id="_1pbN"
                           procedure="check.analysis.correlative_plot.checked.use_ROI_mask"/>
            <IfSequence id="_1pbO"
                        test="&#34;$(use_ROI_mask)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pbP"
                             procedure="do_click.analysis.correlative_plot.use_ROI_mask"/>
            </IfSequence>
            <ProcedureCall id="_1pbQ"
                           procedure="check.analysis.correlative_plot.checked.use_ROI_mask_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pbR" name="mask">
            <variable name="mask"/>
            <comment>@teststep Select $(mask) mask</comment>
            <TryStep id="_1rOj">
              <ProcedureCall id="_1rOk"
                             procedure="select.analysis.dialog.mask">
                <variable name="mask">$(mask)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rOl"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.roiMask"
                                event="MOUSE_MPRC" id="_1pgV" modifiers="16"
                                x="68" y="11"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_roiMask2_correlative_plot.mask"
                                event="MOUSE_MPRC" id="_1pgW" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pg+" name="point_data_source">
            <variable name="data_source"/>
            <comment>@teststep Select $(data_source) mask</comment>
            <TryStep id="_1rRd">
              <ProcedureCall id="_1rRc"
                             procedure="select.analysis.correlative_plot.auto_min_max_x"/>
              <CatchSequence exception="TestException" id="_1rRe"
                             maxerror="0">
                <TryStep id="_1rRg">
                  <ProcedureCall id="_1rRf"
                                 procedure="do_click.analysis.dialog.switch_to_chart_button"/>
                  <CatchSequence exception="TestException" id="_1rRh"
                                 maxerror="0"/>
                </TryStep>
              </CatchSequence>
            </TryStep>
            <TryStep id="_1rQs">
              <ProcedureCall id="_1rQr"
                             procedure="select.analysis.dialog.point_data_source">
                <variable name="data_source">$(data_source)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rQt"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.pointDataSource"
                                event="MOUSE_MPRC" id="_1pg-" modifiers="16"
                                x="52" y="8"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_pointDataSource.data_source"
                                event="MOUSE_MPRC" id="_1ph0" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1ph1" name="data_field">
            <variable name="data_field"/>
            <comment>@teststep Select $(data_field) mask</comment>
            <TryStep id="_1rQu">
              <ProcedureCall id="_1rQz"
                             procedure="select.analysis.dialog.data_field">
                <variable name="data_field">$(data_field)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rQw"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.dataField"
                                event="MOUSE_MPRC" id="_1pgL" modifiers="16"
                                x="44" y="8"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_dataField.data_field"
                                event="MOUSE_MPRC" id="_1pgM" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1ph4" name="auto_min_max_x">
            <comment>@teststep Select 'auto min/max' x.</comment>
            <ProcedureCall id="_1ph5"
                           procedure="check.analysis.correlative_plot.checked.auto_min_max_x"/>
            <IfSequence id="_1ph6"
                        test="&#34;$(auto_min_max_x)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1ph7"
                             procedure="do_click.analysis.correlative_plot.x_auto_min_max"/>
            </IfSequence>
            <ProcedureCall id="_1ph8"
                           procedure="check.analysis.correlative_plot.checked.auto_min_max_x_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1ph9" name="auto_min_max_y">
            <comment>@teststep Select 'auto min/max' y.</comment>
            <ProcedureCall id="_1phA"
                           procedure="check.analysis.correlative_plot.checked.auto_min_max_y"/>
            <IfSequence id="_1phB"
                        test="&#34;$(auto_min_max_y)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1phC"
                             procedure="do_click.analysis.correlative_plot.y_auto_min_max"/>
            </IfSequence>
            <ProcedureCall id="_1phD"
                           procedure="check.analysis.correlative_plot.checked.auto_min_max_y_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1phE" name="log_scaled_x">
            <comment>@teststep Select 'Log10 scaled x'.</comment>
            <ProcedureCall id="_1phF"
                           procedure="check.analysis.correlative_plot.checked.x_axis_log_scaled"/>
            <IfSequence id="_1phG"
                        test="&#34;$(x_axis_log_scaled)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1phH"
                             procedure="do_click.analysis.correlative_plot.x_axis_log_scaled"/>
            </IfSequence>
            <ProcedureCall id="_1phI"
                           procedure="check.analysis.correlative_plot.checked.x_axis_log_scaled_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1phJ" name="log_scaled_y">
            <comment>@teststep Select 'Log10 scaled y'.</comment>
            <ProcedureCall id="_1phK"
                           procedure="check.analysis.correlative_plot.checked.y_axis_log_scaled"/>
            <IfSequence id="_1phL"
                        test="&#34;$(y_axis_log_scaled)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1phM"
                             procedure="do_click.analysis.correlative_plot.y_axis_log_scaled"/>
            </IfSequence>
            <ProcedureCall id="_1phN"
                           procedure="check.analysis.correlative_plot.checked.y_axis_log_scaled_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1phO" name="show_tolerance_range">
            <comment>@teststep Select 'Show tolerance range'.</comment>
            <ProcedureCall id="_1phP"
                           procedure="check.analysis.correlative_plot.checked.show_tolerance_range"/>
            <IfSequence id="_1phQ"
                        test="&#34;$(show_tolerance_range)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1phR"
                             procedure="do_click.analysis.correlative_plot.show_tolerance_range"/>
            </IfSequence>
            <ProcedureCall id="_1phS"
                           procedure="check.analysis.correlative_plot.checked.show_tolerance_range_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1phT" name="show_regression_line">
            <comment>@teststep Select 'Show regression line'.</comment>
            <ProcedureCall id="_1phU"
                           procedure="check.analysis.correlative_plot.checked.show_regression_line"/>
            <IfSequence id="_1phV"
                        test="&#34;$(show_regression_line)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1phW"
                             procedure="do_click.analysis.correlative_plot.show_regression_line"/>
            </IfSequence>
            <ProcedureCall id="_1phX"
                           procedure="check.analysis.correlative_plot.checked.show_regression_line_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1pbJ" name="profile_plot"/>
        <Package id="_1pbL" name="scatter_plot">
          <Procedure id="_1px7" name="use_ROI_mask">
            <comment>@teststep Select 'Use ROI mask(s)'.</comment>
            <ProcedureCall id="_1pxx"
                           procedure="check.analysis.scatter_plot.enabled.use_ROI_mask"/>
            <IfSequence id="_1pxy"
                        test="&#34;$(use_ROI_mask_enabled)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1px8"
                             procedure="check.analysis.scatter_plot.checked.use_ROI_mask"/>
              <IfSequence id="_1px9"
                          test="&#34;$(use_ROI_mask)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1pxA"
                               procedure="do_click.analysis.scatter_plot.use_ROI_mask"/>
              </IfSequence>
              <ProcedureCall id="_1pxB"
                             procedure="check.analysis.scatter_plot.checked.use_ROI_mask_selected_status">
                <variable name="selected">true</variable>
              </ProcedureCall>
              <ElseSequence id="_1pxz">
                <ProcedureCall id="_1px+" procedure="run-log.logError">
                  <variable name="message">'Use ROI mask(s)' checkbox is disabled</variable>
                  <variable name="withScreenshots">true</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1pxC" name="mask">
            <variable name="mask"/>
            <comment>@teststep Select $(mask) mask</comment>
            <TryStep id="_1rNW">
              <ProcedureCall id="_1rOe"
                             procedure="select.analysis.dialog.mask">
                <variable name="mask">$(mask)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rNX"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.roiMask"
                                event="MOUSE_MPRC" id="_1pxD" modifiers="16"
                                x="68" y="11"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_roiMask3.scatter_plot.mask"
                                event="MOUSE_MPRC" id="_1puh" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pxF" name="x_product">
            <variable name="x_product"/>
            <comment>@teststep Select x product.</comment>
            <TryStep id="_1rNY">
              <ProcedureCall id="_1rOf"
                             procedure="select.analysis.dialog.x_product">
                <variable name="x_product">$(x_product)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rNZ"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.xProduct"
                                event="MOUSE_MPRC" id="_1pul" modifiers="16"
                                x="101" y="11"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_xProduct.scatter_plot"
                                event="MOUSE_MPRC" id="_1pum" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pxV" name="y_product">
            <variable name="y_product"/>
            <comment>@teststep Select y product.</comment>
            <TryStep id="_1rNa">
              <ProcedureCall id="_1rOg"
                             procedure="select.analysis.dialog.y_product">
                <variable name="y_product">$(y_product)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rNb"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.yProduct"
                                event="MOUSE_MPRC" id="_1pur" modifiers="16"
                                x="82" y="12"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_yProduct.scatter_plot"
                                event="MOUSE_MPRC" id="_1pus" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pxY" name="x_band">
            <variable name="x_band"/>
            <comment>@teststep Select x band.</comment>
            <TryStep id="_1rNL">
              <ProcedureCall id="_1rOh"
                             procedure="select.analysis.dialog.x_band">
                <variable name="x_band">$(x_band)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rNM"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.xBand"
                                event="MOUSE_MPRC" id="_1rNN" modifiers="16"
                                x="47" y="11"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_xBand.scatter_plot"
                                event="MOUSE_MPRC" id="_1rNO" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pxe" name="y_band">
            <variable name="y_band"/>
            <comment>@teststep Select y band.</comment>
            <TryStep id="_1rNc">
              <ProcedureCall id="_1rOi"
                             procedure="select.analysis.dialog.y_band">
                <variable name="y_band">$(y_band)</variable>
              </ProcedureCall>
              <CatchSequence exception="TestException" id="_1rNd"
                             maxerror="0">
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.yBand"
                                event="MOUSE_MPRC" id="_1put" modifiers="16"
                                x="72" y="11"/>
                <MouseEventStep clicks="1" client="$(client)"
                                component="NbMainWindow.listInvokerName:_yBand.scatter_plot"
                                event="MOUSE_MPRC" id="_1puu" modifiers="16"/>
              </CatchSequence>
            </TryStep>
          </Procedure>
          <Procedure id="_1pxI" name="invert_plot_colors">
            <comment>@teststep Select invert plot colors</comment>
            <ProcedureCall id="_1pxh"
                           procedure="check.analysis.scatter_plot.enabled.invert_plot_colors"/>
            <IfSequence id="_1pxu"
                        test="&#34;$(invert_plot_colors_enabled)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pxt"
                             procedure="check.analysis.scatter_plot.checked.invert_plot_colors"/>
              <IfSequence id="_1pxi"
                          test="&#34;$(invert_plot_colors)&#34;==&#34;false&#34;">
                <ProcedureCall id="_1pxj"
                               procedure="do_click.analysis.scatter_plot.invert_plot_colors"/>
              </IfSequence>
              <ProcedureCall id="_1pxk"
                             procedure="check.analysis.scatter_plot.checked.invert_plot_colors_selected_status">
                <variable name="selected">true</variable>
              </ProcedureCall>
              <ElseSequence id="_1pxv">
                <ProcedureCall id="_1pxw" procedure="run-log.logError">
                  <variable name="message">'Invert plot colors' checkbox is disabled</variable>
                  <variable name="withScreenshots">true</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1pxL" name="auto_min_max_x">
            <comment>@teststep Select 'auto min/max' x.</comment>
            <ProcedureCall id="_1pxp"
                           procedure="check.analysis.scatter_plot.checked.auto_min_max_x"/>
            <IfSequence id="_1pxq"
                        test="&#34;$(auto_min_max_x)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pxr"
                             procedure="do_click.analysis.scatter_plot.x_auto_min_max"/>
            </IfSequence>
            <ProcedureCall id="_1pxs"
                           procedure="check.analysis.scatter_plot.checked.auto_min_max_x_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pxQ" name="auto_min_max_y">
            <comment>@teststep Select 'auto min/max' y.</comment>
            <ProcedureCall id="_1pxl"
                           procedure="check.analysis.scatter_plot.checked.auto_min_max_y"/>
            <IfSequence id="_1pxm"
                        test="&#34;$(auto_min_max_y)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1pxn"
                             procedure="do_click.analysis.scatter_plot.y_auto_min_max"/>
            </IfSequence>
            <ProcedureCall id="_1pxo"
                           procedure="check.analysis.scatter_plot.checked.auto_min_max_y_selected_status">
              <variable name="selected">true</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1rNe" name="dialog">
          <Procedure id="_1rR4" name="mask_statistic">
            <variable name="mask"/>
            <comment>@teststep Select $(mask) mask</comment>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.Content_displayer.listFilter_mask"
                            event="MOUSE_MPRC" id="_1rRK" modifiers="16"/>
          </Procedure>
          <Procedure id="_1rNo" name="mask">
            <variable name="mask"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.roiMask" event="MOUSE_MPRC"
                            id="_1rNq" modifiers="16" x="28" y="13"/>
            <IfSequence id="_58D" test="${qftest:windows}">
              <MouseEventStep clicks="1" client="$(client)"
                              component="dialog.listInvokerName:_roiMask.scatter_plot_mask"
                              event="MOUSE_MPRC" id="_1rNr" modifiers="16"/>
              <ElseifSequence id="_1l3m" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
              <ElseSequence id="_58I">
                <MouseEventStep clicks="1" client="$(client)"
                                component="roiMask" event="MOUSE_MPRC"
                                id="_1riP" modifiers="16" x="28" y="12"/>
                <CheckStringStep checktype="value" client="$(client)"
                                 component="roiMask" id="_1riO">
                  <text>coastline</text>
                </CheckStringStep>
                <BasicSequence id="_1riM" name="Aufnahme 20.07.16 14:54">
                  <CheckBooleanStep checktype="checked" client="$(client)"
                                    component="useRoiMask" id="_1riN"
                                    state="false"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="roiMask" event="MOUSE_MPRC"
                                  id="_1riQ" modifiers="16" x="41" y="10"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="useRoiMask" event="MOUSE_MPRC"
                                  id="_1riR" modifiers="16"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="roiMask" event="MOUSE_MPRC"
                                  id="_1riS" modifiers="16" x="22" y="10"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="listInvokerName:_roiMask@land"
                                  event="MOUSE_MPRC" id="_1riT"
                                  modifiers="16"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="boxSize.textBox_size:"
                                  event="MOUSE_MPRC" id="_1riU" modifiers="16"
                                  x="28" y="10"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="pointDataSource"
                                  event="MOUSE_MPRC" id="_1riV" modifiers="16"
                                  x="48" y="13"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="listInvokerName:_pointDataSource@ground_control_points"
                                  event="MOUSE_MPRC" id="_1riW"
                                  modifiers="16"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="dataField" event="MOUSE_MPRC"
                                  id="_1riX" modifiers="16" x="32" y="4"/>
                  <MouseEventStep clicks="1" client="$(client)"
                                  component="listInvokerName:_dataField&amp;0"
                                  event="MOUSE_MPRC" id="_1riY"
                                  modifiers="16"/>
                </BasicSequence>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1rNv" name="x_product">
            <variable name="x_product"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.xProduct" event="MOUSE_MPRC"
                            id="_1rNx" modifiers="16" x="120" y="11"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.listInvokerName:_xProduct.scatter_plot"
                            event="MOUSE_MPRC" id="_1rNy" modifiers="16"/>
          </Procedure>
          <Procedure id="_1rO0" name="y_product">
            <variable name="y_product"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.yProduct" event="MOUSE_MPRC"
                            id="_1rO2" modifiers="16" x="69" y="10"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.listInvokerName:_yProduct.scatter_plot"
                            event="MOUSE_MPRC" id="_1rO3" modifiers="16"/>
          </Procedure>
          <Procedure id="_1rO7" name="x_band">
            <variable name="x_band"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.xBand" event="MOUSE_MPRC"
                            id="_1rO9" modifiers="16" x="93" y="6"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.listInvokerName:_xBand_scatter_plot"
                            event="MOUSE_MPRC" id="_1rOA" modifiers="16"/>
          </Procedure>
          <Procedure id="_1rOE" name="y_band">
            <variable name="y_band"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.yBand" event="MOUSE_MPRC"
                            id="_1rOG" modifiers="16" x="58" y="10"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.listInvokerName:_yBand.scatter_plot"
                            event="MOUSE_MPRC" id="_1rOH" modifiers="16"/>
          </Procedure>
          <Procedure id="_1rOo" name="point_data_source">
            <variable name="data_source"/>
            <comment>@teststep Select $(data_source) mask</comment>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.pointDataSource"
                            event="MOUSE_MPRC" id="_1rOp" modifiers="16"
                            x="52" y="8"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.listInvokerName:_pointDataSource.data_source"
                            event="MOUSE_MPRC" id="_1rQq" modifiers="16"/>
          </Procedure>
          <Procedure id="_1rOr" name="data_field">
            <variable name="data_field"/>
            <comment>@teststep Select $(data_field) mask</comment>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.dataField" event="MOUSE_MPRC"
                            id="_1rOs" modifiers="16" x="44" y="8"/>
            <MouseEventStep clicks="1" client="$(client)"
                            component="dialog.listInvokerName:_dataField.data_field"
                            event="MOUSE_MPRC" id="_1rQp" modifiers="16"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1rVR" name="subset_tool">
        <Procedure id="_1rfo" name="select_none_band">
          <comment>@teststep Check in 'Select none'.</comment>
          <ProcedureCall id="_1rh1"
                         procedure="check.subset_tool.checked.select_none_band"/>
          <IfSequence id="_1rhA"
                      test="&#34;$(select_none_band)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rh3"
                           procedure="do_click.subset_tool.check_box_select_none_band"/>
          </IfSequence>
          <ProcedureCall id="_1rhB"
                         procedure="check.subset_tool.checked.select_none_band_selection">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1rf+" name="select_all_band">
          <comment>@teststep Check in 'Select all'.</comment>
          <ProcedureCall id="_1rh2"
                         procedure="check.subset_tool.checked.select_all_band"/>
          <IfSequence id="_1rhF"
                      test="&#34;$(select_all_band)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rhG"
                           procedure="do_click.subset_tool.check_box_select_all_band"/>
          </IfSequence>
          <ProcedureCall id="_1rhC"
                         procedure="check.subset_tool.checked.select_all_band_selection">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1rgA" name="select_none">
          <comment>@teststep Check in 'Select none'.</comment>
          <ProcedureCall id="_1rh8"
                         procedure="check.subset_tool.checked.select_none"/>
          <IfSequence id="_1rhH"
                      test="&#34;$(select_none)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rhI"
                           procedure="do_click.subset_tool.check_box_select_none"/>
          </IfSequence>
          <ProcedureCall id="_1rhD"
                         procedure="check.subset_tool.checked.select_none_selection">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
        <Procedure id="_1rgM" name="select_all">
          <comment>@teststep Check in 'Select all'.</comment>
          <ProcedureCall id="_1rh9"
                         procedure="check.subset_tool.checked.select_all"/>
          <IfSequence id="_1rhJ"
                      test="&#34;$(select_all)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rhK"
                           procedure="do_click.subset_tool.check_box_select_all"/>
          </IfSequence>
          <ProcedureCall id="_1rhE"
                         procedure="check.subset_tool.checked.select_all_selection">
            <variable name="selected">true</variable>
          </ProcedureCall>
        </Procedure>
      </Package>
      <Package disabled="true" id="_6" name="uncertainty_visualisation">
        <Procedure id="_1l6w" name="less_options">
          <comment>@teststep select 'Less Options'</comment>
          <ProcedureCall id="_1l6x"
                         procedure="set.variable.more_less_options"/>
          <ProcedureCall id="_1l6y" procedure="get.more_less_options_label"/>
          <IfSequence id="_1l6z"
                      test="&#34;$(options_label)&#34;&lt;&gt;&#34;$(less_options)&#34;">
            <ProcedureCall id="_1l6+"
                           procedure="do_click.uncertainty_visualisation.more_options"/>
          </IfSequence>
        </Procedure>
        <Procedure id="_1l6r" name="more_options">
          <comment>@teststep select 'More Options'</comment>
          <ProcedureCall id="_1l6s"
                         procedure="set.variable.more_less_options"/>
          <ProcedureCall id="_1l6t" procedure="get.more_less_options_label"/>
          <IfSequence id="_1l6v"
                      test="&#34;$(options_label)&#34;&lt;&gt;&#34;$(more_options)&#34;">
            <ProcedureCall id="_1l6u"
                           procedure="do_click.uncertainty_visualisation.more_options"/>
          </IfSequence>
        </Procedure>
        <Procedure id="_1l7f" name="visualisation_mode">
          <variable name="visualisation_mode"/>
          <comment>Transparency_Blending
Monochromatic_Blending
Polychromatic_Blending
Polychromatic_Overlay
None</comment>
          <TryStep id="_1l7m">
            <ProcedureCall id="_1l7l"
                           procedure="select.uncertainty_visualisation.visualisation_mode_help">
              <variable name="visualisation_mode">$(visualisation_mode)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1l7n" maxerror="0">
              <TryStep id="_1l7o">
                <ProcedureCall id="_1l7p"
                               procedure="select.uncertainty_visualisation.visualisation_mode_help">
                  <variable name="visualisation_mode">$(visualisation_mode)</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1l7q"
                               maxerror="0">
                  <ServerScriptStep id="_2q5" name="error">
                    <code>rc.logError("'$(visualisation_mode)' can not be selected!")</code>
                  </ServerScriptStep>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1l7i" name="visualisation_mode_help">
          <variable name="visualisation_mode"/>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1oQ5" name="deselect">
      <Package id="_1pZs" name="analysis">
        <Package id="_1pay" name="histogram_dialog">
          <Procedure id="_1paz" name="use_ROI_mask">
            <comment>@teststep Deselect 'Use ROI mask(s)</comment>
            <ProcedureCall id="_1pa+"
                           procedure="check.analysis.histogram_dialog.checked.use_ROI_mask"/>
            <IfSequence id="_1pa-"
                        test="&#34;$(use_ROI_mask)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pb0"
                             procedure="do_click.analysis.histogram.use_ROI_mask"/>
            </IfSequence>
            <ProcedureCall id="_1pb1"
                           procedure="check.analysis.histogram_dialog.checked.use_ROI_mask_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1pZt" name="statistics_dialog">
          <Procedure id="_1lCk" name="use_ROI_mask">
            <comment>@teststep Deselect 'Use ROI mask(s)</comment>
            <ProcedureCall id="_1lCl"
                           procedure="check.analysis.statistics_dialog.checked.use_ROI_mask"/>
            <IfSequence id="_1lCm"
                        test="&#34;$(use_ROI_mask)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pZk"
                             procedure="do_click.analysis.statistics.use_ROI_mask"/>
            </IfSequence>
            <ProcedureCall id="_1lCo"
                           procedure="check.analysis.statistics_dialog.checked.use_ROI_mask_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lCq" name="select_all">
            <comment>@teststep Deselect 'Select all'.</comment>
            <ProcedureCall id="_1lCr"
                           procedure="check.analysis.statistics_dialog.checked.select_all"/>
            <IfSequence id="_1lCs"
                        test="&#34;$(select_all)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pZl"
                             procedure="do_click.analysis.statistics.select_all"/>
            </IfSequence>
            <ProcedureCall id="_1lCu"
                           procedure="check.analysis.statistics_dialog.checked.select_all_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lCv" name="select_none">
            <comment>@teststep Deselect 'Select none'.</comment>
            <ProcedureCall id="_1lCw"
                           procedure="check.analysis.statistics_dialog.checked.select_none"/>
            <IfSequence id="_1lCx"
                        test="&#34;$(select_none)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pZp"
                             procedure="do_click.analysis.statistics.select_none"/>
            </IfSequence>
            <ProcedureCall id="_1lCz"
                           procedure="check.analysis.statistics_dialog.checked.select_none_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1lC+" name="useAutoAccuracy">
            <comment>@teststep Deselect 'Auto accuracy'</comment>
            <ProcedureCall id="_1lC-"
                           procedure="check.analysis.statistics_dialog.checked.auto_accuracy"/>
            <IfSequence id="_1lD0"
                        test="&#34;$(auto_accuracy)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pZq"
                             procedure="do_click.analysis.statistics.auto_accuracy"/>
            </IfSequence>
            <ProcedureCall id="_1lD2"
                           procedure="check.analysis.statistics_dialog.checked.auto_accuracy_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1phY" name="correlative_plot">
          <Procedure id="_1phZ" name="use_ROI_mask">
            <comment>@teststep Select 'Use ROI mask(s)</comment>
            <ProcedureCall id="_1pha"
                           procedure="check.analysis.correlative_plot.checked.use_ROI_mask"/>
            <IfSequence id="_1phb"
                        test="&#34;$(use_ROI_mask)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1phc"
                             procedure="do_click.analysis.correlative_plot.use_ROI_mask"/>
            </IfSequence>
            <ProcedureCall id="_1phd"
                           procedure="check.analysis.correlative_plot.checked.use_ROI_mask_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1phn" name="auto_min_max_x">
            <comment>@teststep Select 'auto min/max' x.</comment>
            <ProcedureCall id="_1pho"
                           procedure="check.analysis.correlative_plot.checked.auto_min_max_x"/>
            <IfSequence id="_1php"
                        test="&#34;$(auto_min_max_x)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1phq"
                             procedure="do_click.analysis.correlative_plot.x_auto_min_max"/>
            </IfSequence>
            <ProcedureCall id="_1phr"
                           procedure="check.analysis.correlative_plot.checked.auto_min_max_x_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1phs" name="auto_min_max_y">
            <comment>@teststep Select 'auto min/max' y.</comment>
            <ProcedureCall id="_1pht"
                           procedure="check.analysis.correlative_plot.checked.auto_min_max_y"/>
            <IfSequence id="_1phu"
                        test="&#34;$(auto_min_max_y)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1phv"
                             procedure="do_click.analysis.correlative_plot.y_auto_min_max"/>
            </IfSequence>
            <ProcedureCall id="_1phw"
                           procedure="check.analysis.correlative_plot.checked.auto_min_max_y_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1phx" name="log_scaled_x">
            <comment>@teststep Select 'Log10 scaled x'.</comment>
            <ProcedureCall id="_1phy"
                           procedure="check.analysis.correlative_plot.checked.x_axis_log_scaled"/>
            <IfSequence id="_1phz"
                        test="&#34;$(x_axis_log_scaled)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1ph+"
                             procedure="do_click.analysis.correlative_plot.x_axis_log_scaled"/>
            </IfSequence>
            <ProcedureCall id="_1ph-"
                           procedure="check.analysis.correlative_plot.checked.x_axis_log_scaled_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pi0" name="log_scaled_y">
            <comment>@teststep Select 'Log10 scaled y'.</comment>
            <ProcedureCall id="_1pi1"
                           procedure="check.analysis.correlative_plot.checked.y_axis_log_scaled"/>
            <IfSequence id="_1pi2"
                        test="&#34;$(y_axis_log_scaled)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pi3"
                             procedure="do_click.analysis.correlative_plot.y_axis_log_scaled"/>
            </IfSequence>
            <ProcedureCall id="_1pi4"
                           procedure="check.analysis.correlative_plot.checked.y_axis_log_scaled_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pi5" name="show_tolerance_range">
            <comment>@teststep Select 'Show tolerance range'.</comment>
            <ProcedureCall id="_1pi6"
                           procedure="check.analysis.correlative_plot.checked.show_tolerance_range"/>
            <IfSequence id="_1pi7"
                        test="&#34;$(show_tolerance_range)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pi8"
                             procedure="do_click.analysis.correlative_plot.show_tolerance_range"/>
            </IfSequence>
            <ProcedureCall id="_1pi9"
                           procedure="check.analysis.correlative_plot.checked.show_tolerance_range_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1piA" name="show_regression_line">
            <comment>@teststep Select 'Show regression line'.</comment>
            <ProcedureCall id="_1piB"
                           procedure="check.analysis.correlative_plot.checked.show_regression_line"/>
            <IfSequence id="_1piC"
                        test="&#34;$(show_regression_line)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1piD"
                             procedure="do_click.analysis.correlative_plot.show_regression_line"/>
            </IfSequence>
            <ProcedureCall id="_1piE"
                           procedure="check.analysis.correlative_plot.checked.show_regression_line_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
        <Package id="_1piF" name="profile_plot"/>
        <Package id="_1px-" name="scatter_plot">
          <Procedure id="_1py0" name="use_ROI_mask">
            <comment>@teststep Select 'Use ROI mask(s)'.</comment>
            <ProcedureCall id="_1py1"
                           procedure="check.analysis.scatter_plot.enabled.use_ROI_mask"/>
            <IfSequence id="_1py2"
                        test="&#34;$(use_ROI_mask_enabled)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1py3"
                             procedure="check.analysis.scatter_plot.checked.use_ROI_mask"/>
              <IfSequence id="_1py4"
                          test="&#34;$(use_ROI_mask)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1py5"
                               procedure="do_click.analysis.scatter_plot.use_ROI_mask"/>
              </IfSequence>
              <ProcedureCall id="_1py6"
                             procedure="check.analysis.scatter_plot.checked.use_ROI_mask_selected_status">
                <variable name="selected">false</variable>
              </ProcedureCall>
              <ElseSequence id="_1py7">
                <ProcedureCall id="_1py8" procedure="run-log.logError">
                  <variable name="message">'Use ROI mask(s)' checkbox is disabled</variable>
                  <variable name="withScreenshots">true</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1pyO" name="invert_plot_colors">
            <comment>@teststep Select invert plot colors</comment>
            <ProcedureCall id="_1pyP"
                           procedure="check.analysis.scatter_plot.enabled.invert_plot_colors"/>
            <IfSequence id="_1pyQ"
                        test="&#34;$(invert_plot_colors_enabled)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pyR"
                             procedure="check.analysis.scatter_plot.checked.invert_plot_colors"/>
              <IfSequence id="_1pyS"
                          test="&#34;$(invert_plot_colors)&#34;==&#34;true&#34;">
                <ProcedureCall id="_1pyT"
                               procedure="do_click.analysis.scatter_plot.invert_plot_colors"/>
              </IfSequence>
              <ProcedureCall id="_1pyU"
                             procedure="check.analysis.scatter_plot.checked.invert_plot_colors_selected_status">
                <variable name="selected">false</variable>
              </ProcedureCall>
              <ElseSequence id="_1pyV">
                <ProcedureCall id="_1pyW" procedure="run-log.logError">
                  <variable name="message">'Invert plot colors' checkbox is disabled</variable>
                  <variable name="withScreenshots">true</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </Procedure>
          <Procedure id="_1pyX" name="auto_min_max_x">
            <comment>@teststep Select 'auto min/max' x.</comment>
            <ProcedureCall id="_1pyY"
                           procedure="check.analysis.scatter_plot.checked.auto_min_max_x"/>
            <IfSequence id="_1pyZ"
                        test="&#34;$(auto_min_max_x)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pya"
                             procedure="do_click.analysis.scatter_plot.x_auto_min_max"/>
            </IfSequence>
            <ProcedureCall id="_1pyb"
                           procedure="check.analysis.scatter_plot.checked.auto_min_max_x_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1pyc" name="auto_min_max_y">
            <comment>@teststep Select 'auto min/max' y.</comment>
            <ProcedureCall id="_1pyd"
                           procedure="check.analysis.scatter_plot.checked.auto_min_max_y"/>
            <IfSequence id="_1pye"
                        test="&#34;$(auto_min_max_y)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1pyf"
                             procedure="do_click.analysis.scatter_plot.y_auto_min_max"/>
            </IfSequence>
            <ProcedureCall id="_1pyg"
                           procedure="check.analysis.scatter_plot.checked.auto_min_max_y_selected_status">
              <variable name="selected">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1oQ6" name="tools">
        <Package id="_1oQ7" name="bandMaths">
          <Procedure id="_1oQ8" name="saveExpressionOnly">
            <comment>@teststep Deselect 'Virtual (save expression only)' .</comment>
            <ProcedureCall id="_1oQ9"
                           procedure="check.tools.bandMaths.saveExpressionOnly_selected"/>
            <IfSequence id="_1oQA"
                        test="&#34;$(saveExpressionOnly_selected)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1oQB"
                             procedure="do_click.tools.bandMaths.saveExpressionOnly"/>
            </IfSequence>
            <ProcedureCall id="_1oQC"
                           procedure="check.tools.bandMaths.saveExpressionOnly_selected_status">
              <variable name="sel_status">false</variable>
            </ProcedureCall>
          </Procedure>
          <Procedure id="_1oQD" name="noDataValueUsed_selected">
            <comment>@teststep Deselect 'Replace NaN and infinity results'.</comment>
            <ProcedureCall id="_1oQE"
                           procedure="check.tools.bandMaths.noDataValueUsed_selected"/>
            <IfSequence id="_1oQF"
                        test="&#34;$(noDataValueUsed_selected)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1oQG"
                             procedure="do_click.tools.bandMaths.noDataValueUsed_selected"/>
            </IfSequence>
            <ProcedureCall id="_1oQH"
                           procedure="check.tools.bandMaths.noDataValueUsed_selected_status">
              <variable name="sel_status">false</variable>
            </ProcedureCall>
          </Procedure>
        </Package>
      </Package>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <IfSequence id="_1op7" test="${qftest:windows}">
      <ElseifSequence id="_1op8" name="MAC?"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
      <ElseSequence id="_1op9"/>
    </IfSequence>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
