<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.11">
  <include>qfs.qft</include>
  <include>snap_components.qft</include>
  <include>snap_main.qft</include>
  <dependency>snap_check.qft</dependency>
  <dependency>snap_main.qft</dependency>
  <dependency>snap_workflow.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1lB5" name="get">
      <Package id="_1oaU" name="navigation">
        <Procedure id="_1ocE" name="zoom_factor">
          <comment>@teststep Get zoom factor.</comment>
          <FetchTextStep client="$(client)"
                         component="NbMainWindow.Content_displayer.text2"
                         id="_1ocG" varname="zoom_factor"/>
        </Procedure>
      </Package>
      <Package id="_1pjq" name="tree">
        <Procedure id="_2JAh" name="get_index_of_node_help">
          <variable name="id"/>
          <variable name="node"/>
          <variable name="nodeSeparator">@</variable>
          <variable name="linear">false</variable>
          <comment>Return the current index of a given node.

Sample usage:
Can be used to determine the numeric index of a node like '/Root/Price'.

@param id  		ID of the tree.
@param node 		The node. like '/Root/Price' or '/0/0'.
@param nodeSeparator 	Separator to use for the node syntax. Default is @ for text values, also available &amp; for index and % for regexp.
@param linear		If true, return the linear index, ignoring the tree structure, otherwise return a hierarchical index like /0/1.
@return	index   The current index of the node, which has been read by the 'Fetch Index' node of QF-Test.

@author QFS,mm
@since 3.1.1

@ignoreanalyzerefcid</comment>
          <TryStep id="_2JAi" name="override option">
            <ClientScriptStep client="$(client)"
                              engine="${default:guiengine:awt}" id="_2JAj"
                              name="set legacy option">
              <code>rc.setOption("LegacyFetchIndex", rc.getBool("linear"))</code>
            </ClientScriptStep>
            <FetchIndexStep client="$(client)"
                            component="$(id)$(nodeSeparator)$(node)"
                            id="_2JAk" local="true" varname="index"/>
            <SetGlobalStep id="_2JDr" varname="product_id">
              <default>$(index)</default>
            </SetGlobalStep>
            <ReturnStep id="_2JAl" retval="$(index)"/>
            <CatchSequence exception="TestException" id="_2JDw" maxerror="0">
              <SetGlobalStep id="_2JDy" varname="product_id"/>
            </CatchSequence>
            <FinallySequence id="_2JAm" name="reset option">
              <ClientScriptStep client="$(client)"
                                engine="${default:guiengine:awt}" id="_2JAn"
                                name="unset legacy option">
                <code>rc.unsetOption("LegacyFetchIndex")</code>
              </ClientScriptStep>
              <ServerScriptStep disabled="true" id="_2JSb" name="print">
                <code>print "**** !!!  product_id  = $(product_id)"</code>
              </ServerScriptStep>
            </FinallySequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1l37" name="bands_node_id">
          <variable name="prod_id"/>
          <SetGlobalStep id="_1oRe" varname="bands_group">
            <default>true</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1l39" varname="nd">
            <default>0</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1l3K" varname="nn0">
            <default>Bands</default>
          </SetGlobalStep>
          <IfSequence id="_1oz0" test="${qftest:windows}">
            <FetchTextStep client="$(client)"
                           component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                           id="_1l3A" varname="nn"/>
            <ElseifSequence id="_1oz1" name="MAC?"
                            test="'${system:os.name}' .find('Mac OS X')&gt;=0">
              <FetchTextStep client="$(client)"
                             component="Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                             id="_1oz4" varname="nn"/>
            </ElseifSequence>
            <ElseSequence id="_1oz2">
              <FetchTextStep client="$(client)"
                             component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                             id="_1ptM" varname="nn"/>
              <FetchTextStep client="$(client)"
                             component="Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                             disabled="true" id="_1oz3" varname="nn"/>
            </ElseSequence>
          </IfSequence>
          <WhileSequence id="_1l3B"
                         test="&#34;$(nn)&#34;&lt;&gt;&#34;$(nn0)&#34;">
            <ServerScriptStep disabled="true" id="_1l3O" name="print">
              <code>print "Node = $(nn)"  </code>
            </ServerScriptStep>
            <ServerScriptStep disabled="true" id="_1oaV" name="print">
              <code>print "Node Index = $(nd)"  </code>
            </ServerScriptStep>
            <ServerScriptStep id="_1l3S" name="set_variable_increase_on_1">
              <code>v = $(nd)+ 1   
rc.setGlobal("nd", v)                       </code>
            </ServerScriptStep>
            <TryStep id="_1l3C">
              <IfSequence id="_1oz5" test="${qftest:windows}">
                <FetchTextStep client="$(client)"
                               component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                               id="_1ozB" varname="nn"/>
                <ElseifSequence id="_1oz7" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                  <FetchTextStep client="$(client)"
                                 component="Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                                 id="_1l3U" varname="nn"/>
                </ElseifSequence>
                <ElseSequence id="_1oz9">
                  <FetchTextStep client="$(client)"
                                 component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                                 id="_1ptN" varname="nn"/>
                  <FetchTextStep client="$(client)"
                                 component="Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                                 disabled="true" id="_1ozC" varname="nn"/>
                </ElseSequence>
              </IfSequence>
              <ServerScriptStep disabled="true" id="_1oaT" name="print">
                <code>print "nn = $(nn)"  </code>
              </ServerScriptStep>
              <CatchSequence exception="TestException" id="_1l3H"
                             maxerror="0">
                <SetGlobalStep id="_1l3V" varname="nd">
                  <default>0</default>
                </SetGlobalStep>
                <SetGlobalStep id="_1oRd" varname="bands_group">
                  <default>false</default>
                </SetGlobalStep>
                <ServerScriptStep disabled="true" id="_1l3L" name="error">
                  <code>rc.logError("'Bands' node can not be found.")</code>
                </ServerScriptStep>
                <BreakStep id="_1l3J"/>
              </CatchSequence>
            </TryStep>
            <ServerScriptStep disabled="true" id="_1oaW" name="print">
              <code>print "Node = $(nn)"  </code>
            </ServerScriptStep>
            <ServerScriptStep disabled="true" id="_1oaX" name="print">
              <code>print "Node Index = $(nd)"  </code>
            </ServerScriptStep>
          </WhileSequence>
          <SetGlobalStep id="_1l3N" varname="bands_node_id">
            <default>$(nd)</default>
          </SetGlobalStep>
          <ServerScriptStep disabled="true" id="_1l3Q" name="print">
            <code>print "bands_node_id = $(bands_node_id)"  </code>
          </ServerScriptStep>
          <ServerScriptStep disabled="true" id="_1oaY" name="print">
            <code>print "bands_group = $(bands_group)"  </code>
          </ServerScriptStep>
        </Procedure>
        <Procedure id="_1oyf" name="vector_data_node_id">
          <variable name="prod_id"/>
          <SetGlobalStep id="_1oyg" varname="vector_data">
            <default>true</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1oyh" varname="nd">
            <default>0</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1oyi" varname="nn0">
            <default>Vector Data</default>
          </SetGlobalStep>
          <FetchTextStep client="$(client)"
                         component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                         id="_1oyj" varname="nn"/>
          <WhileSequence id="_1oyk"
                         test="&#34;$(nn)&#34;&lt;&gt;&#34;$(nn0)&#34;">
            <ServerScriptStep disabled="true" id="_1oyl" name="print">
              <code>print "Node = $(nn)"  </code>
            </ServerScriptStep>
            <ServerScriptStep disabled="true" id="_1oym" name="print">
              <code>print "Node Index = $(nd)"  </code>
            </ServerScriptStep>
            <ServerScriptStep id="_1oyn" name="set_variable_increase_on_1">
              <code>v = $(nd)+ 1   
rc.setGlobal("nd", v)                       </code>
            </ServerScriptStep>
            <TryStep id="_1oyo">
              <FetchTextStep client="$(client)"
                             component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                             id="_1oyp" varname="nn"/>
              <ServerScriptStep disabled="true" id="_1oyq" name="print">
                <code>print "nn = $(nn)"  </code>
              </ServerScriptStep>
              <CatchSequence exception="TestException" id="_1oyr"
                             maxerror="0">
                <SetGlobalStep id="_1oys" varname="nd">
                  <default>0</default>
                </SetGlobalStep>
                <SetGlobalStep id="_1oy-" varname="vector_data">
                  <default>false</default>
                </SetGlobalStep>
                <ServerScriptStep disabled="true" id="_1oyu" name="error">
                  <code>rc.logError("'Bands' node can not be found.")</code>
                </ServerScriptStep>
                <BreakStep id="_1oyv"/>
              </CatchSequence>
            </TryStep>
            <ServerScriptStep disabled="true" id="_1oyw" name="print">
              <code>print "Node = $(nn)"  </code>
            </ServerScriptStep>
            <ServerScriptStep disabled="true" id="_1oyx" name="print">
              <code>print "Node Index = $(nd)"  </code>
            </ServerScriptStep>
          </WhileSequence>
          <SetGlobalStep id="_1oyy" varname="vector_data_node_id">
            <default>$(nd)</default>
          </SetGlobalStep>
          <ServerScriptStep disabled="true" id="_1oyz" name="print">
            <code>print "bands_node_id = $(vector_data_node_id)"  </code>
          </ServerScriptStep>
          <ServerScriptStep disabled="true" id="_1oy+" name="print">
            <code>print "vector_data = $(vector_data)"  </code>
          </ServerScriptStep>
        </Procedure>
        <Procedure id="_1jvQ" name="get_index_of_node">
          <variable name="node"/>
          <variable name="nodeSeparator">@</variable>
          <variable name="linear">false</variable>
          <comment>Return the current index of a given node.</comment>
          <ServerScriptStep disabled="true" id="_1oRb" name="print">
            <code>print "node = $(node)"</code>
          </ServerScriptStep>
          <ProcedureCall id="_1r3k"
                         procedure="set.product_explorer_tree_component_id"/>
          <ProcedureCall disabled="true" id="_1oRc" procedure="tree.expand">
            <variable name="tree_id">$(id)&amp;/0</variable>
          </ProcedureCall>
          <TryStep id="_1l8Q" name="override option">
            <ClientScriptStep client="$(client)"
                              engine="${default:guiengine:awt}" id="_1l8U"
                              name="set legacy option">
              <code>rc.setOption("LegacyFetchIndex", rc.getBool("linear"))</code>
            </ClientScriptStep>
            <FetchIndexStep client="$(client)"
                            component="$(product_explorer_tree_component_id)$(nodeSeparator)$(node)"
                            id="_1mKM" local="true" varname="index"/>
            <SetGlobalStep id="_1oTf" varname="new_band_id">
              <default>$(index)</default>
            </SetGlobalStep>
            <ServerScriptStep disabled="true" id="_1l5A" name="print">
              <code>print "$(new_band_id)"</code>
            </ServerScriptStep>
            <ReturnStep id="_1jvS" retval="$(index)"/>
            <CatchSequence exception="TestException" id="_1mKO" maxerror="0">
              <SetGlobalStep id="_1ptK" varname="new_band_id"/>
              <SetGlobalStep id="_1oRZ" varname="ifn">
                <default>bands_node_id_$(node)</default>
              </SetGlobalStep>
              <ServerScriptStep disabled="true" id="_1oRa" name="print">
                <code>print "$(ifn)"</code>
              </ServerScriptStep>
              <ProcedureCall id="_1oRY" procedure="run-log.make_screensot">
                <variable name="iw_name">$(ifn)</variable>
                <variable name="iw_name_example">error_dialog</variable>
              </ProcedureCall>
              <ProcedureCall id="_1oRX"
                             procedure="run-log.error_message.node_does_not_exist">
                <variable name="node_name">$(node)</variable>
              </ProcedureCall>
            </CatchSequence>
            <FinallySequence id="_1l8S" name="reset option">
              <ClientScriptStep client="$(client)"
                                engine="${default:guiengine:awt}" id="_1l8T"
                                name="Unset legacy option">
                <code>rc.unsetOption("LegacyFetchIndex")</code>
              </ClientScriptStep>
            </FinallySequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1rt2" name="get_test_product_id">
          <variable name="product"/>
          <ProcedureCall id="_2JSg"
                         procedure="set.product_explorer_tree_component_id"/>
          <SetGlobalStep id="_2JSh" local="true" varname="node">
            <default>[2] $(product)</default>
          </SetGlobalStep>
          <ServerScriptStep disabled="true" id="_2JTJ" name="print">
            <code>print "**** !!! node  = $(node)"</code>
          </ServerScriptStep>
          <ProcedureCall id="_2JSi"
                         procedure="get.tree.get_index_of_node_help">
            <variable name="id">$(product_explorer_tree_component_id)</variable>
            <variable name="node">$(node)</variable>
            <variable name="nodeSeparator">@</variable>
            <variable name="linear">false</variable>
          </ProcedureCall>
          <IfSequence id="_2JSj"
                      test="&#34;$(product_id)&#34;&lt;&gt;&#34;&#34;">
            <ServerScriptStep id="_2JSk" name="substring">
              <code>import string 
pn =  "$(product_id)"
rc.setGlobal("pid2", pn[1:])   
            </code>
            </ServerScriptStep>
            <SetGlobalStep id="_2JSl" varname="pid">
              <default>$(pid2)</default>
            </SetGlobalStep>
            <ElseSequence id="_2JSm">
              <SetGlobalStep id="_2JTT" local="true" varname="node">
                <default>$(product)</default>
              </SetGlobalStep>
              <ServerScriptStep disabled="true" id="_2JTL" name="print">
                <code>print "**** !!! node  = $(node)"</code>
              </ServerScriptStep>
              <ProcedureCall id="_2JSo"
                             procedure="get.tree.get_index_of_node_help">
                <variable name="id">$(product_explorer_tree_component_id)</variable>
                <variable name="node">$(node)</variable>
                <variable name="nodeSeparator">@</variable>
                <variable name="linear">false</variable>
              </ProcedureCall>
              <ServerScriptStep disabled="true" id="_2JSp" name="print">
                <code>print "****  product_id  = $(product_id)"</code>
              </ServerScriptStep>
              <IfSequence id="_2JSq"
                          test="&#34;$(product_id)&#34;&lt;&gt;&#34;&#34;">
                <ServerScriptStep id="_2JSr" name="substring">
                  <code>import string 
pn =  "$(product_id)"
rc.setGlobal("pid2", pn[1:])   
            </code>
                </ServerScriptStep>
                <SetGlobalStep id="_2JSs" varname="pid">
                  <default>$(pid2)</default>
                </SetGlobalStep>
                <ElseSequence id="_2JSt">
                  <SetGlobalStep id="_2JSn" local="true" varname="node">
                    <default>[3] $(product)</default>
                  </SetGlobalStep>
                  <ProcedureCall id="_2JSv"
                                 procedure="get.tree.get_index_of_node_help">
                    <variable name="id">$(product_explorer_tree_component_id)</variable>
                    <variable name="node">$(node)</variable>
                    <variable name="nodeSeparator">@</variable>
                    <variable name="linear">false</variable>
                  </ProcedureCall>
                  <IfSequence id="_2JSw"
                              test="&#34;$(product_id)&#34;&lt;&gt;&#34;&#34;">
                    <ServerScriptStep id="_2JSx" name="substring">
                      <code>import string 
pn =  "$(product_id)"
rc.setGlobal("pid2", pn[1:])   
            </code>
                    </ServerScriptStep>
                    <SetGlobalStep id="_2JSy" varname="pid">
                      <default>$(pid2)</default>
                    </SetGlobalStep>
                    <ElseSequence id="_2JSz">
                      <SetGlobalStep id="_2JTM" local="true" varname="node">
                        <default>[1] $(product)</default>
                      </SetGlobalStep>
                      <ProcedureCall id="_2JTN"
                                     procedure="get.tree.get_index_of_node_help">
                        <variable name="id">$(product_explorer_tree_component_id)</variable>
                        <variable name="node">$(node)</variable>
                        <variable name="nodeSeparator">@</variable>
                        <variable name="linear">false</variable>
                      </ProcedureCall>
                      <IfSequence id="_2JTO"
                                  test="&#34;$(product_id)&#34;&lt;&gt;&#34;&#34;">
                        <ServerScriptStep id="_2JTP" name="substring">
                          <code>import string 
pn =  "$(product_id)"
rc.setGlobal("pid2", pn[1:])   
            </code>
                        </ServerScriptStep>
                        <SetGlobalStep id="_2JTQ" varname="pid">
                          <default>$(pid2)</default>
                        </SetGlobalStep>
                        <ElseSequence id="_2JTR">
                          <SetGlobalStep id="_2JTS" varname="pid"/>
                        </ElseSequence>
                      </IfSequence>
                    </ElseSequence>
                  </IfSequence>
                </ElseSequence>
              </IfSequence>
            </ElseSequence>
          </IfSequence>
          <ServerScriptStep disabled="true" id="_2JTG" name="print">
            <code>print "**** !!! pid  = $(pid)"</code>
          </ServerScriptStep>
        </Procedure>
        <Procedure id="_1r3Q" name="get_index_of_band">
          <variable name="band_name"/>
          <variable name="nodeSeparator">@</variable>
          <variable name="linear">false</variable>
          <comment>Return the current index of a given node.</comment>
          <ProcedureCall id="_1r3j"
                         procedure="set.product_explorer_tree_component_id"/>
          <ProcedureCall id="_1r3i" procedure="qfs.swing.tree.getIndexOfNode">
            <variable name="id">$(product_explorer_tree_component_id)</variable>
            <variable name="node">$(band_name)</variable>
            <variable name="nodeSeparator">@</variable>
            <variable name="linear">false</variable>
          </ProcedureCall>
          <ServerScriptStep id="_1r3l" name="print">
            <code>print "node id = $(index)"</code>
          </ServerScriptStep>
          <ProcedureCall disabled="true" id="_1r3T" procedure="tree.expand">
            <variable name="tree_id">$(id)&amp;/0</variable>
          </ProcedureCall>
          <TryStep disabled="true" id="_1r3U" name="override option">
            <ClientScriptStep client="$(client)"
                              engine="${default:guiengine:awt}" id="_1r3V"
                              name="set legacy option">
              <code>rc.setOption("LegacyFetchIndex", rc.getBool("linear"))</code>
            </ClientScriptStep>
            <FetchIndexStep client="$(client)"
                            component="$(id)$(nodeSeparator)$(node)"
                            id="_1r3W" local="true" varname="index"/>
            <SetGlobalStep id="_1r3X" varname="new_band_id">
              <default>$(index)</default>
            </SetGlobalStep>
            <ServerScriptStep disabled="true" id="_1r3Y" name="print">
              <code>print "$(new_band_id)"</code>
            </ServerScriptStep>
            <ReturnStep id="_1r3Z" retval="$(index)"/>
            <CatchSequence exception="TestException" id="_1r3a" maxerror="0">
              <SetGlobalStep id="_1r3b" varname="new_band_id"/>
              <SetGlobalStep id="_1r3c" varname="ifn">
                <default>bands_node_id_$(node)</default>
              </SetGlobalStep>
              <ServerScriptStep disabled="true" id="_1r3d" name="print">
                <code>print "$(ifn)"</code>
              </ServerScriptStep>
              <ProcedureCall id="_1r3e" procedure="run-log.make_screensot">
                <variable name="iw_name">$(ifn)</variable>
                <variable name="iw_name_example">error_dialog</variable>
              </ProcedureCall>
              <ProcedureCall id="_1r3f"
                             procedure="run-log.error_message.node_does_not_exist">
                <variable name="node_name">$(node)</variable>
              </ProcedureCall>
            </CatchSequence>
            <FinallySequence id="_1r3g" name="reset option">
              <ClientScriptStep client="$(client)"
                                engine="${default:guiengine:awt}" id="_1r3h"
                                name="Unset legacy option">
                <code>rc.unsetOption("LegacyFetchIndex")</code>
              </ClientScriptStep>
            </FinallySequence>
          </TryStep>
        </Procedure>
        <Procedure id="_1jvR" name="metadata_node_id">
          <variable name="prod_id"/>
          <SetGlobalStep id="_1oRf" varname="metadata_group">
            <default>true</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1mJt" varname="nd">
            <default>0</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1mJu" varname="nn0">
            <default>Metadata</default>
          </SetGlobalStep>
          <FetchTextStep client="$(client)"
                         component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                         id="_1mJv" varname="nn"/>
          <WhileSequence id="_1mJw"
                         test="&#34;$(nn)&#34;&lt;&gt;&#34;$(nn0)&#34;">
            <ServerScriptStep disabled="true" id="_1mJx" name="print">
              <code>print "$(nn)"  </code>
            </ServerScriptStep>
            <ServerScriptStep id="_1mJy" name="set_variable_increase_on_1">
              <code>v = $(nd)+ 1   
rc.setGlobal("nd", v)                       </code>
            </ServerScriptStep>
            <TryStep id="_1mJz">
              <FetchTextStep client="$(client)"
                             component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                             id="_1mJ+" varname="nn"/>
              <CatchSequence exception="TestException" id="_1mJ-"
                             maxerror="0">
                <SetGlobalStep id="_1oRg" varname="metadata_group">
                  <default>false</default>
                </SetGlobalStep>
                <SetGlobalStep id="_1mK0" varname="nd">
                  <default>0</default>
                </SetGlobalStep>
                <ServerScriptStep disabled="true" id="_1mK1" name="error">
                  <code>rc.logError("'Metadata' node can not be found.")</code>
                </ServerScriptStep>
                <BreakStep id="_1mK2"/>
              </CatchSequence>
            </TryStep>
          </WhileSequence>
          <SetGlobalStep id="_1mK3" varname="metadata_node_id">
            <default>$(nd)</default>
          </SetGlobalStep>
          <ServerScriptStep disabled="true" id="_1mK4" name="print">
            <code>print "$(bands_node_number)"  </code>
          </ServerScriptStep>
        </Procedure>
        <Procedure id="_1lB6" name="layer_node_id">
          <variable name="layer_name"/>
          <SetGlobalStep id="_9VG" varname="idn">
            <default>0</default>
          </SetGlobalStep>
          <SetGlobalStep id="_Czp" varname="layer_node_found">
            <default>true</default>
          </SetGlobalStep>
          <SetGlobalStep id="_DgA" varname="layer_node_id">
            <default>0</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1pjm" varname="layer_node_id">
            <default>$(idn)</default>
          </SetGlobalStep>
          <TryStep id="_2JTV">
            <ComponentWaiter client="$(client)"
                             component="NbMainWindow.Content_displayer.treeTransparency:3&amp;/0"
                             id="_2JTU" timeout="10"/>
            <IfSequence id="_1pjK" test="${qftest:windows}">
              <FetchTextStep client="$(client)"
                             component="NbMainWindow.Content_displayer.treeTransparency:3&amp;/$(idn)"
                             id="_1pjL" varname="ln"/>
              <ElseifSequence id="_1pjM" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
              <ElseSequence id="_1pjO"/>
            </IfSequence>
            <IfSequence id="_1pjp"
                        test="&#34;$(ln)&#34;&lt;&gt;&#34;$(layer_name)&#34;">
              <WhileSequence id="_1pjQ"
                             test="&#34;$(ln)&#34;&lt;&gt;&#34;$(layer_name)&#34;">
                <ServerScriptStep id="_1pjT"
                                  name="set_variable_increase_on_1">
                  <code>v = $(idn)+ 1   
rc.setGlobal("idn", v)                       </code>
                </ServerScriptStep>
                <TryStep id="_1pjU">
                  <FetchTextStep client="$(client)"
                                 component="NbMainWindow.Content_displayer.treeTransparency:3&amp;/$(idn)"
                                 id="_1pjj" varname="ln"/>
                  <SetGlobalStep id="_1pjl" varname="layer_node_id">
                    <default>$(idn)</default>
                  </SetGlobalStep>
                  <ServerScriptStep disabled="true" id="_1pjk"
                                    name="set_layer_id">
                    <code>lidn1 = $(idn)
rc.setGlobal("layer_node_id", lidn1)                       </code>
                  </ServerScriptStep>
                  <IfSequence id="_1pjV" test="${qftest:windows}">
                    <ElseifSequence id="_1pjX" name="MAC?"
                                    test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
                    <ElseSequence id="_1pjZ"/>
                  </IfSequence>
                  <ServerScriptStep disabled="true" id="_1pjb" name="print">
                    <code>print "layer name = $(ln)"  </code>
                  </ServerScriptStep>
                  <CatchSequence exception="TestException" id="_1pjc"
                                 maxerror="0">
                    <SetGlobalStep id="_1pjd" varname="idn">
                      <default>0</default>
                    </SetGlobalStep>
                    <SetGlobalStep id="_1pje" varname="layer_node_found">
                      <default>false</default>
                    </SetGlobalStep>
                    <ServerScriptStep disabled="true" id="_1pjf" name="error">
                      <code>rc.logError("'Layer' node can not be found.")</code>
                    </ServerScriptStep>
                    <BreakStep id="_1pjg"/>
                  </CatchSequence>
                </TryStep>
              </WhileSequence>
              <ServerScriptStep disabled="true" id="_1pjh" name="print">
                <code>print "Layer = $(ln)"  </code>
              </ServerScriptStep>
              <ServerScriptStep disabled="true" id="_1pji" name="print">
                <code>print "Node Index = $(layer_node_id)"  </code>
              </ServerScriptStep>
            </IfSequence>
            <CatchSequence exception="TestException" id="_2JTW" maxerror="0">
              <ProcedureCall id="_2JTa" procedure="run-log.make_screensot">
                <variable name="iw_name">layer_manager</variable>
                <variable name="iw_name_example">error_dialog</variable>
              </ProcedureCall>
              <ProcedureCall id="_2JTb" procedure="run-log.logError">
                <variable name="message">Layer Manager is not appear</variable>
                <variable name="withScreenshots">true</variable>
              </ProcedureCall>
            </CatchSequence>
          </TryStep>
        </Procedure>
        <Procedure id="_3EP" name="rowCount">
          <variable name="id"/>
          <comment>Return rowCount
id	tableId
</comment>
          <ClientScriptStep client="$(client)" id="_3EQ">
            <code>table = rc.getComponent(rc.lookup("id"))

rowCount = table.getRowCount()

rc.setGlobal("rowCount", rowCount)</code>
          </ClientScriptStep>
        </Procedure>
        <Procedure id="_1rgI" name="rowCount_dialog">
          <variable name="id">tableId</variable>
          <comment>Return rowCount
id	tableId
</comment>
          <ClientScriptStep client="$(client)" id="_1rgJ">
            <code>table = rc.getComponent(rc.lookup("id"))

rowCount = table.getRowCount()

rc.setGlobal("rowCount", rowCount)</code>
          </ClientScriptStep>
        </Procedure>
      </Package>
      <Package id="_1ptO" name="error_text">
        <Procedure id="_1r3L" name="snap_error_open_product">
          <SetGlobalStep id="_1r3P" varname="open_product_error"/>
          <FetchTextStep client="$(client)"
                         component="dialogError.labelProduct" id="_1r3N"
                         varname="open_product_error"/>
        </Procedure>
        <Procedure id="_1r3m" name="message_in_dialog_SNAP_SNAP_Error">
          <FetchTextStep client="$(client)"
                         component="dialogSNAP_-_SNAP_-_Error.labelMessage"
                         id="_1r3n" varname="error_message"/>
        </Procedure>
        <Procedure id="_1rmM"
                   name="message_in_dialog_SNAP_Error_multi-size_subset">
          <IfSequence id="_1rmP" test="${qftest:windows}">
            <FetchTextStep client="$(client)"
                           component="dialogSNAP_-_Error.label_multi-size_subset"
                           id="_1rmQ" varname="snap_error"/>
            <ElseifSequence id="_1rmR" name="MAC?"
                            test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
            <ElseSequence id="_1rmS">
              <FetchTextStep client="$(client)"
                             component="dialogSNAP_-_Error.labelEither_the_selected_ROI_is_empty_or_no_pixels_have_been_found_within_the_minimum_and_maximum_values"
                             id="_1rmT" varname="snap_error"/>
            </ElseSequence>
          </IfSequence>
        </Procedure>
        <Procedure id="_1rmU" name="message_in_dialog_SNAP_Error">
          <IfSequence id="_1rmV" test="${qftest:windows}">
            <FetchTextStep client="$(client)"
                           component="dialogSNAP_-_Error.labelMessage"
                           id="_1rmW" varname="snap_error"/>
            <ElseifSequence id="_1rmX" name="MAC?"
                            test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
            <ElseSequence id="_1rmY">
              <FetchTextStep client="$(client)"
                             component="dialogSNAP_-_Error.labelEither_the_selected_ROI_is_empty_or_no_pixels_have_been_found_within_the_minimum_and_maximum_values"
                             id="_1rmZ" varname="snap_error"/>
            </ElseSequence>
          </IfSequence>
        </Procedure>
        <Procedure id="_1ptP" name="snap_error">
          <IfSequence id="_1rgE" test="${qftest:windows}">
            <FetchTextStep client="$(client)"
                           component="dialogSNAP_-_Error.labelEither_the_selected_ROI_is_empty_or_no_pixels_have_been_found_within_the_minimum_and_maximum_values"
                           id="_1qak" varname="snap_error"/>
            <ElseifSequence id="_1rgF" name="MAC?"
                            test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
            <ElseSequence id="_1rgG">
              <FetchTextStep client="$(client)"
                             component="dialogSNAP_-_Error.labelEither_the_selected_ROI_is_empty_or_no_pixels_have_been_found_within_the_minimum_and_maximum_values"
                             id="_1rgH" varname="snap_error"/>
            </ElseSequence>
          </IfSequence>
        </Procedure>
      </Package>
      <Package id="_1r3o" name="subset_tool">
        <Procedure id="_1r3p" name="the_first_band_name">
          <FetchTextStep client="$(client)"
                         component="dialogSpecify_Product_Subset.checkEV_1KM_RefSB_8"
                         id="_1rcz" varname="band_for_subset"/>
        </Procedure>
      </Package>
      <Package id="_1pZj" name="analysis">
        <Package id="_1pab" name="histogram_dialog"/>
        <Package id="_1l8t" name="statistics_dialog"/>
        <Package id="_1pbK" name="correlative_plot"/>
        <Package id="_1pbJ" name="profile_plot"/>
        <Package id="_1pbL" name="scatter_plot"/>
        <Package id="_1rNe" name="dialog">
          <Procedure id="_1rQ+" name="selected_mask">
            <variable name="mask"/>
            <comment>@teststep Check_selected mask</comment>
            <TryStep id="_1rQ-">
              <FetchTextStep client="$(client)" component="dialog.roiMask"
                             id="_1rjq" varname="selected_mask"/>
              <CatchSequence exception="TestException" id="_1rR1"
                             maxerror="0"/>
            </TryStep>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1rma" name="mask_manager">
        <Procedure id="_1rmb" name="number_of_masks">
          <comment>@teststep Get number of masks.</comment>
          <ProcedureCall id="_1rt1" procedure="variables.mask_manager"/>
          <TryStep id="_1qe8">
            <ProcedureCall id="_1qe9" procedure="get.tree.rowCount">
              <variable name="id">$(table2)</variable>
              <comment>@teststep Get number of masks.</comment>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_1qeA" maxerror="0">
              <TryStep id="_1riP">
                <ProcedureCall id="_1riQ" procedure="get.tree.rowCount">
                  <variable name="id">$(table)</variable>
                  <comment>@teststep Get number of masks.</comment>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1riR"
                               maxerror="0">
                  <SetGlobalStep id="_1riS" varname="rowCount">
                    <default>0</default>
                  </SetGlobalStep>
                </CatchSequence>
              </TryStep>
            </CatchSequence>
          </TryStep>
        </Procedure>
      </Package>
      <Procedure id="_1oaR" name="text_error_dialog_SNAP_Open_Product">
        <IfSequence id="_1oya" test="${qftest:windows}">
          <FetchTextStep client="$(client)"
                         component="dialogSNAP_-_Open_Product.labelGeoTiff_imageReader_not_found"
                         id="_1oaS" varname="error_text"/>
          <ElseifSequence id="_1oyb" name="MAC?"
                          test="'${system:os.name}' .find('Mac OS X')&gt;=0">
            <FetchTextStep client="$(client)"
                           component="labelNo_appropriate_product_reader_found."
                           id="_1oyd" varname="error_text"/>
          </ElseifSequence>
          <ElseSequence id="_1oyc">
            <FetchTextStep client="$(client)"
                           component="labelNo_appropriate_product_reader_found."
                           id="_1oye" varname="error_text"/>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure disabled="true" id="_1mK5"
                 name="additional_metadata_node_id">
        <variable name="prod_id"/>
        <variable name="metadata_name"/>
        <ProcedureCall id="_1mKK" procedure="get.tree.metadata_node_id">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <SetGlobalStep id="_1mK6" varname="nd">
          <default>0</default>
        </SetGlobalStep>
        <SetGlobalStep id="_1mK7" varname="nn0">
          <default>$(metadata_name)</default>
        </SetGlobalStep>
        <FetchTextStep client="$(client)"
                       component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(metadata_node_id)/$(nd)"
                       id="_1mK8" varname="nn"/>
        <WhileSequence id="_1mK9"
                       test="&#34;$(nn)&#34;&lt;&gt;&#34;$(nn0)&#34;">
          <ServerScriptStep disabled="true" id="_1mKA" name="print">
            <code>print "$(nn)"  </code>
          </ServerScriptStep>
          <ServerScriptStep id="_1mKB" name="set_variable_increase_on_1">
            <code>v = $(nd)+ 1   
rc.setGlobal("nd", v)                       </code>
          </ServerScriptStep>
          <TryStep id="_1mKC">
            <FetchTextStep client="$(client)"
                           component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(metadata_node_id)/$(nd)"
                           id="_1mKL" varname="nn"/>
            <CatchSequence exception="TestException" id="_1mKE" maxerror="0">
              <SetGlobalStep id="_1mKF" varname="nd">
                <default>0</default>
              </SetGlobalStep>
              <ServerScriptStep id="_1mKG" name="error">
                <code>rc.logError("'Metadata' node can not be found.")</code>
              </ServerScriptStep>
              <BreakStep id="_1mKH"/>
            </CatchSequence>
          </TryStep>
        </WhileSequence>
        <SetGlobalStep id="_1mKI" varname="additional_metadata_node_id">
          <default>$(nd)</default>
        </SetGlobalStep>
        <ServerScriptStep disabled="true" id="_1mKJ" name="print">
          <code>print "$(bands_node_number)"  </code>
        </ServerScriptStep>
      </Procedure>
      <Procedure disabled="true" id="_1l4C" name="file_nr_in_the_folder">
        <variable name="file_name"/>
        <SetGlobalStep id="_1l4L" varname="fnr">
          <default>0</default>
        </SetGlobalStep>
        <FetchTextStep client="$(client)"
                       component="dialogESA_S-3_Toolbox_-_Open_Data_Product(s).tableFile:@Name&amp;$(fnr)"
                       id="_1l4K" varname="fn"/>
        <WhileSequence id="_1l4O"
                       test="&#34;$(fn)&#34;&lt;&gt;&#34;$(file_name)&#34;">
          <ServerScriptStep id="_1l4P" name="print">
            <code>print "$(fn)"  </code>
          </ServerScriptStep>
          <ServerScriptStep id="_1l4Q" name="set_variable_increase_on_1">
            <code>v = $(fnr)+ 1   
rc.setGlobal("fnr", v)                       </code>
          </ServerScriptStep>
          <TryStep id="_1l4R">
            <FetchTextStep client="$(client)"
                           component="dialogESA_S-3_Toolbox_-_Open_Data_Product(s).tableFile:@Name&amp;$(fnr)"
                           id="_1l4Z" varname="fn"/>
            <CatchSequence exception="TestException" id="_1l4T" maxerror="0">
              <SetGlobalStep id="_1l4a" varname="fnr">
                <default>0</default>
              </SetGlobalStep>
              <ServerScriptStep id="_1l4V" name="error">
                <code>rc.logError("There is no '$(file_name)' in this folder.")</code>
              </ServerScriptStep>
              <BreakStep id="_1l4W"/>
            </CatchSequence>
          </TryStep>
        </WhileSequence>
        <SetGlobalStep id="_1l4X" varname="file_nr_in_the_folder">
          <default>$(fnr)</default>
        </SetGlobalStep>
        <ServerScriptStep id="_1l4Y" name="print">
          <code>print "$(file_nr_in_the_folder)"  </code>
        </ServerScriptStep>
      </Procedure>
      <Procedure disabled="true" id="_1l6p" name="more_less_options_label">
        <FetchTextStep client="$(client)"
                       component="mainFrameESA_S-3_Toolbox.labelMore_Options"
                       id="_1l6q" varname="options_label"/>
      </Procedure>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <IfSequence id="_1op7" test="${qftest:windows}">
      <ElseifSequence id="_1op8" name="MAC?"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
      <ElseSequence id="_1op9"/>
    </IfSequence>
    <Procedure disabled="true" id="_1oTg" name="band_id">
      <variable name="prod_id"/>
      <variable name="band"/>
      <SetGlobalStep id="_1oTi" varname="nd">
        <default>0</default>
      </SetGlobalStep>
      <SetGlobalStep id="_1oTj" varname="nn0">
        <default>$(band)</default>
      </SetGlobalStep>
      <FetchTextStep client="$(client)"
                     component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                     id="_1oTk" varname="nn"/>
      <WhileSequence id="_1oTl"
                     test="&#34;$(nn)&#34;&lt;&gt;&#34;$(nn0)&#34;">
        <ServerScriptStep disabled="true" id="_1oTm" name="print">
          <code>print "$(nn)"  </code>
        </ServerScriptStep>
        <ServerScriptStep id="_1oTn" name="set_variable_increase_on_1">
          <code>v = $(nd)+ 1   
rc.setGlobal("nd", v)                       </code>
        </ServerScriptStep>
        <TryStep id="_1oTo">
          <FetchTextStep client="$(client)"
                         component="NbMainWindow.Product_Explorer.tree&amp;/$(prod_id)/$(nd)"
                         id="_1oTp" varname="nn"/>
          <CatchSequence exception="TestException" id="_1oTq" maxerror="0">
            <SetGlobalStep id="_1oTr" varname="nd">
              <default>0</default>
            </SetGlobalStep>
            <ServerScriptStep disabled="true" id="_1oTt" name="error">
              <code>rc.logError("'Bands' node can not be found.")</code>
            </ServerScriptStep>
            <BreakStep id="_1oTu"/>
          </CatchSequence>
        </TryStep>
      </WhileSequence>
      <SetGlobalStep id="_1oTv" varname="band_id">
        <default>$(nd)</default>
      </SetGlobalStep>
      <ServerScriptStep disabled="true" id="_1oTw" name="print">
        <code>print "$(bands_node_id)"  </code>
      </ServerScriptStep>
    </Procedure>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
