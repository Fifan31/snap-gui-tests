<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.4">
  <include>qfs.qft</include>
  <include>../lib/snap_main.qft</include>
  <include>../lib/snap_components.qft</include>
  <dependency>001_aquarius.qft</dependency>
  <dependency>001_asar.qft</dependency>
  <dependency>001_atsr.qft</dependency>
  <dependency>001_avnir2.qft</dependency>
  <dependency>001_chris.qft</dependency>
  <dependency>001_dimap.qft</dependency>
  <dependency>001_envi_reader.qft</dependency>
  <dependency>001_envisat.qft</dependency>
  <dependency>001_ers_atsr.qft</dependency>
  <dependency>001_ers_sar.qft</dependency>
  <dependency>001_geotiff.qft</dependency>
  <dependency>001_hdf_eos_gridded.qft</dependency>
  <dependency>001_hico_envi_format.qft</dependency>
  <dependency>001_landsat_geotiff.qft</dependency>
  <dependency>001_landsat_tm.qft</dependency>
  <dependency>001_modis_MOD_MXD_MYD.qft</dependency>
  <dependency>001_modisL1B.qft</dependency>
  <dependency>001_multispectral_binned_SeaDAS.qft</dependency>
  <dependency>001_netCdf_beam.qft</dependency>
  <dependency>001_netCdf_cf.qft</dependency>
  <dependency>001_netCdf_generic.qft</dependency>
  <dependency>001_noaa_avhrr_3_L1b.qft</dependency>
  <dependency>001_prism.qft</dependency>
  <dependency>001_seaDAS_L1.qft</dependency>
  <dependency>001_seaDAS_L2.qft</dependency>
  <dependency>001_seaDAS_L3.qft</dependency>
  <dependency>001_sentinel3.qft</dependency>
  <dependency>001_smos.qft</dependency>
  <dependency>001_spot_vgt.qft</dependency>
  <dependency>001_viirs.qft</dependency>
  <PackageRoot id="_3">
    <Procedure id="_6" name="test_import">
      <variable name="prod_reader_type"/>
      <TestStep id="_1rZH" name="import_data_product">
        <ProcedureCall id="_1rZD"
                       procedure="qfs.swing.cleanup.closeAllModalDialogs">
          <variable name="maxDialogs">5</variable>
        </ProcedureCall>
        <ProcedureCall id="_C" procedure="import.raster_data">
          <variable name="import_data">$(prod_reader_type)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1lEu"
                       procedure="utility.open_image_view_check_it"/>
      </TestStep>
      <IfSequence id="_1lF9" name="get_geo_coordinates"
                  test="&#34;$(processing)&#34;==&#34;true&#34;">
        <ProcedureCall id="_1lF0"
                       procedure="placemark.utility_sequences.get_lat_and_long_values_for_pin_pos_x_y">
          <variable name="x">200</variable>
          <variable name="y">200</variable>
        </ProcedureCall>
        <TestStep id="_1rZ2" name="set_geo_coordinates">
          <SetGlobalStep id="_1rZ3" varname="north_latitude">
            <default>$(latitude)</default>
          </SetGlobalStep>
          <SetGlobalStep id="_1rZ4" varname="west_longitude">
            <default>$(longitude)</default>
          </SetGlobalStep>
          <IfSequence id="_1rZI"
                      test="&#34;$(north_latitude)&#34;&lt;&gt;&#34;NaN&#34; and &#34;$(west_longitude)&#34;&lt;&gt;&#34;NaN&#34;">
            <ServerScriptStep id="_1rZ5" name="south_latitude">
              <code>vl = $(north_latitude)
vl = vl - 10   
rc.setGlobal("south_latitude", vl)                       </code>
            </ServerScriptStep>
            <ServerScriptStep id="_1rZ6" name="east_longitude">
              <code>vl = $(west_longitude)
vl = vl + 10   
rc.setGlobal("east_longitude", vl)                       </code>
            </ServerScriptStep>
            <SetGlobalStep id="_1rZJ" varname="geo_coding">
              <default>true</default>
            </SetGlobalStep>
            <ElseSequence id="_1rZK">
              <SetGlobalStep id="_1rZL" varname="geo_coding">
                <default>false</default>
              </SetGlobalStep>
            </ElseSequence>
          </IfSequence>
          <BasicSequence disabled="true" id="_1rZ7" name="print">
            <ServerScriptStep id="_1rZ8" name="print">
              <code>print "north_lat = $(north_latitude)"  </code>
            </ServerScriptStep>
            <ServerScriptStep id="_1rZ9" name="print">
              <code>print "west_lon = $(west_longitude)"  </code>
            </ServerScriptStep>
            <ServerScriptStep id="_1rZA" name="print">
              <code>print "south_lat = $(south_latitude)"  </code>
            </ServerScriptStep>
            <ServerScriptStep id="_1rZB" name="print">
              <code>print "east_lon = $(east_longitude)"  </code>
            </ServerScriptStep>
          </BasicSequence>
        </TestStep>
        <ProcedureCall id="_1rYZ"
                       procedure="placemark.new_pin.do_click.cancel_button"/>
      </IfSequence>
      <ProcedureCall id="_1lEz" procedure="close.all_products"/>
      <TestStep id="_1rZE" name="import_subset">
        <IfSequence id="_1lE-" test="&#34;$(processing)&#34;==&#34;true&#34;">
          <TestStep id="_1lF7"
                    name="import_band_and_spatial_subset_according_pixel_pos">
            <ProcedureCall id="_1rZF"
                           procedure="qfs.swing.cleanup.closeAllModalDialogs">
              <variable name="maxDialogs">5</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lE+"
                           procedure="import.spatial_subset_according_to_pixel_position">
              <variable name="import_data">$(prod_reader_type)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1rZO"
                           procedure="utility.check_imported_subset_in_SNAP"/>
            <ProcedureCall id="_1lEv" procedure="close.all_products"/>
          </TestStep>
          <TestStep id="_1lF8"
                    name="import_band_and_spatial_subset_according_geo_pos">
            <IfSequence id="_1rZM"
                        test="&#34;$(geo_coding)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1rZG"
                             procedure="qfs.swing.cleanup.closeAllModalDialogs">
                <variable name="maxDialogs">5</variable>
              </ProcedureCall>
              <ProcedureCall id="_1lF1"
                             procedure="import.spatial_subset_according_to_geo_position">
                <variable name="import_data">$(prod_reader_type)</variable>
              </ProcedureCall>
              <ProcedureCall id="_1rZC"
                             procedure="utility.check_imported_subset_in_SNAP"/>
              <ProcedureCall id="_1lF3" procedure="close.all_products"/>
            </IfSequence>
          </TestStep>
        </IfSequence>
      </TestStep>
    </Procedure>
  </PackageRoot>
  <ExtraSequence id="_4"/>
  <WindowList id="_5"/>
</RootStep>
