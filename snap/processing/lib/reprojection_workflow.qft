<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.4">
  <include>qfs.qft</include>
  <include>processing_main.qft</include>
  <include>processing_components.qft</include>
  <dependency>processing_main.qft</dependency>
  <variable name="output_folder">reprojection</variable>
  <PackageRoot id="_3">
    <Dependency id="_1php" name="start_application_for_reprojection">
      <DependencyReference id="_1pO-"
                           reference="start_application_for_processing">
        <variable name="output_dir">$(output_folder)</variable>
      </DependencyReference>
    </Dependency>
    <Package id="_1pdI" name="test_sequence">
      <Procedure id="_1ph2" name="reprojection_check_target_product">
        <SetGlobalStep id="_1ph7" varname="output_file">
          <default>reproj_test</default>
        </SetGlobalStep>
        <SetGlobalStep id="_1pxw" varname="output_format">
          <default>BEAM-DIMAP</default>
        </SetGlobalStep>
        <ProcedureCall id="_1pi6"
                       procedure="qfs.swing.cleanup.closeAllModalDialogs">
          <variable name="maxDialogs">5</variable>
        </ProcedureCall>
        <ProcedureCall id="_1oXV" procedure="check.product.not_opened"/>
        <IfSequence id="_1oXW"
                    test="&#34;$(not_opened)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1pi7" procedure="close.all_products"/>
        </IfSequence>
        <IfSequence id="_1phi" test="&#34;$(processing)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1ph3" procedure="test_sequence.preparation_io">
            <variable name="prod_dir">$(dataInDir)</variable>
            <variable name="prod_name">$(fileName)</variable>
            <variable name="output_file">$(output_file)</variable>
          </ProcedureCall>
          <IfSequence id="_1phl"
                      test="&#34;$(source_product_opened)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1phG"
                           procedure="test_sequence.preparation_geo_lat_long"/>
            <ProcedureCall id="_1phF" procedure="utility.run_reprojection"/>
            <ProcedureCall id="_1r3P"
                           procedure="test_events.imaging_tools.open_image_window_in_target_product_check_masks_layers"/>
            <ProcedureCall id="_1phM"
                           procedure="test_sequence.preparation_utm_automatic"/>
            <ProcedureCall id="_1phN" procedure="utility.run_reprojection"/>
            <ProcedureCall id="_1r3Q"
                           procedure="test_events.imaging_tools.open_image_window_in_target_product_check_masks_layers"/>
          </IfSequence>
          <ElseifSequence id="_1pi8"
                          test="&#34;$(processing)&#34;==&#34;geo&#34;">
            <ProcedureCall id="_1pi9"
                           procedure="test_sequence.preparation_io">
              <variable name="prod_dir">$(dataInDir)</variable>
              <variable name="prod_name">$(fileName)</variable>
              <variable name="output_file">$(output_file)</variable>
            </ProcedureCall>
            <IfSequence id="_1piA"
                        test="&#34;$(source_product_opened)&#34;==&#34;true&#34;">
              <ProcedureCall id="_1piB"
                             procedure="test_sequence.preparation_geo_lat_long"/>
              <ProcedureCall id="_1piC" procedure="utility.run_reprojection"/>
              <ProcedureCall id="_1r3R"
                             procedure="test_events.imaging_tools.open_image_window_in_target_product_check_masks_layers"/>
            </IfSequence>
          </ElseifSequence>
        </IfSequence>
        <ProcedureCall disabled="true" id="_1piH"
                       procedure="close_processing_tool.geometric_operations.reprojection"/>
      </Procedure>
      <Procedure id="_1pdL" name="preparation_io">
        <variable name="prod_dir"/>
        <variable name="prod_name"/>
        <variable name="output_file"/>
        <ProcedureCall id="_1phv"
                       procedure="open.raster.geometric_operations.reprojection"/>
        <ProcedureCall id="_1pgy" procedure="select_io_tab"/>
        <ProcedureCall id="_1pg-" procedure="utility.open_source_product">
          <variable name="prod_dir">$(prod_dir)</variable>
          <variable name="prod_name">$(prod_name)</variable>
        </ProcedureCall>
        <IfSequence id="_1pk9"
                    test="&#34;$(source_product_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1pgp"
                         procedure="set.reprojection.target_directory">
            <variable name="dir">$(output_folder)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1pj0" procedure="select.reprojection.save_as"/>
          <ProcedureCall id="_1pj1"
                         procedure="select.reprojection.output_format">
            <variable name="output_format">BEAM-DIMAP</variable>
          </ProcedureCall>
          <ProcedureCall id="_1pj2"
                         procedure="select.reprojection.open_in_snap"/>
          <ProcedureCall id="_1pbb"
                         procedure="set.reprojection.target_product_name">
            <variable name="target_product_name">$(output_file)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1pbc"
                         procedure="deselect.reprojection.save_as"/>
        </IfSequence>
      </Procedure>
      <Procedure id="_1phb" name="preparation_reproj_parameters">
        <ProcedureCall id="_1phc"
                       procedure="select_projection_parameters_tab"/>
        <ProcedureCall id="_1phd"
                       procedure="set.default_parameters.geodetic_datum_default"/>
        <ProcedureCall id="_1phe"
                       procedure="select.reprojection.geodetic_datum">
          <variable name="geodetic_datum">$(geodetic_datum_default)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1phf"
                       procedure="select.reprojection.resampling_method">
          <variable name="resampling_method">Nearest</variable>
        </ProcedureCall>
      </Procedure>
      <Procedure id="_1pdJ" name="preparation_geo_lat_long">
        <ProcedureCall id="_1phg"
                       procedure="test_sequence.preparation_reproj_parameters"/>
        <ProcedureCall id="_1phX"
                       procedure="set.default_parameters.geo_lat_lon_projection"/>
        <ProcedureCall id="_1pgg" procedure="select.reprojection.projection">
          <variable name="projection">$(geo_lat_lon_projection)</variable>
        </ProcedureCall>
      </Procedure>
      <Procedure id="_1pdK" name="preparation_utm_automatic">
        <ProcedureCall id="_1pho"
                       procedure="test_sequence.preparation_reproj_parameters"/>
        <ProcedureCall id="_1phY"
                       procedure="set.default_parameters.utm_automatic"/>
        <ProcedureCall id="_1phK" procedure="select.reprojection.projection">
          <variable name="projection">$(utm_automatic)</variable>
        </ProcedureCall>
      </Procedure>
    </Package>
    <Package id="_1pjn" name="projection_parameters_dialog"/>
    <Package id="_1r3Z" name="utility">
      <Procedure id="_1r3w" name="handle_error_help">
        <ProcedureCall id="_1r3y"
                       procedure="wait.appear.error.dialog_SNAP_SNAP_Error"/>
        <ProcedureCall id="_1r3z" procedure="run-log.make_screensot">
          <variable name="iw_name">error_dialog_SNAP_SNAP_Error</variable>
          <variable name="iw_name_example">error_dialog</variable>
        </ProcedureCall>
        <TryStep id="_1r3+" name="get_error_text">
          <SetGlobalStep id="_1r3-" varname="error_message"/>
          <ProcedureCall id="_1r40"
                         procedure="get.error_text.message_in_dialog_SNAP_SNAP_Error"/>
          <CatchSequence exception="TestException" id="_1r41" maxerror="0"/>
        </TryStep>
        <ProcedureCall id="_1r42"
                       procedure="do_click.error_dialog.button_OK_SNAP_SNAP_Error"/>
        <ProcedureCall disabled="true" id="_1r43"
                       procedure="set.variable.client_snap"/>
        <ProcedureCall disabled="true" id="_1r44"
                       procedure="run-log.log_client_output">
          <variable name="client_name">$(client)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1r45"
                       procedure="run-log.error_message.error_dialog_appears">
          <variable name="dialog">SNAP_SNAP_Error $(error_message) </variable>
        </ProcedureCall>
      </Procedure>
      <Procedure id="_1r3a" name="handle_errors">
        <TryStep id="_1r3c">
          <ProcedureCall id="_1r4F" procedure="utility.handle_error_help"/>
          <CatchSequence exception="TestException" id="_1r3n" maxerror="0"/>
        </TryStep>
        <TryStep id="_1r3o">
          <ProcedureCall id="_1r4G" procedure="utility.handle_error_help"/>
          <CatchSequence exception="TestException" id="_1r3u" maxerror="0"/>
        </TryStep>
        <ProcedureCall id="_1r3v"
                       procedure="qfs.swing.cleanup.closeAllModalDialogs">
          <variable name="maxDialogs">5</variable>
        </ProcedureCall>
      </Procedure>
      <Procedure id="_1pMT" name="open_source_product">
        <variable name="prod_dir"/>
        <variable name="prod_name"/>
        <ProcedureCall id="_1oSj" procedure="path.source_data_directory">
          <variable name="data_type">$(prod_dir)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1pMS"
                       procedure="do_click.reprojection.button_source_product"/>
        <ProcedureCall id="_1pHR"
                       procedure="utility.handle_select_product_dialog">
          <variable name="file">$(data_source_directory)$(prod_name)</variable>
        </ProcedureCall>
        <TryStep id="_1pXT">
          <ProcedureCall id="_1pXV"
                         procedure="wait.appear.error.dialog_Error"/>
          <TryStep id="_1r3N" name="get_error_text">
            <ProcedureCall id="_1r3L"
                           procedure="get.error_text.snap_error_open_product"/>
            <CatchSequence exception="TestException" id="_1r3O" maxerror="0"/>
          </TryStep>
          <ProcedureCall id="_1pjp" procedure="run-log.make_screensot">
            <variable name="iw_name">error_dialog_select_source_product_reprojection</variable>
            <variable name="iw_name_example">error_dialog</variable>
          </ProcedureCall>
          <ProcedureCall id="_1pXS"
                         procedure="do_click.error_dialog.button_OK_Error"/>
          <SetGlobalStep id="_1phw" varname="source_product_opened">
            <default>false</default>
          </SetGlobalStep>
          <ProcedureCall id="_1pXW" procedure="run-log.logError">
            <variable name="message">$(open_product_error)</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
          <ProcedureCall disabled="true" id="_1r3M"
                         procedure="run-log.logError">
            <variable name="message">Opening of the product $(data_source_directory)$(prod_name) failed</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1pXU" maxerror="0">
            <SetGlobalStep id="_1phx" varname="source_product_opened">
              <default>true</default>
            </SetGlobalStep>
          </CatchSequence>
        </TryStep>
        <ProcedureCall id="_1pju"
                       procedure="reprojection.source_product_name"/>
        <IfSequence id="_1pjv"
                    test="&#34;$(source_product_name)&#34;&lt;&gt;&#34;&#34;">
          <SetGlobalStep id="_1pk2" varname="source_product_opened">
            <default>true</default>
          </SetGlobalStep>
          <ElseSequence id="_1pk0">
            <SetGlobalStep id="_1pk3" varname="source_product_opened">
              <default>false</default>
            </SetGlobalStep>
            <ProcedureCall id="_1pk1" procedure="run-log.logError">
              <variable name="message">$(prod_dir)/$(prod_name) cann't be opened</variable>
              <variable name="withScreenshots">true</variable>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_1phE" name="run_reprojection">
        <ProcedureCall id="_1pgi"
                       procedure="do_click.reprojection.button_apply"/>
        <ProcedureCall id="_1pkB"
                       procedure="click_ok_in_product_created_dialog"/>
        <ProcedureCall id="_1pkC"
                       procedure="wait.disappear.writing_target_product"/>
        <IfSequence id="_1pbq"
                    test="&#34;$(output_format)&#34;&lt;&gt;&#34;HDF5&#34;">
          <ProcedureCall id="_1r4H" procedure="utility.handle_errors"/>
          <ElseSequence id="_1r4K">
            <TryStep id="_1r4L" name="click_buttonOK_dialogSNAP_Reprojection">
              <MouseEventStep clicks="1" client="$(client)"
                              component="dialogSNAP_-_Reprojection.buttonOK"
                              event="MOUSE_MPRC" id="_1r3T" modifiers="16"/>
              <CatchSequence exception="TestException" id="_1r4M"
                             maxerror="0"/>
            </TryStep>
          </ElseSequence>
        </IfSequence>
        <ProcedureCall id="_1pg+"
                       procedure="click_ok_in_product_created_dialog"/>
      </Procedure>
    </Package>
    <Procedure id="_1pON" name="click_ok_in_product_created_dialog">
      <TryStep id="_1pOQ">
        <ComponentWaiter client="$(client)" component="dialogReprojection2"
                         id="_1pdG" timeout="10"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogReprojection2.buttonOK"
                        event="MOUSE_MPRC" id="_1pdH" modifiers="16"/>
        <CatchSequence exception="TestException" id="_1pOR" maxerror="0"/>
      </TryStep>
    </Procedure>
    <Procedure id="_1pb8" name="select_io_tab">
      <ProcedureCall id="_1pb9" procedure="select.reprojection.tab">
        <variable name="tab">I/O Parameters</variable>
      </ProcedureCall>
    </Procedure>
    <Procedure id="_1pbC" name="select_projection_parameters_tab">
      <ProcedureCall id="_1pbE" procedure="select.reprojection.tab">
        <variable name="tab">Reprojection Parameters</variable>
      </ProcedureCall>
    </Procedure>
    <Procedure disabled="true" id="_1pTE"
               name="get_selected_source_product_todo">
      <FetchTextStep client="$(client)"
                     component="dialogReprojection.panelI/O_Parameters.comboName:"
                     id="_1pTF" varname="source_product"/>
      <ServerScriptStep id="_1phn" name="print">
        <code>print "$(source_product)"</code>
      </ServerScriptStep>
    </Procedure>
  </PackageRoot>
  <ExtraSequence id="_4">
    <Procedure disabled="true" id="_1pbm" name="check_reproj_target_product">
      <comment>@teststep Check target product.</comment>
      <ProcedureCall id="_1pbn" procedure="set.target_product_with_path"/>
      <ProcedureCall id="_1pbo"
                     procedure="check_external_file.file_exists_setGlobal">
        <variable name="fileName">$(target_product)</variable>
      </ProcedureCall>
      <IfSequence id="_1pbp" test="&#34;$(fileExists)&#34;==&#34;True&#34;">
        <IfSequence id="_1r4I"
                    test="&#34;$(output_format)&#34;&lt;&gt;&#34;HDF5&#34;">
          <ProcedureCall id="_1pbr" procedure="check.product.not_opened"/>
          <IfSequence id="_1pbs"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <TestStep id="_1pbt" name="open_image_view">
              <ProcedureCall id="_1pxv"
                             procedure="product_meta_data.for_open_image_view"/>
              <ProcedureCall id="_1pbx"
                             procedure="utility.open_image_view_using_menu_check_it"/>
            </TestStep>
            <TestStep id="_1pby"
                      name="open_image_view_check_masks_layers_close_product">
              <SetGlobalStep id="_1pbz" varname="view_Id1">
                <default>1</default>
              </SetGlobalStep>
              <ProcedureCall id="_1r4J"
                             procedure="test_events.imaging_tools.open_image_window_in_target_product_check_masks_layers"/>
            </TestStep>
            <ElseSequence id="_1pb-">
              <ProcedureCall id="_1pc0" procedure="run-log.logError">
                <variable name="message">$(target_product) is not opened.</variable>
                <variable name="withScreenshots">false</variable>
              </ProcedureCall>
            </ElseSequence>
          </IfSequence>
        </IfSequence>
        <ElseSequence id="_1pc1">
          <ProcedureCall id="_1pc2" procedure="run-log.logError">
            <variable name="message">$(target_product) is not written.</variable>
            <variable name="withScreenshots">false</variable>
          </ProcedureCall>
        </ElseSequence>
      </IfSequence>
    </Procedure>
    <ServerScriptStep id="_1l5A" name="print">
      <code>print "${default:varname:defaultvalue}"</code>
    </ServerScriptStep>
    <ServerScriptStep id="_1phm" name="print">
      <code>print "${default:varname:defaultvalue}"</code>
    </ServerScriptStep>
    <IfSequence id="_1op7" test="${qftest:windows}">
      <ElseifSequence id="_1op8" name="MAC?"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
      <ElseSequence id="_1op9"/>
    </IfSequence>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
