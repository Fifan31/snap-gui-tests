<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.11">
  <include>qfs.qft</include>
  <include>../lib/snap_components.qft</include>
  <include>../lib/snap_main.qft</include>
  <include>../40_gpt/gpt_main.qft</include>
  <include>../../shared/shared_lib.qft</include>
  <include>../../shared/variables.qft</include>
  <dependency>015_01_check_smos_products.qft</dependency>
  <dependency>015_02_smosbox_actions.qft</dependency>
  <dependency>015_03_export_smos_grid_points.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1qhx" name="check">
      <Procedure id="_1rop" name="check_target_product">
        <SetGlobalStep id="_1ror" varname="incomplete_SMOS_file">
          <default>false</default>
        </SetGlobalStep>
        <SetGlobalStep id="_1ros" varname="outfile">
          <default>$(output_directory)${path:slash}$(target_product).nc</default>
        </SetGlobalStep>
        <ProcedureCall id="_1rot"
                       procedure="check_external_file.file_exists_setGlobal">
          <variable name="fileName">$(outfile)</variable>
        </ProcedureCall>
        <IfSequence id="_1rou"
                    test="&#34;$(fileExists)&#34;==&#34;False&#34;">
          <TestStep id="_1rov" name="wait" postdelay="5000"/>
          <ProcedureCall id="_1row"
                         procedure="check_external_file.file_exists_setGlobal">
            <variable name="fileName">$(outfile)</variable>
          </ProcedureCall>
          <IfSequence id="_1rox"
                      test="&#34;$(fileExists)&#34;==&#34;False&#34;">
            <ProcedureCall id="_1roy" procedure="run-log.logError">
              <variable name="message">$(outfile) is not processed</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </IfSequence>
        </IfSequence>
        <IfSequence id="_1roz" test="&#34;$(fileExists)&#34;==&#34;True&#34;">
          <ProcedureCall id="_1ro+" procedure="check.product.not_opened"/>
          <IfSequence id="_1ro-"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1rp0" procedure="close.all_products"/>
            <ElseSequence id="_1rp1">
              <SetGlobalStep id="_1rp2" varname="incomplete_SMOS_file">
                <default>false</default>
              </SetGlobalStep>
              <ProcedureCall id="_1rpL" procedure="open.product_in_snap">
                <variable name="prod_dir">$(output_sub_directory)</variable>
                <variable name="in_out">out</variable>
                <variable name="prod">$(target_product).nc</variable>
                <variable name="product_type"/>
              </ProcedureCall>
              <IfSequence id="_1rp5"
                          test="&#34;$(incomplete_SMOS_file)&#34;==&#34;false&#34;">
                <IfSequence id="_1rp6"
                            test="&#34;$(not_opened)&#34;==&#34;true&#34;">
                  <ProcedureCall id="_1rp7"
                                 procedure="wait.product_is_opened"/>
                </IfSequence>
                <ProcedureCall id="_1rp8"
                               procedure="check.product.not_opened"/>
                <IfSequence id="_1rp9"
                            test="&#34;$(not_opened)&#34;==&#34;false&#34;">
                  <SetGlobalStep id="_1rpA" varname="group_id1">
                    <comment>view_Id1</comment>
                  </SetGlobalStep>
                  <ProcedureCall id="_1rpB"
                                 procedure="product_meta_data.product_attributes">
                    <variable name="prod_type"/>
                  </ProcedureCall>
                  <SetGlobalStep id="_1rpC" varname="view_Id1">
                    <default>0</default>
                  </SetGlobalStep>
                  <SetGlobalStep id="_1rpD" varname="bandName">
                    <default>test</default>
                  </SetGlobalStep>
                  <ProcedureCall id="_1rpE"
                                 procedure="utility.open_image_view_check_it">
                    <comment>@teststep Open image view and check it.</comment>
                  </ProcedureCall>
                  <ProcedureCall id="_1rpF" procedure="close.all_products"/>
                  <ElseSequence id="_1rpG">
                    <ProcedureCall id="_1rpH"
                                   procedure="utility.handle_incomplete_SMOS_file"/>
                    <IfSequence id="_1rpI"
                                test="&#34;$(incomplete_SMOS_file)&#34;==&#34;false&#34;">
                      <ProcedureCall id="_1rpJ" procedure="run-log.logError">
                        <variable name="message">Target product is not opened in SNAP</variable>
                        <variable name="withScreenshots">true</variable>
                      </ProcedureCall>
                    </IfSequence>
                  </ElseSequence>
                </IfSequence>
              </IfSequence>
            </ElseSequence>
          </IfSequence>
        </IfSequence>
      </Procedure>
      <Package id="_1qhy" name="export_smos_grid_points">
        <Package id="_9Zt" name="enabled">
          <Procedure id="_9rx" name="use_selected_smos_product">
            <comment>@teststep Check 'Use selected SMOS product' radiobutton is enabled.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.useSelectedProduct"
                              errorlevel="0" id="_9ry"
                              resvarname="use_selected_product_enabled"/>
          </Procedure>
          <Procedure id="_1qh+"
                     name="use_selected_product_smos_enabled_status">
            <variable name="enabled"/>
            <comment>@teststep Check 'Use selected SMOS product' radiobutton enabled status.</comment>
            <CheckBooleanStep checktype="enabled" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.useSelectedProduct"
                              errorlevel="0" id="_1qh-" state="$(enabled)"/>
          </Procedure>
        </Package>
        <Package id="_9Zm" name="selection">
          <Procedure id="_9ZC" name="use_selected_product">
            <variable name="select"/>
            <comment>@teststep Check selection of the 'Use selected SMOS product' checkbox.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.useSelectedProduct"
                              id="_1qi0" state="$(select)"/>
          </Procedure>
          <Procedure id="_9ZJ" name="use_all_smos_products_in_directory">
            <variable name="select"/>
            <comment>@teststep Check selection of the 'Use all SMOS products in directory:' checkbox.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.useSelectedProduct.1"
                              id="_1qi1" state="$(select)"/>
          </Procedure>
          <Procedure id="_9ZQ" name="recursive">
            <variable name="select"/>
            <comment>@teststep Check selection of the 'Descend into subdirectories' checkbox.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.recursive"
                              id="_1qi2" state="$(select)"/>
          </Procedure>
          <Procedure id="_9ZX" name="geometry">
            <variable name="select"/>
            <comment>@teststep Check selection of the  'Geometry' radiobutton.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.roiType"
                              id="_1qi3" state="$(select)"/>
          </Procedure>
          <Procedure id="_9Ze" name="pins">
            <variable name="select"/>
            <comment>@teststep Check selection of the  'Pins' radiobutton.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.roiType.1"
                              id="_1qi4" state="$(select)"/>
          </Procedure>
          <Procedure id="_9XE" name="area">
            <variable name="select"/>
            <comment>@teststep Check selection of the  'Area' radiobutton.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.roiType.2"
                              id="_1qi5" state="$(select)"/>
          </Procedure>
        </Package>
        <Package id="_9ri" name="checked">
          <Procedure id="_1qiM" name="recursive">
            <comment>@teststep Check 'Descend into subdirectories' checkbox is selected.</comment>
            <CheckBooleanStep checktype="checked" client="$(client)"
                              component="dialogExport_SMOS_Grid_Points.recursive"
                              id="_1qiN" resvarname="recursive"/>
          </Procedure>
        </Package>
        <Package id="_9Zl" name="text">
          <Procedure id="_1qiW" name="source_directory">
            <variable name="val"/>
            <comment>@teststep Check source directory value.</comment>
            <CheckStringStep client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.sourceDirectory"
                             id="_1qiX">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1qia" name="target_directory">
            <variable name="val"/>
            <comment>@teststep Check target directory value.</comment>
            <CheckStringStep client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.targetFile"
                             id="_1qid">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_1qig" name="target_file">
            <variable name="val"/>
            <comment>@teststep Check target file value.</comment>
            <CheckStringStep client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.targetFile"
                             id="_1qih">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_9YZ" name="north">
            <variable name="val"/>
            <comment>@teststep Check north value.</comment>
            <CheckStringStep client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.north"
                             id="_1qiQ">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_9Yg" name="west">
            <variable name="val"/>
            <comment>@teststep Check west value.</comment>
            <CheckStringStep client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.west"
                             id="_1qiR">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_9Yk" name="east">
            <variable name="val"/>
            <comment>@teststep Check east value.</comment>
            <CheckStringStep client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.east"
                             id="_1qiS">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_9YE" name="south">
            <variable name="val"/>
            <comment>@teststep Check south value.</comment>
            <CheckStringStep client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.south"
                             id="_1qiT">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_9Z7" name="geometry">
            <variable name="val"/>
            <comment>@teststep Check selected geometry.</comment>
            <CheckStringStep checktype="value" client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.geometryNode"
                             id="_1qiP">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
          <Procedure id="_9Yv" name="export_format">
            <variable name="val"/>
            <comment>@teststep Check selected 'export format'.</comment>
            <CheckStringStep checktype="value" client="$(client)"
                             component="dialogExport_SMOS_Grid_Points.exportFormat"
                             id="_1qiU">
              <text>$(val)</text>
            </CheckStringStep>
          </Procedure>
        </Package>
      </Package>
    </Package>
    <Package id="_1qii" name="do_cklick">
      <Package id="_1qij" name="export_smos_grid_points">
        <Procedure id="_1qiq" name="use_selected_product">
          <comment>@teststep Click 'Use selected SMOS product' radiobutton.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogExport_SMOS_Grid_Points.useSelectedProduct"
                          event="MOUSE_MPRC" id="_1qc7" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qis" name="use_all_smos_products_in_directory">
          <comment>@teststep Click 'Use all Smos products in directory' radiobutton.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogExport_SMOS_Grid_Points.useSelectedProduct.1"
                          event="MOUSE_MPRC" id="_1qcA" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qiu" name="recursive">
          <comment>@teststep Click on checkbox 'Descend into subdirectories'.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogExport_SMOS_Grid_Points.recursive"
                          event="MOUSE_MPRC" id="_1qcE" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qiw" name="geometry">
          <comment>@teststep Click 'Geometry' radiobutton.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogExport_SMOS_Grid_Points.roiType"
                          event="MOUSE_MPRC" id="_1qcF" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qiy" name="pins">
          <comment>@teststep Click 'Pins' radiobutton.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogExport_SMOS_Grid_Points.roiType.1"
                          event="MOUSE_MPRC" id="_1qcH" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qi+" name="area">
          <comment>@teststep Click 'Area' radiobutton.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogExport_SMOS_Grid_Points.roiType.2"
                          event="MOUSE_MPRC" id="_1qcI" modifiers="16"/>
        </Procedure>
        <Procedure id="_1qj1" name="source_directory">
          <comment>@teststep Click 'Source directory' button.</comment>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogExport_SMOS_Grid_Points.openFileDialog"
                          event="MOUSE_MPRC" id="_1qcc" modifiers="16"/>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1qjM" name="select">
      <Package id="_1qjN" name="export_smos_grid_points">
        <Procedure id="_1qjO" name="use_selected_product">
          <comment>@teststep check-in 'Use selected SMOS product' radiobutton.</comment>
          <ProcedureCall id="_1qjc"
                         procedure="check.export_smos_grid_points.enabled.use_selected_smos_product"/>
          <IfSequence id="_1qjd"
                      test="&#34;$(use_selected_product_enabled)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1qje"
                           procedure="do_cklick.export_smos_grid_points.use_selected_product"/>
            <ElseSequence id="_1qjf">
              <ProcedureCall id="_1qjg" procedure="run-log.logError">
                <variable name="message">'Use selected SMOS product' radiobutton is disabled</variable>
                <variable name="withScreenshots">true</variable>
              </ProcedureCall>
            </ElseSequence>
          </IfSequence>
        </Procedure>
      </Package>
    </Package>
    <Package id="_1qjh" name="set">
      <Procedure id="_1qk5" name="input_help">
        <variable name="sourcedir"/>
        <ProcedureCall id="_1qkF" procedure="path.main_path"/>
        <ProcedureCall id="_1qk6" procedure="path.source_data_directory">
          <variable name="data_type">$(sourcedir)</variable>
        </ProcedureCall>
        <SetGlobalStep id="_1qkG" varname="tmp">
          <default>$(data_source_directory)</default>
        </SetGlobalStep>
        <ServerScriptStep id="_1qmt">
          <code>import string

s = "$(tmp)"
index_last_char = len(s) - 1
rc.setGlobal("smos_input_tmp", s[:(index_last_char - 1)])   </code>
        </ServerScriptStep>
        <SetGlobalStep disabled="true" id="_1qk7" varname="smos_input">
          <default>$(data_source_directory)SM*.zip,$(data_source_directory)SM*/SM*.HDR</default>
        </SetGlobalStep>
        <SetGlobalStep id="_1qmx" varname="smos_input">
          <default>$(smos_input_tmp)/SM*.zip,$(smos_input_tmp)/SM*/SM*.HDR</default>
        </SetGlobalStep>
      </Procedure>
      <Procedure id="_1qji" name="input">
        <variable name="source1"/>
        <variable name="source2"/>
        <variable name="source3"/>
        <IfSequence id="_1qUi" test="&#34;$(source1)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_1qk8" procedure="set.input_help">
            <variable name="sourcedir">$(source1)</variable>
          </ProcedureCall>
          <SetGlobalStep id="_1qUk" local="true" varname="i1">
            <default>$(smos_input)</default>
          </SetGlobalStep>
          <ElseSequence id="_1qUl">
            <SetGlobalStep id="_1qUm" local="true" varname="i1"/>
          </ElseSequence>
        </IfSequence>
        <IfSequence id="_1qUn" test="&#34;$(source2)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_1qk9" procedure="set.input_help">
            <variable name="sourcedir">$(source2)</variable>
          </ProcedureCall>
          <SetGlobalStep id="_1qkA" local="true" varname="i2">
            <default>$(smos_input)</default>
          </SetGlobalStep>
          <ElseSequence id="_1qUq">
            <SetGlobalStep id="_1qUr" local="true" varname="i2"/>
          </ElseSequence>
        </IfSequence>
        <IfSequence id="_1qUs" test="&#34;$(source3)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_1qkD" procedure="set.input_help">
            <variable name="sourcedir">$(source3)</variable>
          </ProcedureCall>
          <SetGlobalStep id="_1qkE" local="true" varname="i3">
            <default>$(smos_input)</default>
          </SetGlobalStep>
          <ElseSequence id="_1qUv">
            <SetGlobalStep id="_1qUw" local="true" varname="i3"/>
          </ElseSequence>
        </IfSequence>
        <IfSequence id="_1qZ-"
                    test="&#34;$(i1)&#34;&lt;&gt;&#34;&#34; and &#34;$(i2)&#34;&lt;&gt;&#34;&#34; and &#34;$(i3)&#34;&lt;&gt;&#34;&#34;">
          <SetGlobalStep id="_1qUx" varname="input">
            <default>$(i1),$(i2),$(i3)</default>
          </SetGlobalStep>
          <ElseifSequence id="_1qa0"
                          test="&#34;$(i1)&#34;&lt;&gt;&#34;&#34; and &#34;$(i2)&#34;&lt;&gt;&#34;&#34; and &#34;$(i3)&#34;==&#34;&#34;">
            <SetGlobalStep id="_1qa1" varname="input">
              <default>$(i1),$(i2)</default>
            </SetGlobalStep>
          </ElseifSequence>
          <ElseifSequence id="_1qa2"
                          test="&#34;$(i1)&#34;&lt;&gt;&#34;&#34; and &#34;$(i2)&#34;==&#34;&#34; and &#34;$(i3)&#34;==&#34;&#34;">
            <SetGlobalStep id="_1qa3" varname="input">
              <default>$(i1)</default>
            </SetGlobalStep>
          </ElseifSequence>
        </IfSequence>
        <ServerScriptStep id="_1qUy" name="print">
          <code>print "*** input = $(input)"  </code>
        </ServerScriptStep>
      </Procedure>
    </Package>
    <Package id="_1rpK" name="utility">
      <Procedure id="_1roT" name="handle_incomplete_SMOS_file">
        <TryStep id="_1rod">
          <ComponentWaiter client="$(client)"
                           component="dialogSNAP_-_Open_Product.buttonOK"
                           id="_1roe" raise="false" timeout="100"/>
          <SetGlobalStep id="_1roj" varname="incomplete_SMOS_file">
            <default>true</default>
          </SetGlobalStep>
          <FetchTextStep client="$(client)"
                         component="dialogSNAP_-_Open_Product.labelIncomplete_SMOS_file,_unable_to_handle_correctly."
                         id="_1rof" varname="incomplete_SMOS_file"/>
          <CatchSequence exception="TestException" id="_1roi" maxerror="0">
            <SetGlobalStep id="_1rok" varname="incomplete_SMOS_file">
              <default>false</default>
            </SetGlobalStep>
          </CatchSequence>
        </TryStep>
        <TryStep id="_1rob">
          <ComponentWaiter client="$(client)"
                           component="dialogSNAP_-_Open_Product.buttonOK"
                           id="_1roZ" raise="false" timeout="100"/>
          <MouseEventStep clicks="1" client="$(client)"
                          component="dialogSNAP_-_Open_Product.buttonOK"
                          event="MOUSE_MPRC" id="_1roa" modifiers="16"/>
          <SetGlobalStep id="_1rom" varname="incomplete_SMOS_file">
            <default>true</default>
          </SetGlobalStep>
          <CatchSequence exception="TestException" id="_1roc" maxerror="0">
            <SetGlobalStep id="_1rol" varname="incomplete_SMOS_file">
              <default>false</default>
            </SetGlobalStep>
          </CatchSequence>
        </TryStep>
      </Procedure>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <IfSequence id="_1op7" test="${qftest:windows}">
      <ElseifSequence id="_1op8" name="MAC?"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0"/>
      <ElseSequence id="_1op9"/>
    </IfSequence>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
