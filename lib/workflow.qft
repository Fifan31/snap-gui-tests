<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE RootStep>
<RootStep id="_0" name="root" version="4.0.3">
  <include>qfs.qft</include>
  <include>select.qft</include>
  <include>components.qft</include>
  <include>main.qft</include>
  <include>open.qft</include>
  <include>close.qft</include>
  <include>check.qft</include>
  <include>do_click.qft</include>
  <dependency>main.qft</dependency>
  <PackageRoot id="_3">
    <Package id="_1oNH" name="menu">
      <Package id="_1oNM" name="utility">
        <Procedure id="_1oQp" name="attach_pixel_geo-coding">
          <ProcedureCall id="_1oQt" procedure="do_click.menu.tools"/>
          <ProcedureCall id="_1obB"
                         procedure="check.tools.pixel_geocoding.menu_item.attach_pixel_Geocoding_enabled"/>
          <IfSequence id="_1obC"
                      test="&#34;$(attach_pixel_Geocoding_enabled)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1oQu"
                           procedure="do_click.menu.tools.attach_pixel_geoCoding"/>
            <ElseSequence id="_1obD">
              <ServerScriptStep id="_1obE" name="error">
                <code>rc.logError("Menu item 'Attach Pixel Geo-Coding' is disabled.")</code>
              </ServerScriptStep>
            </ElseSequence>
          </IfSequence>
        </Procedure>
        <Procedure id="_1oQr" name="detach_pixel_geo-coding">
          <ProcedureCall id="_1oQk" procedure="do_click.menu.tools"/>
          <ProcedureCall id="_1obF"
                         procedure="check.tools.pixel_geocoding.menu_item.detach_pixel_Geocoding_enabled"/>
          <IfSequence id="_1obG"
                      test="&#34;$(detach_pixel_Geocoding_enabled)&#34;==&#34;true&#34;">
            <ProcedureCall id="_1oQm"
                           procedure="do_click.menu.tools.detach_pixel_geoCoding"/>
            <ElseSequence id="_1obI">
              <ServerScriptStep id="_1obJ" name="error">
                <code>rc.logError("Menu item 'Detach Pixel Geo-Coding' is disabled.")</code>
              </ServerScriptStep>
            </ElseSequence>
          </IfSequence>
        </Procedure>
        <Package disabled="true" id="_1oNN" name="import">
          <Procedure id="_1oNO" name="aquarius">
            <ProcedureCall id="_1oNP" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oNQ"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oNR"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oNS"
                           procedure="do_click.menu.file.rasterData.multispectral.aquarius"/>
          </Procedure>
          <Procedure id="_1oNT" name="atsr">
            <ProcedureCall id="_1oNU" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oNV"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oNW"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oNX"
                           procedure="do_click.menu.file.rasterData.multispectral.atsr"/>
          </Procedure>
          <Procedure id="_1oNY" name="avnir2">
            <ProcedureCall id="_1oNZ" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oNa"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oNb"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oNc"
                           procedure="do_click.menu.file.rasterData.multispectral.avnir2"/>
          </Procedure>
          <Procedure id="_1oNd" name="binned_SeaDAS">
            <ProcedureCall id="_1oNe" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oNf"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oNg"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oNh"
                           procedure="do_click.menu.file.rasterData.multispectral.binned_SeaDAS"/>
          </Procedure>
          <Procedure id="_1oNi" name="chris">
            <ProcedureCall id="_1oNj" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oNk"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oNl"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oNm"
                           procedure="do_click.menu.file.rasterData.multispectral.chris"/>
          </Procedure>
          <Procedure id="_1oNn" name="envisat">
            <ProcedureCall id="_1oNo" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oNp"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oNq"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oNr"
                           procedure="do_click.menu.file.rasterData.multispectral.envisat_meris_aatsr"/>
          </Procedure>
          <Procedure id="_1oNs" name="ers_atsr">
            <ProcedureCall id="_1oNt" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oNu"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oNv"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oNw"
                           procedure="do_click.menu.file.rasterData.multispectral.ers_atsr"/>
          </Procedure>
          <Procedure id="_1oNx" name="hico_L1b">
            <ProcedureCall id="_1oNy" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oNz"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oN+"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oN-"
                           procedure="do_click.menu.file.rasterData.multispectral.hico_L1b"/>
          </Procedure>
          <Procedure id="_1oO0" name="hico_envi_format">
            <ProcedureCall id="_1oO1" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oO2"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oO3"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oO4"
                           procedure="do_click.menu.file.rasterData.multispectral.hico_envi_format"/>
          </Procedure>
          <Procedure id="_1oO5" name="landsat5_TM">
            <ProcedureCall id="_1oO6" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oO7"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oO8"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oO9"
                           procedure="do_click.menu.file.rasterData.multispectral.landsat_TM"/>
          </Procedure>
          <Procedure id="_1oOA" name="landsat_geoTIFF">
            <ProcedureCall id="_1oOB" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOC"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOD"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOE"
                           procedure="do_click.menu.file.rasterData.multispectral.landsat_geoTIFF"/>
          </Procedure>
          <Procedure id="_1oOF" name="meris_binned_L3">
            <ProcedureCall id="_1oOG" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOH"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOI"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOJ"
                           procedure="do_click.menu.file.rasterData.multispectral.meris_binned_L3"/>
          </Procedure>
          <Procedure id="_1oOK" name="modisL1B">
            <ProcedureCall id="_1oOL" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOM"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oON"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOO"
                           procedure="do_click.menu.file.rasterData.multispectral.modisL1B"/>
          </Procedure>
          <Procedure id="_1oOP" name="modis_MOD_MXD_MYD">
            <ProcedureCall id="_1oOQ" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOR"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOS"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOT"
                           procedure="do_click.menu.file.rasterData.multispectral.modis_MOD_MXD_MYD"/>
          </Procedure>
          <Procedure id="_1oOU" name="noaa_avhrr_3_L1b">
            <ProcedureCall id="_1oOV" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOW"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOX"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOY"
                           procedure="do_click.menu.file.rasterData.multispectral.noaa_avhrr_3_L1b"/>
          </Procedure>
          <Procedure id="_1oOZ" name="ocm2_L1B">
            <ProcedureCall id="_1oOa" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOb"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOc"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOd"
                           procedure="do_click.menu.file.rasterData.multispectral.ocm2_L1B"/>
          </Procedure>
          <Procedure id="_1oOe" name="prism">
            <ProcedureCall id="_1oOf" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOg"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOh"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOi"
                           procedure="do_click.menu.file.rasterData.multispectral.prism"/>
          </Procedure>
          <Procedure id="_1oOj" name="seaDAS_L1">
            <ProcedureCall id="_1oOk" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOl"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOm"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOn"
                           procedure="do_click.menu.file.rasterData.multispectral.seaDAS_L1"/>
          </Procedure>
          <Procedure id="_1oOo" name="seaDAS_L2">
            <ProcedureCall id="_1oOp" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOq"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOr"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOs"
                           procedure="do_click.menu.file.rasterData.multispectral.seaDAS_L2"/>
          </Procedure>
          <Procedure id="_1oOt" name="seaDAS_L3">
            <ProcedureCall id="_1oOu" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oOv"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oOw"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oOx"
                           procedure="do_click.menu.file.rasterData.multispectral.seaDAS_L3"/>
          </Procedure>
          <Procedure id="_1oOy" name="seaDAS_browse_L1_L2">
            <ProcedureCall id="_1oOz" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oO+"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oO-"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oP0"
                           procedure="do_click.menu.file.rasterData.multispectral.seaDAS_browse_L1_L2"/>
          </Procedure>
          <Procedure id="_1oP1" name="sentinel3">
            <ProcedureCall id="_1oP2" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oP3"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oP4"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oP5"
                           procedure="do_click.menu.file.rasterData.multispectral.sentinel3"/>
          </Procedure>
          <Procedure id="_1oP6" name="smos">
            <ProcedureCall id="_1oP7" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oP8"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oP9"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oPA"
                           procedure="do_click.menu.file.rasterData.multispectral.smos"/>
          </Procedure>
          <Procedure id="_1oPB" name="spot_vgt">
            <ProcedureCall id="_1oPC" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPD"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPE"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oPF"
                           procedure="do_click.menu.file.rasterData.multispectral.spot_vgt"/>
          </Procedure>
          <Procedure id="_1oPG" name="viirs">
            <ProcedureCall id="_1oPH" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPI"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPJ"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1oPK"
                           procedure="do_click.menu.file.rasterData.multispectral.viirs"/>
          </Procedure>
          <Procedure id="_1oPL" name="dimap">
            <ProcedureCall id="_1oPM" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPN"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPO"
                           procedure="do_click.menu.file.rasterData.dimap_product"/>
          </Procedure>
          <Procedure id="_1oPP" name="sar_asar">
            <ProcedureCall id="_1oPQ" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPR"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPS"
                           procedure="do_click.menu.file.rasterData.sar"/>
            <ProcedureCall id="_1oPT"
                           procedure="do_click.menu.file.rasterData.sar.asar"/>
          </Procedure>
          <Procedure id="_1oPU" name="sar_ers">
            <ProcedureCall id="_1oPV" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPW"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPX"
                           procedure="do_click.menu.file.rasterData.sar"/>
            <ProcedureCall id="_1oPY"
                           procedure="do_click.menu.file.rasterData.sar.ers_sar"/>
          </Procedure>
          <Procedure id="_1oPZ" name="arcInfo_binary_grid">
            <ProcedureCall id="_1oPa" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPb"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPc"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oPd"
                           procedure="do_click.menu.file.rasterData.generic.arcInfo_binary_grid"/>
          </Procedure>
          <Procedure id="_1oPe" name="csv">
            <ProcedureCall id="_1oPf" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPg"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPh"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oPi"
                           procedure="do_click.menu.file.rasterData.generic.csv"/>
          </Procedure>
          <Procedure id="_1oPj" name="envi">
            <ProcedureCall id="_1oPk" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPl"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPm"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oPn"
                           procedure="do_click.menu.file.rasterData.generic.envi"/>
          </Procedure>
          <Procedure id="_1oPo" name="geotiff">
            <ProcedureCall id="_1oPp" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPq"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPr"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oPs"
                           procedure="do_click.menu.file.rasterData.generic.geotiff"/>
          </Procedure>
          <Procedure id="_1oPt" name="hdf_eos_gridded">
            <ProcedureCall id="_1oPu" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oPv"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oPw"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oPx"
                           procedure="do_click.menu.file.rasterData.generic.hdf_eos_gridded"/>
          </Procedure>
          <Procedure id="_1oPy" name="netCdf_beam">
            <ProcedureCall id="_1oPz" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oP+"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oP-"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oQ0"
                           procedure="do_click.menu.file.rasterData.generic.netCdf_beam"/>
          </Procedure>
          <Procedure id="_1oQ1" name="netCdf_cf">
            <ProcedureCall id="_1oQ2" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oQ3"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oQ4"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oQ5"
                           procedure="do_click.menu.file.rasterData.generic.netCdf_cf"/>
          </Procedure>
          <Procedure id="_1oQ6" name="netCdf_generic">
            <ProcedureCall id="_1oQ7" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oQ8"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oQ9"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oQA"
                           procedure="do_click.menu.file.rasterData.generic.netCdf_generic"/>
          </Procedure>
          <Procedure id="_1oQB" name="pgx">
            <ProcedureCall id="_1oQC" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oQD"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oQE"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1oQF"
                           procedure="do_click.menu.file.rasterData.generic.pgx"/>
          </Procedure>
          <Procedure id="_1oQG" name="rgb">
            <ProcedureCall id="_1oQH" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1oQI"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1oQJ"
                           procedure="do_click.menu.file.rasterData.rgb"/>
          </Procedure>
          <Procedure id="_1oQK" name="fill_dialog">
            <comment>@teststep Select product and click 'Import' button</comment>
            <ProcedureCall id="_1oQL"
                           procedure="set.import_dialog.file_name"/>
            <ProcedureCall id="_1oQM" postdelay="500"
                           procedure="do_click.import_dialog.import_button"/>
            <ProcedureCall disabled="true" id="_1oQN"
                           procedure="set.import_dialog.file_name"/>
            <ProcedureCall disabled="true" id="_1oQO" postdelay="500"
                           procedure="do_click.import_dialog.import_button"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1oNI" name="file">
        <Package disabled="true" id="_1l8U" name="import">
          <Procedure id="_1l2c" name="aquarius">
            <ProcedureCall id="_1l2o" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1l2q"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1l2p"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1l2f"
                           procedure="do_click.menu.file.rasterData.multispectral.aquarius"/>
          </Procedure>
          <Procedure id="_1lHX" name="atsr">
            <ProcedureCall id="_1lHY" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lHZ"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lHa"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lHb"
                           procedure="do_click.menu.file.rasterData.multispectral.atsr"/>
          </Procedure>
          <Procedure id="_1lHc" name="avnir2">
            <ProcedureCall id="_1lHd" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lHe"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lHf"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lHg"
                           procedure="do_click.menu.file.rasterData.multispectral.avnir2"/>
          </Procedure>
          <Procedure id="_1lHh" name="binned_SeaDAS">
            <ProcedureCall id="_1lHi" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lHj"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lHk"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lHl"
                           procedure="do_click.menu.file.rasterData.multispectral.binned_SeaDAS"/>
          </Procedure>
          <Procedure id="_1lHm" name="chris">
            <ProcedureCall id="_1lHn" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lHo"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lHp"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lHq"
                           procedure="do_click.menu.file.rasterData.multispectral.chris"/>
          </Procedure>
          <Procedure id="_1lHw" name="envisat">
            <ProcedureCall id="_1lHx" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lHy"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lHz"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lH+"
                           procedure="do_click.menu.file.rasterData.multispectral.envisat_meris_aatsr"/>
          </Procedure>
          <Procedure id="_1lHr" name="ers_atsr">
            <ProcedureCall id="_1lHs" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lHt"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lHu"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lHv"
                           procedure="do_click.menu.file.rasterData.multispectral.ers_atsr"/>
          </Procedure>
          <Procedure id="_1lH-" name="hico_L1b">
            <ProcedureCall id="_1lI0" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lI1"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lI2"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lI3"
                           procedure="do_click.menu.file.rasterData.multispectral.hico_L1b"/>
          </Procedure>
          <Procedure id="_1lI4" name="hico_envi_format">
            <ProcedureCall id="_1lI5" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lI6"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lI7"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lI8"
                           procedure="do_click.menu.file.rasterData.multispectral.hico_envi_format"/>
          </Procedure>
          <Procedure id="_1lI9" name="landsat5_TM">
            <ProcedureCall id="_1lIA" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lIB"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lIC"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lID"
                           procedure="do_click.menu.file.rasterData.multispectral.landsat_TM"/>
          </Procedure>
          <Procedure id="_1lIE" name="landsat_geoTIFF">
            <ProcedureCall id="_1lIF" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lIG"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lIH"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lII"
                           procedure="do_click.menu.file.rasterData.multispectral.landsat_geoTIFF"/>
          </Procedure>
          <Procedure id="_1lIJ" name="meris_binned_L3">
            <ProcedureCall id="_1lIK" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lIL"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lIM"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lIN"
                           procedure="do_click.menu.file.rasterData.multispectral.meris_binned_L3"/>
          </Procedure>
          <Procedure id="_1lIO" name="modisL1B">
            <ProcedureCall id="_1lIP" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lIQ"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lIR"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lIS"
                           procedure="do_click.menu.file.rasterData.multispectral.modisL1B"/>
          </Procedure>
          <Procedure id="_1lOD" name="modis_MOD_MXD_MYD">
            <ProcedureCall id="_1lOE" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lOF"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lOG"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lOH"
                           procedure="do_click.menu.file.rasterData.multispectral.modis_MOD_MXD_MYD"/>
          </Procedure>
          <Procedure id="_1lOI" name="noaa_avhrr_3_L1b">
            <ProcedureCall id="_1lOJ" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lOK"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lOL"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lOM"
                           procedure="do_click.menu.file.rasterData.multispectral.noaa_avhrr_3_L1b"/>
          </Procedure>
          <Procedure id="_1lON" name="ocm2_L1B">
            <ProcedureCall id="_1lOO" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lOP"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lOQ"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lOR"
                           procedure="do_click.menu.file.rasterData.multispectral.ocm2_L1B"/>
          </Procedure>
          <Procedure id="_1lOS" name="prism">
            <ProcedureCall id="_1lOT" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lOU"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lOV"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lOW"
                           procedure="do_click.menu.file.rasterData.multispectral.prism"/>
          </Procedure>
          <Procedure id="_1lOX" name="seaDAS_L1">
            <ProcedureCall id="_1lOY" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lOZ"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lOa"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lOb"
                           procedure="do_click.menu.file.rasterData.multispectral.seaDAS_L1"/>
          </Procedure>
          <Procedure id="_1lOc" name="seaDAS_L2">
            <ProcedureCall id="_1lOd" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lOe"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lOf"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lOg"
                           procedure="do_click.menu.file.rasterData.multispectral.seaDAS_L2"/>
          </Procedure>
          <Procedure id="_1lOh" name="seaDAS_L3">
            <ProcedureCall id="_1lOi" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lOj"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lOk"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lOl"
                           procedure="do_click.menu.file.rasterData.multispectral.seaDAS_L3"/>
          </Procedure>
          <Procedure id="_1lOm" name="seaDAS_browse_L1_L2">
            <ProcedureCall id="_1lOn" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lOo"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lOp"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lOq"
                           procedure="do_click.menu.file.rasterData.multispectral.seaDAS_browse_L1_L2"/>
          </Procedure>
          <Procedure id="_1lHC" name="sentinel3">
            <ProcedureCall id="_1lHD" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lHE"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lHF"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lHG"
                           procedure="do_click.menu.file.rasterData.multispectral.sentinel3"/>
          </Procedure>
          <Procedure id="_1lEm" name="smos">
            <ProcedureCall id="_1lEn" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lEo"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lEp"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lEq"
                           procedure="do_click.menu.file.rasterData.multispectral.smos"/>
          </Procedure>
          <Procedure id="_1lRc" name="spot_vgt">
            <ProcedureCall id="_1lRd" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lRe"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lRf"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lRg"
                           procedure="do_click.menu.file.rasterData.multispectral.spot_vgt"/>
          </Procedure>
          <Procedure id="_1lRh" name="viirs">
            <ProcedureCall id="_1lRi" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lRj"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lRk"
                           procedure="do_click.menu.file.rasterData.multispectral"/>
            <ProcedureCall id="_1lRl"
                           procedure="do_click.menu.file.rasterData.multispectral.viirs"/>
          </Procedure>
          <Procedure id="_1lRm" name="dimap">
            <ProcedureCall id="_1lRn" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lRo"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lRp"
                           procedure="do_click.menu.file.rasterData.dimap_product"/>
          </Procedure>
          <Procedure id="_1lST" name="sar_asar">
            <ProcedureCall id="_1lSU" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lSV"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lSW"
                           procedure="do_click.menu.file.rasterData.sar"/>
            <ProcedureCall id="_1lSX"
                           procedure="do_click.menu.file.rasterData.sar.asar"/>
          </Procedure>
          <Procedure id="_1lRr" name="sar_ers">
            <ProcedureCall id="_1lRs" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lRt"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lRu"
                           procedure="do_click.menu.file.rasterData.sar"/>
            <ProcedureCall id="_1lRv"
                           procedure="do_click.menu.file.rasterData.sar.ers_sar"/>
          </Procedure>
          <Procedure id="_1lSY" name="arcInfo_binary_grid">
            <ProcedureCall id="_1lSZ" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lSa"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lSb"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lSc"
                           procedure="do_click.menu.file.rasterData.generic.arcInfo_binary_grid"/>
          </Procedure>
          <Procedure id="_1lSd" name="csv">
            <ProcedureCall id="_1lSe" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lSf"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lSg"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lSh"
                           procedure="do_click.menu.file.rasterData.generic.csv"/>
          </Procedure>
          <Procedure id="_1lSi" name="envi">
            <ProcedureCall id="_1lSj" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lSk"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lSl"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lSm"
                           procedure="do_click.menu.file.rasterData.generic.envi"/>
          </Procedure>
          <Procedure id="_1lSn" name="geotiff">
            <ProcedureCall id="_1lSo" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lSp"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lSq"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lSr"
                           procedure="do_click.menu.file.rasterData.generic.geotiff"/>
          </Procedure>
          <Procedure id="_1lSs" name="hdf_eos_gridded">
            <ProcedureCall id="_1lSt" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lSu"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lSv"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lSw"
                           procedure="do_click.menu.file.rasterData.generic.hdf_eos_gridded"/>
          </Procedure>
          <Procedure id="_1lVG" name="netCdf_beam">
            <ProcedureCall id="_1lVH" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lVI"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lVJ"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lVK"
                           procedure="do_click.menu.file.rasterData.generic.netCdf_beam"/>
          </Procedure>
          <Procedure id="_1lVL" name="netCdf_cf">
            <ProcedureCall id="_1lVM" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lVN"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lVO"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lVP"
                           procedure="do_click.menu.file.rasterData.generic.netCdf_cf"/>
          </Procedure>
          <Procedure id="_1lVQ" name="netCdf_generic">
            <ProcedureCall id="_1lVR" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lVS"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lVT"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lVU"
                           procedure="do_click.menu.file.rasterData.generic.netCdf_generic"/>
          </Procedure>
          <Procedure id="_1lVV" name="pgx">
            <ProcedureCall id="_1lVW" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lVX"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lVY"
                           procedure="do_click.menu.file.rasterData.generic"/>
            <ProcedureCall id="_1lVZ"
                           procedure="do_click.menu.file.rasterData.generic.pgx"/>
          </Procedure>
          <Procedure id="_1lVa" name="rgb">
            <ProcedureCall id="_1lVb" procedure="do_click.menu.file"/>
            <ProcedureCall id="_1lVc"
                           procedure="do_click.menu.file.importRasterData"/>
            <ProcedureCall id="_1lVd"
                           procedure="do_click.menu.file.rasterData.rgb"/>
          </Procedure>
          <Procedure id="_1l34" name="fill_dialog">
            <comment>@teststep Select product and click 'Import' button</comment>
            <ProcedureCall id="_1l35"
                           procedure="set.import_dialog.file_name"/>
            <ProcedureCall id="_1l36" postdelay="500"
                           procedure="do_click.import_dialog.import_button"/>
            <ProcedureCall disabled="true" id="_1lHI"
                           procedure="set.import_dialog.file_name"/>
            <ProcedureCall disabled="true" id="_1lHJ" postdelay="500"
                           procedure="do_click.import_dialog.import_button"/>
          </Procedure>
        </Package>
      </Package>
      <Package id="_1oQn" name="tools"/>
    </Package>
    <Package id="_1lHP" name="test_events">
      <Package id="_1oR0" name="imaging_tools">
        <Procedure id="_1lHQ" name="open_band_check_masks_layers">
          <ProcedureCall id="_1l52" procedure="check.product.not_opened"/>
          <IfSequence id="_1l53"
                      test="&#34;$(not_opened)&#34;==&#34;false&#34;">
            <ProcedureCall id="_1l39"
                           procedure="utility.open_image_view_check_it">
              <comment>@teststep Open image view and check it.</comment>
            </ProcedureCall>
            <TestStep disabled="true" id="_1lXz" name="check_world_map">
              <comment>@teststep Check World Map.</comment>
              <ProcedureCall id="_1lHR"
                             procedure="do_click.main_toolbar.views.worldmap">
                <comment>@teststep Open world map.</comment>
              </ProcedureCall>
              <ProcedureCall id="_1lXt" procedure="close.dialog">
                <comment>@teststep Close World Map.</comment>
              </ProcedureCall>
            </TestStep>
            <IfSequence disabled="true" id="_1lY7"
                        test="&#34;$(mask1 )&#34;&lt;&gt;&#34;&#34;">
              <TestStep id="_1lXE" name="check_mask_manager">
                <comment>@teststep Check Mask Managment.</comment>
                <ProcedureCall id="_1lHS"
                               procedure="do_click.main_toolbar.views.mask_manager">
                  <comment>@teststep Open Mask Manager</comment>
                </ProcedureCall>
                <SetGlobalStep id="_1lY1" varname="table">
                  <default>Dialog.maskTable</default>
                </SetGlobalStep>
                <ProcedureCall id="_1lX-" procedure="get.rowCount">
                  <variable name="id">$(table)</variable>
                  <comment>@teststep Get number of masks.</comment>
                </ProcedureCall>
                <ServerScriptStep disabled="true" id="_1lY2" name="print">
                  <code>print "Masks number = $(rowCount)"  </code>
                </ServerScriptStep>
                <SetGlobalStep id="_1oHG" varname="masks_number">
                  <default>$(rowCount)</default>
                </SetGlobalStep>
                <IfSequence id="_1lXe" test="$(masks_number)&gt;0">
                  <comment>@teststep Select and deselect all the mask after each other.</comment>
                  <RepeatSequence count="$(masks_number)" id="_1lXf"
                                  name="check_masks" var="m">
                    <SetGlobalStep id="_1lYI" varname="table">
                      <default>Dialog.maskTable</default>
                    </SetGlobalStep>
                    <TryStep id="_1lYJ" name="select_visible">
                      <ProcedureCall id="_1lYK"
                                     procedure="do_click.table.checkbox">
                        <variable name="tableId">$(table)</variable>
                        <variable name="column">0</variable>
                        <variable name="row">$(m)</variable>
                      </ProcedureCall>
                      <CatchSequence exception="TestException" id="_1lYL"
                                     maxerror="0">
                        <ServerScriptStep id="_1lYM" name="error">
                          <code>rc.logError("Mask $(m) cannot be selected.")</code>
                        </ServerScriptStep>
                      </CatchSequence>
                    </TryStep>
                    <TryStep id="_1lYN" name="deselect_visible">
                      <ProcedureCall id="_1lYO"
                                     procedure="do_click.table.checkbox">
                        <variable name="tableId">$(table)</variable>
                        <variable name="column">0</variable>
                        <variable name="row">$(m)</variable>
                      </ProcedureCall>
                      <CatchSequence exception="TestException" id="_1lYP"
                                     maxerror="0">
                        <ServerScriptStep id="_1lYQ" name="error">
                          <code>rc.logError("Mask $(m) cannot be selected.")</code>
                        </ServerScriptStep>
                      </CatchSequence>
                    </TryStep>
                  </RepeatSequence>
                  <ElseSequence id="_1lXr">
                    <ServerScriptStep id="_1lY8" name="error">
                      <code>rc.logError("Mask manager is empty.")</code>
                    </ServerScriptStep>
                  </ElseSequence>
                </IfSequence>
                <ProcedureCall id="_1lXC" procedure="close.dialog">
                  <comment>@teststep Close Mask Manager</comment>
                </ProcedureCall>
                <ProcedureCall id="_1lYR"
                               procedure="do_click.run_the_Garbage_Collector">
                  <comment>@teststep Force a garbage collection.</comment>
                </ProcedureCall>
              </TestStep>
              <TestStep id="_1lYV" name="check_layer_manager">
                <comment>@teststep Check Layer Managment.</comment>
                <ProcedureCall id="_1lHT"
                               procedure="do_click.main_toolbar.views.layer_manager">
                  <comment>@teststep Open Layer Manager</comment>
                </ProcedureCall>
                <ProcedureCall id="_1oH6" procedure="get.layer_node_id">
                  <variable name="layer_name">Masks</variable>
                  <comment>@teststep Find Masks in the layer manager</comment>
                </ProcedureCall>
                <ServerScriptStep disabled="true" id="_1lYZ" name="print">
                  <code>print "Layer Masks id = $(layer_node_id)"  </code>
                </ServerScriptStep>
                <ProcedureCall id="_1oHH"
                               procedure="do_click.tree.layer_node">
                  <variable name="layer_node1">$(layer_node_id)</variable>
                  <variable name="layer_node2"/>
                  <comment>@teststep Open Masks node in the layer manager</comment>
                </ProcedureCall>
                <IfSequence id="_1oHJ" test="$(masks_number)&gt;0">
                  <comment>@teststep Select and deselect all the layer after each other.</comment>
                  <RepeatSequence count="$(masks_number)" id="_1oHK"
                                  name="check_masks" var="m">
                    <ProcedureCall id="_1oHA"
                                   procedure="do_click.tree.layer_checkbox">
                      <variable name="layer_node1">$(layer_node_id)</variable>
                      <variable name="layer_node2">$(m)</variable>
                    </ProcedureCall>
                  </RepeatSequence>
                  <ProcedureCall id="_1oHV"
                                 procedure="do_click.run_the_Garbage_Collector"/>
                  <RepeatSequence count="$(masks_number)" id="_1oHY"
                                  name="check_masks" var="m">
                    <ProcedureCall id="_1oHZ"
                                   procedure="do_click.tree.layer_checkbox">
                      <variable name="layer_node1">$(layer_node_id)</variable>
                      <variable name="layer_node2">$(m)</variable>
                    </ProcedureCall>
                  </RepeatSequence>
                  <ProcedureCall id="_1oHa"
                                 procedure="do_click.run_the_Garbage_Collector">
                    <comment>@teststep Force a garbage collection.</comment>
                  </ProcedureCall>
                  <ElseSequence id="_1oHW">
                    <ServerScriptStep id="_1oHX" name="error">
                      <code>rc.logError("Layer manager is empty.")</code>
                    </ServerScriptStep>
                  </ElseSequence>
                </IfSequence>
                <ProcedureCall id="_1lHU" procedure="close.dialog">
                  <comment>@teststep Close Layer Manager</comment>
                </ProcedureCall>
              </TestStep>
            </IfSequence>
            <ProcedureCall disabled="true" id="_1lEt"
                           procedure="check.product.tree_number_elements">
              <variable name="number_elements">$(elements)</variable>
              <comment>@teststep Check elements in product tree.</comment>
            </ProcedureCall>
            <ProcedureCall id="_1l33" procedure="close.all_products"/>
          </IfSequence>
        </Procedure>
      </Package>
      <Procedure disabled="true" id="_1lHV"
                 name="open_band_compute_statistics_close_all">
        <ProcedureCall id="_1lHW"
                       procedure="utility.open_image_view_check_it"/>
        <ProcedureCall id="_1l4g" procedure="compute.band_statistics"/>
        <ProcedureCall id="_1l4h" procedure="close.all_products"/>
        <TryStep id="_1l4j" name="close_band_statistics_dialog">
          <ProcedureCall id="_1l4i" procedure="close.dialog"/>
          <CatchSequence exception="TestException" id="_1l4k" maxerror="0">
            <ProcedureCall id="_1l4l" procedure="close.modal_dialogs"/>
            <ProcedureCall id="_1l4m" procedure="close.dialog"/>
          </CatchSequence>
        </TryStep>
      </Procedure>
    </Package>
    <Package disabled="true" id="_6" name="compute">
      <Procedure id="_7" name="band_statistics">
        <ProcedureCall id="_1l5R" procedure="open.statistics_dialog"/>
        <ProcedureCall id="_1l8Z"
                       procedure="do_click.statistics_dialog.refreshButton"/>
        <ProcedureCall id="_1l8e"
                       procedure="wait.disappear.computing_statistics_progress monitor"/>
        <IfSequence id="_1lEr" test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_1lCf"
                         procedure="select.statistics_dialog.use_ROI_mask"/>
          <ProcedureCall id="_1lCg" procedure="select.statistics_dialog.mask">
            <variable name="mask">$(mask1)</variable>
          </ProcedureCall>
          <IfSequence id="_1lEs" test="&#34;$(mask2)&#34;&lt;&gt;&#34;&#34;">
            <ProcedureCall id="_1lCh"
                           procedure="select.statistics_dialog.mask">
              <variable name="mask">$(mask2)</variable>
            </ProcedureCall>
          </IfSequence>
          <ProcedureCall id="_1lCi"
                         procedure="do_click.statistics_dialog.refreshButton"/>
          <ProcedureCall id="_1lCj"
                         procedure="wait.disappear.computing_statistics_progress monitor"/>
        </IfSequence>
      </Procedure>
    </Package>
    <Package disabled="true" id="_1lFv" name="create">
      <Procedure id="_1lFw" name="new_pin">
        <variable name="pin_name"/>
        <variable name="pin_label"/>
        <variable name="lat"/>
        <variable name="long"/>
        <variable name="x"/>
        <variable name="y"/>
        <ProcedureCall id="_1lGw"
                       procedure="do_click.main_toolbar.views.pin_manager"/>
        <ProcedureCall id="_1lGY" procedure="wait.appear.dialog"/>
        <ProcedureCall id="_1lGb"
                       procedure="do_click.pin_manager.newPin_button"/>
        <ProcedureCall id="_1lGa" procedure="wait.appear.new_pin_dialog"/>
        <ProcedureCall id="_1lGf"
                       procedure="set.placemark_dialog.new_pin.name">
          <variable name="var">$(pin_name)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1lGg"
                       procedure="set.placemark_dialog.new_pin.label">
          <variable name="var">$(pin_label)</variable>
        </ProcedureCall>
        <IfSequence id="_1lGe"
                    test="&#34;$(lat)&#34;&lt;&gt;&#34;&#34;  and &#34;$(long)&#34;&lt;&gt;&#34;&#34;">
          <ProcedureCall id="_1lGh"
                         procedure="set.placemark_dialog.new_pin.latitude">
            <variable name="var">$(lat)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1lGi"
                         procedure="set.placemark_dialog.new_pin.longitude">
            <variable name="var">$(long)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1lGo"
                         procedure="do_click.pin_manager.new_pin_dialog.ok"/>
          <ElseifSequence id="_1lGl"
                          test="(&#34;$(lat)&#34;==&#34;&#34;  and &#34;$(long)&#34;==&#34;&#34;) and (&#34;$(x)&#34;&lt;&gt;&#34;&#34;  and &#34;$(x)&#34;&lt;&gt;&#34;&#34;)">
            <ProcedureCall id="_1lGj"
                           procedure="set.placemark_dialog.new_pin.pixelX">
              <variable name="var">$(x)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lGk"
                           procedure="set.placemark_dialog.new_pin.pixelY">
              <variable name="var">$(y)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lGr"
                           procedure="do_click.pin_manager.new_pin_dialog.ok"/>
          </ElseifSequence>
          <ElseSequence id="_1lGm">
            <ProcedureCall id="_1lGv" procedure="run-log.make_screensot">
              <variable name="iw_name">new_pin_can_not_be_created</variable>
            </ProcedureCall>
            <ProcedureCall id="_1lGc"
                           procedure="do_click.pin_manager.new_pin_dialog.cancel"/>
            <ProcedureCall id="_1lGd" procedure="close.dialog"/>
            <ProcedureCall id="_1lGu" procedure="run-log.logError">
              <variable name="message">a new pin can not be created</variable>
              <variable name="withScreenshots">false</variable>
            </ProcedureCall>
          </ElseSequence>
        </IfSequence>
      </Procedure>
    </Package>
    <Package disabled="true" id="_1oIW" name="gpt">
      <Procedure id="_1oKP" name="general_test_sequence">
        <ProcedureCall id="_1oKT" procedure="close.all_products"/>
        <IfSequence id="_1oKc"
                    test="&#34;$(other_formats )&#34;==&#34;true&#34;">
          <TestStep id="_1oMz" name="dimap">
            <SetGlobalStep id="_1oMy" varname="f">
              <default>dimap</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oN4" procedure="set.variable.output_format">
              <variable name="out_form">$(f)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1oKQ"
                           procedure="gpt.run_operator_check_output_file"/>
            <ProcedureCall id="_1oKS" procedure="close.all_products"/>
          </TestStep>
          <TestStep id="_1oMs" name="geotiff">
            <SetGlobalStep id="_1oMt" varname="f">
              <default>geotiff</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oMu" procedure="set.variable.output_format">
              <variable name="out_form">$(f)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1oMv"
                           procedure="gpt.run_operator_check_output_file"/>
            <ProcedureCall id="_1oMw" procedure="close.all_products"/>
          </TestStep>
          <TestStep id="_1oKl" name="hdf5">
            <SetGlobalStep id="_1oKm" varname="f">
              <default>hdf5</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oKn" procedure="set.variable.output_format">
              <variable name="out_form">$(f)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1oKo"
                           procedure="gpt.run_operator_check_output_file"/>
          </TestStep>
          <TestStep id="_1oKr" name="netCDF_CF">
            <SetGlobalStep id="_1oKs" varname="f">
              <default>netCDF_CF</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oKt" procedure="set.variable.output_format">
              <variable name="out_form">$(f)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1oKu"
                           procedure="gpt.run_operator_check_output_file"/>
            <ProcedureCall id="_1oKw" procedure="close.all_products"/>
          </TestStep>
          <TestStep id="_1oKx" name="netCDF4_CF">
            <SetGlobalStep id="_1oKy" varname="f">
              <default>netCDF4_CF</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oKz" procedure="set.variable.output_format">
              <variable name="out_form">$(f)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1oK+"
                           procedure="gpt.run_operator_check_output_file"/>
            <ProcedureCall id="_1oL0" procedure="close.all_products"/>
          </TestStep>
          <TestStep id="_1oL1" name="netCDF_beam">
            <SetGlobalStep id="_1oL2" varname="f">
              <default>netCDF_beam</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oL3" procedure="set.variable.output_format">
              <variable name="out_form">$(f)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1oL4"
                           procedure="gpt.run_operator_check_output_file"/>
            <ProcedureCall id="_1oL6" procedure="close.all_products"/>
          </TestStep>
          <TestStep id="_1oL7" name="netCDF4_beam">
            <SetGlobalStep id="_1oL8" varname="f">
              <default>netCDF4_beam</default>
            </SetGlobalStep>
            <ProcedureCall id="_1oL9" procedure="set.variable.output_format">
              <variable name="out_form">$(f)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1oLA"
                           procedure="gpt.run_operator_check_output_file"/>
            <ProcedureCall id="_1oLC" procedure="close.all_products"/>
          </TestStep>
          <ElseifSequence id="_1oLJ"
                          test="&#34;$(other_formats )&#34;==&#34;N1&#34;">
            <TestStep id="_1oLD" name="N1">
              <SetGlobalStep id="_1oLE" varname="f">
                <default>N1</default>
              </SetGlobalStep>
              <ProcedureCall id="_1oLF"
                             procedure="set.variable.output_format">
                <variable name="out_form">$(f)</variable>
              </ProcedureCall>
              <ProcedureCall id="_1oLG"
                             procedure="gpt.run_operator_check_output_file"/>
              <ProcedureCall id="_1oLI" procedure="close.all_products"/>
            </TestStep>
          </ElseifSequence>
          <ElseSequence id="_1oM+">
            <SetGlobalStep id="_1oM-" varname="f"/>
            <ProcedureCall id="_1oN3" procedure="set.variable.output_format">
              <variable name="out_form">$(f)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1oN1"
                           procedure="gpt.run_operator_check_output_file"/>
            <ProcedureCall id="_1oN2" procedure="close.all_products"/>
          </ElseSequence>
        </IfSequence>
      </Procedure>
      <Procedure id="_BpC" name="run_operator_check_output_file">
        <TestStep disabled="true" id="_1ocm" name="set_variables">
          <ProcedureCall id="_1ocn"
                         procedure="set.variable.variable_increase_on_1">
            <variable name="var_int">$(sleep_time)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1oco" procedure="set.variable.gpt_calling"/>
          <ProcedureCall id="_1ocp"
                         procedure="set.variable.path.input_data_directory"/>
          <TestStep id="_1ocr" name="set_iput">
            <IfSequence id="_1ocs"
                        test="&#34;$(dataInDir)&#34;&lt;&gt;&#34;&#34; and &#34;$(dataInDir2)&#34;&lt;&gt;&#34;&#34;  and &#34;$(dataInDir3)&#34;&lt;&gt;&#34;&#34; ">
              <SetGlobalStep id="_1oct" varname="input">
                <default>$(sourceOption)$(input_data_directory)$(dataInDir)/$(fileName) $(sourceOption2)$(input_data_directory)$(dataInDir2)/$(fileName2) $(sourceOption3)$(input_data_directory)$(dataInDir3)/$(fileName3)</default>
              </SetGlobalStep>
              <ElseifSequence id="_1ocu"
                              test="&#34;$(dataInDir)&#34;&lt;&gt;&#34;&#34; and &#34;$(dataInDir2)&#34;&lt;&gt;&#34;&#34;  and &#34;$(dataInDir3)&#34;==&#34;&#34; ">
                <SetGlobalStep id="_1ocv" varname="input">
                  <default>$(sourceOption)$(input_data_directory)$(dataInDir)/$(fileName) $(sourceOption2)$(input_data_directory)$(dataInDir2)/$(fileName2)</default>
                </SetGlobalStep>
              </ElseifSequence>
              <ElseifSequence id="_1ocw"
                              test="&#34;$(dataInDir)&#34;&lt;&gt;&#34;&#34; and &#34;$(dataInDir2)&#34;==&#34;&#34; and &#34;$(dataInDir3)&#34;==&#34;&#34; ">
                <SetGlobalStep id="_1ocx" varname="input">
                  <default>$(sourceOption)$(input_data_directory)$(dataInDir)/$(fileName)</default>
                </SetGlobalStep>
              </ElseifSequence>
            </IfSequence>
          </TestStep>
          <TestStep id="_1od2" name="set_workdirectory">
            <ProcedureCall id="_1od3"
                           procedure="set.variable.path.working_directory"/>
            <IfSequence id="_1od4" test="${qftest:windows}">
              <SetGlobalStep id="_1od5" varname="workdirectory">
                <default>$(working_directory)\bin</default>
              </SetGlobalStep>
              <ElseifSequence id="_1od6" name="MAC?"
                              test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                <SetGlobalStep id="_1od7" varname="workdirectory">
                  <default>$(working_directory)/bin</default>
                </SetGlobalStep>
              </ElseifSequence>
              <ElseSequence id="_1od8">
                <SetGlobalStep id="_1od9" varname="workdirectory">
                  <default>$(working_directory)/bin</default>
                </SetGlobalStep>
              </ElseSequence>
            </IfSequence>
          </TestStep>
          <TestStep id="_1odI"
                    name="set_graph_file_or_operator_and_parameters_file">
            <ProcedureCall id="_1odJ"
                           procedure="set.variable.output_data_directory">
              <variable name="output_dir">$(data_out_dir)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1odK"
                           procedure="set.variable.path.graph_file_dir">
              <variable name="xml_dir">$(xml_file_dir)</variable>
            </ProcedureCall>
            <ProcedureCall id="_1odL"
                           procedure="set.variable.path.parameters_file_dir"/>
            <IfSequence id="_1odM"
                        test="&#34;$(parameters_file)&#34;&lt;&gt;&#34;&#34;">
              <SetGlobalStep id="_1odN" varname="new_param">
                <default>-p $(parameters_file_dir)$(parameters_file) $(param)</default>
              </SetGlobalStep>
              <SetGlobalStep id="_1odO" varname="outfn">
                <default>$(wv)_use_parameters_file</default>
              </SetGlobalStep>
              <ElseifSequence id="_1odP"
                              test="&#34;$(xml_file)&#34;&lt;&gt;&#34;&#34;">
                <SetGlobalStep id="_1odQ" varname="new_param">
                  <default>$(graph_file_dir)$(xml_file).xml $(param)</default>
                </SetGlobalStep>
                <SetGlobalStep id="_1odR" varname="outfn">
                  <default>$(wv)_$(xml_file)</default>
                </SetGlobalStep>
              </ElseifSequence>
            </IfSequence>
          </TestStep>
          <ProcedureCall id="_1odS" procedure="set.variable.gpt_client_name">
            <variable name="client_name">gpt</variable>
          </ProcedureCall>
          <ServerScriptStep disabled="true" id="_1odT" name="print">
            <code>print "************ graph or parameters file = $(new_param)*****************"  </code>
          </ServerScriptStep>
        </TestStep>
        <IfSequence disabled="true" id="_1odU" postdelay="2000"
                    test="&#34;$(supported_format)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1odV" procedure="set.variable.gpt_client_name"/>
          <TestStep id="_1odW" name="compose_command_line ">
            <comment>@teststep Set Command Line</comment>
            <SetGlobalStep id="_1odX" varname="gpt_commando">
              <default>$(gpt_calling) $(new_param) $(of) -t output_data_directory)$(outfn).$(fr) $(input)</default>
            </SetGlobalStep>
          </TestStep>
          <TestStep id="_1odY" name="run_operator">
            <comment>$(gpt_commando)</comment>
            <ShellClientStarter client="$(gpt_client_name)"
                                command="$(gpt_commando)"
                                directory="$(workdirectory)" id="_1odZ"
                                postdelay="10000"/>
            <ProcedureCall id="_1oda" procedure="run-log.log_client_output">
              <variable name="client_name">$(gpt_client_name)</variable>
            </ProcedureCall>
          </TestStep>
          <ProcedureCall id="_1odb" procedure="wait.program_end">
            <variable name="waiting_period">$(wv)0</variable>
            <variable name="client_name">$(gpt_client_name)</variable>
          </ProcedureCall>
          <TestStep id="_1odc" name="check_output">
            <TestStep id="_1odd" name="set_output_file">
              <IfSequence id="_1ode" test="${qftest:windows}">
                <SetGlobalStep id="_1odf" varname="outfile">
                  <default>$(data_directory2)out\\$(data_out_dir)\\$(outfn).$(fr)</default>
                </SetGlobalStep>
                <ElseifSequence id="_1odg" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                  <SetGlobalStep id="_1odh" varname="outfile">
                    <default>$(data_directory)out/$(data_out_dir)/$(outfn).$(fr)</default>
                  </SetGlobalStep>
                </ElseifSequence>
                <ElseSequence id="_1odi">
                  <SetGlobalStep id="_1odj" varname="outfile">
                    <default>$(data_directory)out/$(data_out_dir)/$(outfn).$(fr)</default>
                  </SetGlobalStep>
                </ElseSequence>
              </IfSequence>
            </TestStep>
            <ProcedureCall id="_1odk"
                           procedure="check.external_files.file_exists_setGlobal">
              <variable name="fileName">$(outfile)</variable>
            </ProcedureCall>
            <IfSequence id="_1odl"
                        test="&#34;$(fileExists)&#34;==&#34;False&#34;">
              <TestStep id="_1odm" name="wait" postdelay="5000">
                <ProcedureCall id="_1odn" procedure="wait.program_end">
                  <variable name="waiting_period">$(wv)00</variable>
                  <variable name="client_name">$(gpt_client_name)</variable>
                </ProcedureCall>
              </TestStep>
              <ProcedureCall id="_1odo"
                             procedure="check.external_files.file_exists_setGlobal">
                <variable name="fileName">$(outfile)</variable>
              </ProcedureCall>
            </IfSequence>
            <IfSequence id="_1odp"
                        test="&#34;$(fileExists)&#34;==&#34;True&#34;">
              <IfSequence id="_1odq"
                          test="&#34;$(fr)&#34;&lt;&gt;&#34;h5&#34;">
                <ProcedureCall id="_1odr"
                               procedure="gpt.open_data_in_snap_check">
                  <variable name="file_name">$(outfn)</variable>
                  <variable name="format">$(fr)</variable>
                </ProcedureCall>
              </IfSequence>
              <ElseSequence id="_1ods">
                <ProcedureCall id="_1odt" procedure="run-log.logError">
                  <variable name="message">$(outfn).$(fr) is not processed</variable>
                  <variable name="withScreenshots">false</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </TestStep>
        </IfSequence>
        <TestStep id="_BpD" name="set_variables">
          <ProcedureCall id="_1oHu"
                         procedure="set.variable.variable_increase_on_1">
            <variable name="var_int">$(sleep_time)</variable>
          </ProcedureCall>
          <ProcedureCall id="_1oHv" procedure="set.variable.gpt_calling"/>
          <ProcedureCall id="_1ocP" procedure="set.variable.path"/>
          <TestStep id="_1oI4" name="set_iput">
            <IfSequence id="_1oHz"
                        test="&#34;$(dataInDir)&#34;&lt;&gt;&#34;&#34; and &#34;$(dataInDir2)&#34;&lt;&gt;&#34;&#34;  and &#34;$(dataInDir3)&#34;&lt;&gt;&#34;&#34; ">
              <SetGlobalStep id="_1oH+" varname="input">
                <default>$(sourceOption)${path:input_data_directory}$(dataInDir)/$(fileName) $(sourceOption2)${path:input_data_directory}$(dataInDir2)/$(fileName2) $(sourceOption3)${path:input_data_directory}$(dataInDir3)/$(fileName3)</default>
              </SetGlobalStep>
              <ElseifSequence id="_1oH-"
                              test="&#34;$(dataInDir)&#34;&lt;&gt;&#34;&#34; and &#34;$(dataInDir2)&#34;&lt;&gt;&#34;&#34;  and &#34;$(dataInDir3)&#34;==&#34;&#34; ">
                <SetGlobalStep id="_1oI3" varname="input">
                  <default>$(sourceOption)${path:input_data_directory}$(dataInDir)/$(fileName) $(sourceOption2)${path:input_data_directory}$(dataInDir2)/$(fileName2)</default>
                </SetGlobalStep>
              </ElseifSequence>
              <ElseifSequence id="_1oI1"
                              test="&#34;$(dataInDir)&#34;&lt;&gt;&#34;&#34; and &#34;$(dataInDir2)&#34;==&#34;&#34; and &#34;$(dataInDir3)&#34;==&#34;&#34; ">
                <SetGlobalStep id="_1oI2" varname="input">
                  <default>$(sourceOption)${path:input_data_directory}$(dataInDir)/$(fileName)</default>
                </SetGlobalStep>
              </ElseifSequence>
            </IfSequence>
          </TestStep>
          <TestStep id="_1oKB"
                    name="set_graph_file_or_operator_and_parameters_file">
            <IfSequence id="_1oIB"
                        test="&#34;$(parameters_file)&#34;&lt;&gt;&#34;&#34;">
              <SetGlobalStep id="_1oIA" varname="new_param">
                <default>-p ${path:parameters_file_dir}$(parameters_file) $(param)</default>
              </SetGlobalStep>
              <SetGlobalStep id="_1oIU" varname="outfn">
                <default>$(wv)_use_parameters_file</default>
              </SetGlobalStep>
              <ElseifSequence id="_1oIC"
                              test="&#34;$(xml_file)&#34;&lt;&gt;&#34;&#34;">
                <SetGlobalStep id="_1oID" varname="new_param">
                  <default>${path:graph_file_dir}$(xml_file).xml $(param)</default>
                </SetGlobalStep>
                <SetGlobalStep id="_1oIT" varname="outfn">
                  <default>$(wv)_$(xml_file)</default>
                </SetGlobalStep>
              </ElseifSequence>
            </IfSequence>
          </TestStep>
          <ProcedureCall id="_1oNF" procedure="set.variable.gpt_client_name">
            <variable name="client_name">gpt</variable>
          </ProcedureCall>
          <ServerScriptStep disabled="true" id="_1l6D" name="print">
            <code>print "************ graph or parameters file = $(new_param)*****************"  </code>
          </ServerScriptStep>
        </TestStep>
        <IfSequence id="_BpO" postdelay="2000"
                    test="&#34;$(supported_format)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1oNG" procedure="set.variable.gpt_client_name"/>
          <TestStep id="_1kI9" name="compose_command_line ">
            <comment>@teststep Set Command Line</comment>
            <SetGlobalStep id="_1kKB" varname="gpt_commando">
              <default>$(gpt_calling) $(new_param) $(of) -t ${path:output_data_directory}$(outfn).$(fr) $(input)</default>
            </SetGlobalStep>
          </TestStep>
          <TestStep id="_1kIN" name="run_operator">
            <comment>$(gpt_commando)</comment>
            <ShellClientStarter client="$(gpt_client_name)"
                                command="$(gpt_commando)"
                                directory="${path:sut_bin_directory}"
                                id="_1oNB" postdelay="10000"/>
            <ProcedureCall id="_1oIr" procedure="run-log.log_client_output">
              <variable name="client_name">$(gpt_client_name)</variable>
            </ProcedureCall>
          </TestStep>
          <ProcedureCall id="_1oIV" procedure="wait.program_end">
            <variable name="waiting_period">$(wv)0</variable>
            <variable name="client_name">$(gpt_client_name)</variable>
          </ProcedureCall>
          <TestStep id="_1kIa" name="check_output">
            <TestStep id="_1oLN" name="set_output_file">
              <IfSequence id="_1oLK" test="${qftest:windows}">
                <SetGlobalStep id="_1oLO" varname="outfile">
                  <default>${path:output_data_directory2}$(data_out_dir)\\$(outfn).$(fr)</default>
                </SetGlobalStep>
                <ElseifSequence id="_1oLL" name="MAC?"
                                test="'${system:os.name}' .find('Mac OS X')&gt;=0">
                  <SetGlobalStep id="_1oLP" varname="outfile">
                    <default>${path:output_data_directory}$(data_out_dir)/$(outfn).$(fr)</default>
                  </SetGlobalStep>
                </ElseifSequence>
                <ElseSequence id="_1oLM">
                  <SetGlobalStep id="_1oLQ" varname="outfile">
                    <default>${path:output_data_directory}$(data_out_dir)/$(outfn).$(fr)</default>
                  </SetGlobalStep>
                </ElseSequence>
              </IfSequence>
            </TestStep>
            <ProcedureCall id="_1oIs"
                           procedure="check.external_files.file_exists_setGlobal">
              <variable name="fileName">$(outfile)</variable>
            </ProcedureCall>
            <IfSequence id="_Bye"
                        test="&#34;$(fileExists)&#34;==&#34;False&#34;">
              <TestStep id="_Byf" name="wait" postdelay="5000">
                <ProcedureCall id="_1oIt" procedure="wait.program_end">
                  <variable name="waiting_period">$(wv)00</variable>
                  <variable name="client_name">$(gpt_client_name)</variable>
                </ProcedureCall>
              </TestStep>
              <ProcedureCall id="_1oLR"
                             procedure="check.external_files.file_exists_setGlobal">
                <variable name="fileName">$(outfile)</variable>
              </ProcedureCall>
            </IfSequence>
            <IfSequence id="_1oJ6"
                        test="&#34;$(fileExists)&#34;==&#34;True&#34;">
              <IfSequence id="_1oMr"
                          test="&#34;$(fr)&#34;&lt;&gt;&#34;h5&#34;">
                <ProcedureCall id="_1oKJ"
                               procedure="gpt.open_data_in_snap_check">
                  <variable name="file_name">$(outfn)</variable>
                  <variable name="format">$(fr)</variable>
                </ProcedureCall>
              </IfSequence>
              <ElseSequence id="_1oJA">
                <ProcedureCall id="_1oJ9" procedure="run-log.logError">
                  <variable name="message">$(outfn).$(fr) is not processed</variable>
                  <variable name="withScreenshots">false</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
          </TestStep>
        </IfSequence>
      </Procedure>
      <Procedure id="_1oJB" name="open_data_in_snap_check">
        <variable name="file_name"/>
        <variable name="format"/>
        <ProcedureCall id="_1oMx" procedure="open.product">
          <variable name="prod_dir">$(data_out_dir)</variable>
          <variable name="prod">$(file_name).$(fr)</variable>
          <variable name="in_out">out</variable>
          <variable name="product_type"/>
          <comment> 	 
</comment>
        </ProcedureCall>
        <ProcedureCall id="_1oKC" procedure="wait.appear.product_is_opened"/>
        <ProcedureCall id="_1oLa" procedure="check.product.not_opened"/>
        <IfSequence id="_1oLb"
                    test="&#34;$(not_opened)&#34;==&#34;false&#34;">
          <ProcedureCall id="_1oLc"
                         procedure="utility.open_image_view_check_it">
            <comment>@teststep Open image view and check it.</comment>
          </ProcedureCall>
          <TestStep id="_1oLd" name="check_world_map">
            <comment>@teststep Check World Map.</comment>
            <ProcedureCall id="_1oLe"
                           procedure="do_click.main_toolbar.views.worldmap">
              <comment>@teststep Open world map.</comment>
            </ProcedureCall>
            <ProcedureCall id="_1oLf" procedure="close.dialog">
              <comment>@teststep Close World Map.</comment>
            </ProcedureCall>
          </TestStep>
          <TestStep id="_1oMH" name="check_masks_and_layers">
            <IfSequence id="_1oLg"
                        test="&#34;$(mask1)&#34;&lt;&gt;&#34;&#34; and &#34;$(output_netcdf_cf)&#34;==&#34;false&#34;">
              <ProcedureCall id="_1oMb"
                             procedure="check.masks_layers.all_mask_and_layer"/>
            </IfSequence>
          </TestStep>
          <ProcedureCall id="_1oMF"
                         procedure="check.product.tree_number_elements">
            <variable name="number_elements">$(elements)</variable>
            <comment>@teststep Check elements in product tree.</comment>
          </ProcedureCall>
          <TestStep id="_1kl3" name="check_metadata">
            <IfSequence id="_1l0h"
                        test="&#34;$(output_netcdf_cf)&#34;==&#34;true&#34;">
              <SetGlobalStep id="_1l0i" varname="mn1">
                <default>Global_Attributes</default>
              </SetGlobalStep>
              <ElseifSequence id="_1l0j" test="&#34;$(fr)&#34;==&#34;N1&#34;">
                <SetGlobalStep id="_1l0k" varname="mn1">
                  <default>MPH</default>
                </SetGlobalStep>
              </ElseifSequence>
              <ElseifSequence disabled="true" id="_1oK7"
                              test="&#34;$(check_timeseries)&#34;==&#34;true&#34;">
                <SetGlobalStep id="_1l4n" varname="mn1">
                  <default>TIME_SERIES</default>
                </SetGlobalStep>
              </ElseifSequence>
              <ElseSequence id="_1l0l">
                <SetGlobalStep id="_1l0m" varname="mn1">
                  <default>Processing_Graph</default>
                </SetGlobalStep>
              </ElseSequence>
            </IfSequence>
            <ProcedureCall id="_1oMq"
                           procedure="utility.open_metadata_check_it">
              <variable name="metadata_name">$(mn1)</variable>
            </ProcedureCall>
          </TestStep>
        </IfSequence>
      </Procedure>
    </Package>
    <Package id="_1l2s" name="import_data">
      <Procedure id="_1lWC" name="raster_data">
        <variable name="import_data"/>
        <ProcedureCall id="_1oUI" procedure="set.variable.product_attributes">
          <variable name="prod_type">$(import_data)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1oRE" procedure="open.product">
          <variable name="prod_dir">$(dataInDir)</variable>
          <variable name="in_out">in</variable>
          <variable name="prod">$(fileName)</variable>
          <variable name="product_type">$(import_data)</variable>
          <comment>
</comment>
        </ProcedureCall>
        <BasicSequence disabled="true" id="_1oUH"
                       name="if_import_is_working_again">
          <IfSequence id="_1oaH"
                      test="'${system:os.name}' .find('Mac OS X')&gt;=0">
            <ProcedureCall id="_1oaj" procedure="open.product">
              <variable name="prod_dir">$(dataInDir)</variable>
              <variable name="prod">$(fileName)</variable>
              <variable name="product_type">$(import_data)</variable>
              <comment> 	 
</comment>
            </ProcedureCall>
            <ElseSequence id="_1oak">
              <IfSequence id="_1oaI"
                          test="&#34;$(menu_item)&#34;&lt;&gt;&#34;&#34;">
                <TryStep id="_1oaJ" name="open_import_dialog">
                  <comment>@teststep Open 'Import Product' dialog</comment>
                  <IfSequence id="_1oaK"
                              test="&#34;$(product_group)&#34;==&#34;&#34;">
                    <ProcedureCall id="_1oaL"
                                   procedure="utility.raster_data.other_import">
                      <variable name="menu_item">$(menu_item)</variable>
                    </ProcedureCall>
                    <ElseifSequence id="_1oaM"
                                    test="&#34;$(product_group)&#34;==&#34;multispectral&#34;">
                      <ProcedureCall id="_1oaN"
                                     procedure="utility.raster_data.import_multispectral">
                        <variable name="menu_item">$(menu_item)</variable>
                      </ProcedureCall>
                    </ElseifSequence>
                    <ElseifSequence id="_1oaO"
                                    test="&#34;$(product_group)&#34;==&#34;generic&#34;">
                      <ProcedureCall id="_1oaP"
                                     procedure="utility.raster_data.import_generic">
                        <variable name="menu_item">$(menu_item)</variable>
                      </ProcedureCall>
                    </ElseifSequence>
                    <ElseifSequence id="_1oaQ"
                                    test="&#34;$(product_group)&#34;==&#34;sar&#34;">
                      <ProcedureCall id="_1oaR"
                                     procedure="utility.raster_data.import_sar">
                        <variable name="menu_item">$(menu_item)</variable>
                      </ProcedureCall>
                    </ElseifSequence>
                  </IfSequence>
                  <ProcedureCall id="_1oaS"
                                 procedure="wait.appear.import_dialog"/>
                  <ProcedureCall id="_1oaT"
                                 procedure="utility.import.fill_dialog"/>
                  <CatchSequence exception="TestException" id="_1oaU"
                                 maxerror="0">
                    <TryStep id="_1oaV">
                      <IfSequence id="_1oaW"
                                  test="&#34;$(product_group)&#34;==&#34;&#34;">
                        <ProcedureCall id="_1oaX"
                                       procedure="utility.raster_data.other_import">
                          <variable name="menu_item">$(menu_item)</variable>
                        </ProcedureCall>
                        <ElseifSequence id="_1oaY"
                                        test="&#34;$(product_group)&#34;==&#34;multispectral&#34;">
                          <ProcedureCall id="_1oaZ"
                                         procedure="utility.raster_data.import_multispectral">
                            <variable name="menu_item">$(menu_item)</variable>
                          </ProcedureCall>
                        </ElseifSequence>
                        <ElseifSequence id="_1oaa"
                                        test="&#34;$(product_group)&#34;==&#34;generic&#34;">
                          <ProcedureCall id="_1oab"
                                         procedure="utility.raster_data.import_generic">
                            <variable name="menu_item">$(menu_item)</variable>
                          </ProcedureCall>
                        </ElseifSequence>
                        <ElseifSequence id="_1oac"
                                        test="&#34;$(product_group)&#34;==&#34;sar&#34;">
                          <ProcedureCall id="_1oad"
                                         procedure="utility.raster_data.import_sar">
                            <variable name="menu_item">$(menu_item)</variable>
                          </ProcedureCall>
                        </ElseifSequence>
                      </IfSequence>
                      <ProcedureCall id="_1oae"
                                     procedure="wait.appear.import_dialog"/>
                      <ProcedureCall id="_1oaf"
                                     procedure="utility.import.fill_dialog"/>
                      <CatchSequence exception="TestException" id="_1oag"
                                     maxerror="0">
                        <ProcedureCall id="_1oah"
                                       procedure="run-log.eroor_message.dialog_Import_Product_does_not_appear"/>
                      </CatchSequence>
                    </TryStep>
                  </CatchSequence>
                </TryStep>
                <ElseSequence id="_1oal">
                  <ProcedureCall id="_1oam" procedure="open.product">
                    <variable name="prod_dir">$(dataInDir)</variable>
                    <variable name="in_out">in</variable>
                    <variable name="prod">$(fileName)</variable>
                    <variable name="product_type">$(import_data)</variable>
                    <comment>
</comment>
                  </ProcedureCall>
                </ElseSequence>
              </IfSequence>
            </ElseSequence>
          </IfSequence>
        </BasicSequence>
        <ProcedureCall id="_1oap" procedure="check.product.not_opened"/>
        <IfSequence id="_1oaq" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1oao" procedure="run-log.logError">
            <variable name="message">$(fileName) did not appear</variable>
            <variable name="withScreenshots">true</variable>
          </ProcedureCall>
        </IfSequence>
      </Procedure>
    </Package>
    <Package id="_1l8Q" name="preparation">
      <Procedure id="_1l5e" name="application_for_test">
        <comment>@teststep Test preparation</comment>
        <ProcedureCall id="_1l5g" procedure="open.product">
          <variable name="prod_dir">$(dataInDir)</variable>
          <variable name="prod">$(fileName)</variable>
          <variable name="in_out"/>
          <variable name="product_type"/>
          <comment> 	 
</comment>
        </ProcedureCall>
        <ProcedureCall id="_1l5h" procedure="wait.appear.product_is_opened"/>
        <ProcedureCall id="_1l5i" procedure="select.product_tree.band">
          <variable name="prod_id">0</variable>
          <variable name="group_id">$(group_id1)</variable>
          <variable name="view_id">$(view_Id1)</variable>
          <variable name="band">$(bandName)</variable>
          <comment>
</comment>
        </ProcedureCall>
        <ProcedureCall id="_1oar"
                       procedure="utility.open_image_view_check_it">
          <comment>@teststep Open image view and check it.</comment>
        </ProcedureCall>
      </Procedure>
      <Procedure disabled="true" id="_1oHp" name="environment_for_gpt_test">
        <variable name="out_dir"/>
        <ProcedureCall id="_1oN9" procedure="cleaning.global_variables"/>
        <SetGlobalStep id="_1oND" varname="client_nr">
          <default>0</default>
        </SetGlobalStep>
        <ProcedureCall id="_1oNA" procedure="set.variable.client_senbox"/>
        <ProcedureCall id="_1odu" procedure="set.variable.path"/>
        <ProcedureCall id="_1oHq"
                       procedure="set.variable.output_data_directory">
          <variable name="output_dir">$(out_dir)</variable>
        </ProcedureCall>
        <TryStep id="_1oN7" name="remove_directory">
          <ProcedureCall id="_1oHr" procedure="shellutils.removeDirectory">
            <variable name="directory">$(output_data_directory)</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1oN8" maxerror="0"/>
        </TryStep>
        <TryStep id="_1oN5" name="mkdir">
          <ProcedureCall id="_1oHs" procedure="shellutils.mkdir">
            <variable name="directory">$(output_data_directory)</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1oN6" maxerror="0"/>
        </TryStep>
      </Procedure>
    </Package>
    <Package id="_1l2b" name="utility">
      <Package id="_1oZk" name="raster_data">
        <Procedure id="_1oZh" name="import_multispectral">
          <variable name="menu_item"/>
          <ProcedureCall id="_1oZm" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1oZn"
                         procedure="do_click.menu.file.importRasterData"/>
          <ProcedureCall id="_1oZo"
                         procedure="do_click.menu.file.rasterData.multispectral"/>
          <ProcedureCall id="_1oZp"
                         procedure="do_click.menu.file.rasterData.multispectral.$(menu_item)"/>
        </Procedure>
        <Procedure id="_1oZi" name="import_generic">
          <variable name="menu_item"/>
          <ProcedureCall id="_1oZu" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1oZv"
                         procedure="do_click.menu.file.importRasterData"/>
          <ProcedureCall id="_1oZw"
                         procedure="do_click.menu.file.rasterData.generic"/>
          <ProcedureCall id="_1oZx"
                         procedure="do_click.menu.file.rasterData.generic.$(menu_item)"/>
        </Procedure>
        <Procedure id="_1oZj" name="import_sar">
          <variable name="menu_item"/>
          <ProcedureCall id="_1oZq" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1oZr"
                         procedure="do_click.menu.file.importRasterData"/>
          <ProcedureCall id="_1oZs"
                         procedure="do_click.menu.file.rasterData.sar"/>
          <ProcedureCall id="_1oZt"
                         procedure="do_click.menu.file.rasterData.sar.$(menu_item)"/>
        </Procedure>
        <Procedure id="_1oZl" name="other_import">
          <variable name="menu_item"/>
          <ProcedureCall id="_1oZy" procedure="do_click.menu.file"/>
          <ProcedureCall id="_1oZz"
                         procedure="do_click.menu.file.importRasterData"/>
          <ProcedureCall id="_1oZ+"
                         procedure="do_click.menu.file.rasterData.$(menu_item)"/>
        </Procedure>
      </Package>
      <Procedure id="_1l38" name="open_image_view_check_it">
        <ProcedureCall id="_1l3B" procedure="check.product.not_opened"/>
        <IfSequence id="_1kk7" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1l3C"
                         procedure="wait.appear.product_is_opened"/>
        </IfSequence>
        <ProcedureCall id="_1l3D" procedure="check.product.not_opened"/>
        <IfSequence id="_1l3v" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1l3w" predelay="3000"
                         procedure="wait.appear.product_is_opened"/>
        </IfSequence>
        <ProcedureCall id="_1l3x" procedure="check.product.not_opened"/>
        <IfSequence id="_1l3E" test="&#34;$(not_opened)&#34;==&#34;true&#34;">
          <ProcedureCall id="_1l3F"
                         procedure="wait.appear.product_is_opened"/>
          <ElseSequence id="_1l3G">
            <IfSequence id="_1lFb"
                        test="&#34;$(view_Id1)&#34;&lt;&gt;&#34;&#34;">
              <ProcedureCall disabled="true" id="_1l3H"
                             procedure="select.product_tree.band">
                <variable name="prod_id">0</variable>
                <variable name="group_id">$(group_id1)</variable>
                <variable name="view_id">$(view_Id1)</variable>
                <variable name="band">$(bandName)</variable>
                <comment>
</comment>
              </ProcedureCall>
              <ProcedureCall disabled="true" id="_1oQc"
                             procedure="open.image_view"/>
              <ProcedureCall id="_1oUT"
                             procedure="do_click.tree.doubleclick_product_node">
                <variable name="prod_id">0</variable>
                <variable name="group_id">$(group_id1)</variable>
                <variable name="view_id">$(view_Id1)</variable>
                <variable name="band">$(bandName)</variable>
              </ProcedureCall>
              <ProcedureCall id="_1lFe"
                             procedure="wait.disappear.creating_image_progress monitor">
                <variable name="bandName">$(bandName)</variable>
              </ProcedureCall>
              <TryStep id="_1oUQ" name="check_image_view">
                <ProcedureCall id="_1oQd" procedure="check.view.visible">
                  <variable name="visible">true</variable>
                </ProcedureCall>
                <ProcedureCall id="_1oUM"
                               procedure="check.view.button_maximize_window_visible">
                  <variable name="visible">true</variable>
                </ProcedureCall>
                <ProcedureCall id="_1oUN"
                               procedure="check.view.button_show_opened_documents_list_visible">
                  <variable name="visible">true</variable>
                </ProcedureCall>
                <ProcedureCall id="_1oUO"
                               procedure="check.view.button_scroll_documents_right_visible">
                  <variable name="visible">true</variable>
                </ProcedureCall>
                <ProcedureCall id="_1oUP"
                               procedure="check.view.button_scroll_documents_left_visible">
                  <variable name="visible">true</variable>
                </ProcedureCall>
                <CatchSequence exception="TestException" id="_1oUR"
                               maxerror="0">
                  <ProcedureCall id="_1oUS" procedure="run-log.logError">
                    <variable name="message">image view is not appear</variable>
                    <variable name="withScreenshots">true</variable>
                  </ProcedureCall>
                </CatchSequence>
              </TryStep>
            </IfSequence>
          </ElseSequence>
        </IfSequence>
      </Procedure>
    </Package>
    <Package id="_1oQf" name="pixel_geo_coding">
      <Procedure id="_1oQe" name="attach">
        <variable name="prod_id"/>
        <ProcedureCall id="_1oas" procedure="select.product_tree.product">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <TryStep id="_1oQv" name="open_dialog_attach_pixel_geo_coding">
          <ProcedureCall id="_1oQq"
                         procedure="menu.utility.attach_pixel_geo-coding"/>
          <ProcedureCall id="_1oat"
                         procedure="do_click.tools.pixel_geocoding.attach.ok_button"/>
          <CatchSequence exception="TestException" id="_1oQw" maxerror="0">
            <ProcedureCall disabled="true" id="_1oQz"
                           procedure="run-log.eroor_message.dialog_does_not_appear">
              <variable name="dialog">Attach pixel geo-coding</variable>
            </ProcedureCall>
          </CatchSequence>
        </TryStep>
        <TryStep id="_1ob3"
                 name="click_button_Yes_in_do_you_really_want_to_continue_dialog">
          <ProcedureCall id="_1ob5"
                         procedure="wait.appear.tools.dialogSNAP_Attach_Pixel_Geo-Coding"/>
          <ProcedureCall id="_1ob2"
                         procedure="do_click.tools.pixel_geocoding.attach.do_you_really_want_to_continue_dialog.yes_button"/>
          <CatchSequence exception="TestException" id="_1ob4" maxerror="0"/>
        </TryStep>
        <TryStep id="_1ob7"
                 name="click_button_OK_in_pixel_geocoding_has_been_attached_dialog">
          <ProcedureCall id="_1ob8"
                         procedure="wait.appear.tools.dialogSNAP_Attach_Pixel_Geo-Coding"/>
          <ProcedureCall id="_1ob6"
                         procedure="do_click.tools.pixel_geocoding.attach.do_you_really_want_to_continue_dialog.cancel_button"/>
          <CatchSequence exception="TestException" id="_1obA" maxerror="0"/>
        </TryStep>
      </Procedure>
      <Procedure id="_1oQg" name="detach">
        <variable name="prod_id"/>
        <ProcedureCall id="_1ob1" procedure="select.product_tree.product">
          <variable name="prod_id">$(prod_id)</variable>
        </ProcedureCall>
        <TryStep id="_1oQx" name="open_dialog_detach_pixel_geo_coding">
          <ProcedureCall id="_1oQs"
                         procedure="menu.utility.detach_pixel_geo-coding"/>
          <ProcedureCall id="_1obK"
                         procedure="do_click.tools.pixel_geocoding.detach.ok_button"/>
          <CatchSequence exception="TestException" id="_1oQy" maxerror="0">
            <ProcedureCall disabled="true" id="_1oQ+"
                           procedure="run-log.eroor_message.dialog_does_not_appear">
              <variable name="dialog">Detach pixel geo-coding</variable>
            </ProcedureCall>
          </CatchSequence>
        </TryStep>
      </Procedure>
    </Package>
    <Package id="_1obL" name="draw">
      <Procedure id="_1obH" name="line">
        <ProcedureCall id="_1ocJ"
                       procedure="do_click.main_toolbar.tools.draw_line"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obO" modifiers="16"
                        x="427" y="204"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obP" modifiers="16"
                        x="611" y="372"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obQ" modifiers="16"
                        x="611" y="372"/>
      </Procedure>
      <Procedure id="_1obR" name="polyline">
        <ProcedureCall id="_1ocK"
                       procedure="do_click.main_toolbar.tools.draw_polyline"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1obT" modifiers="0" x="514"
                        y="202"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obU" modifiers="16"
                        x="514" y="202"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obV" modifiers="16"
                        x="641" y="183"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obW" modifiers="16"
                        x="641" y="183"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obX" modifiers="16" x="641"
                        y="183"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obY" modifiers="16" x="677"
                        y="296"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obZ" modifiers="16" x="533"
                        y="397"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1oba" modifiers="16" x="482"
                        y="273"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obb" modifiers="16" x="558"
                        y="190"/>
        <MouseEventStep clicks="2" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obc" modifiers="16" x="558"
                        y="190"/>
      </Procedure>
      <Procedure id="_1obd" name="rectangle">
        <ProcedureCall id="_1ocL"
                       procedure="do_click.main_toolbar.tools.draw_rectangle"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1obf" modifiers="0" x="442"
                        y="206"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obg" modifiers="16"
                        x="442" y="206"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obh" modifiers="16"
                        x="632" y="293"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obi" modifiers="16"
                        x="632" y="293"/>
      </Procedure>
      <Procedure id="_1obj" name="ellipse">
        <ProcedureCall id="_1ocM"
                       procedure="do_click.main_toolbar.tools.draw_ellipse"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1obl" modifiers="0" x="524"
                        y="201"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obm" modifiers="16"
                        x="524" y="201"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obn" modifiers="16"
                        x="695" y="384"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obo" modifiers="16"
                        x="695" y="384"/>
      </Procedure>
      <Procedure id="_1obp" name="polygon">
        <ProcedureCall id="_1ocN"
                       procedure="do_click.main_toolbar.tools.draw_polygon"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1obr" modifiers="0" x="540"
                        y="204"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obs" modifiers="16"
                        x="540" y="204"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1obt" modifiers="16"
                        x="639" y="175"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1obu" modifiers="16"
                        x="639" y="175"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obv" modifiers="16" x="639"
                        y="175"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obw" modifiers="16" x="711"
                        y="321"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1obx" modifiers="16" x="549"
                        y="410"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1oby" modifiers="0" x="457"
                        y="449"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1obz" modifiers="16"
                        x="457" y="449"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1ob+" modifiers="16"
                        x="457" y="441"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1ob-" modifiers="16"
                        x="457" y="441"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1oc0" modifiers="16" x="472"
                        y="313"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MOVED" id="_1oc1" modifiers="0" x="509"
                        y="203"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_PRESSED" id="_1oc2" modifiers="16"
                        x="509" y="203"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_DRAGGED" id="_1oc3" modifiers="16"
                        x="508" y="198"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_RELEASED" id="_1oc4" modifiers="16"
                        x="508" y="198"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1oc5" modifiers="16" x="560"
                        y="176"/>
        <MouseEventStep clicks="2" client="$(client)"
                        component="NbMainWindow.ProductSceneViewTopComponent_2.panel"
                        event="MOUSE_MPRC" id="_1oc6" modifiers="16" x="560"
                        y="176"/>
      </Procedure>
      <Procedure id="_1oc8" name="new_vector_data_container">
        <ProcedureCall id="_1ocO"
                       procedure="do_click.main_toolbar.tools.create_new_vector_data_container"/>
        <ComponentWaiter client="$(client)"
                         component="dialogNew_Vector_Data_Container"
                         id="_1ocA"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="dialogNew_Vector_Data_Container.name"
                        event="MOUSE_MOVED" id="_1ocB" modifiers="0" x="72"
                        y="7"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogNew_Vector_Data_Container.name"
                        event="MOUSE_PRESSED" id="_1ocC" modifiers="16" x="72"
                        y="7"/>
        <MouseEventStep clicks="0" client="$(client)"
                        component="dialogNew_Vector_Data_Container"
                        event="MOUSE_DRAGGED" id="_1ocD" modifiers="16"
                        x="-184" y="24"/>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogNew_Vector_Data_Container"
                        event="MOUSE_RELEASED" id="_1ocE" modifiers="16"
                        x="-184" y="24"/>
        <TextInputStep clear="true" client="$(client)"
                       component="dialogNew_Vector_Data_Container.name"
                       id="_1ocF">
          <text>test_geometry</text>
        </TextInputStep>
        <CheckStringStep client="$(client)"
                         component="dialogNew_Vector_Data_Container.MyModalDialog.help"
                         id="_1ocG">
          <text>Help</text>
        </CheckStringStep>
        <CheckStringStep client="$(client)"
                         component="dialogNew_Vector_Data_Container.MyModalDialog.cancel"
                         id="_1ocH">
          <text>Cancel</text>
        </CheckStringStep>
        <MouseEventStep clicks="1" client="$(client)"
                        component="dialogNew_Vector_Data_Container.MyModalDialog.ok"
                        event="MOUSE_MPRC" id="_1ocI" modifiers="16"/>
      </Procedure>
    </Package>
  </PackageRoot>
  <ExtraSequence id="_4">
    <SetGlobalStep id="_1oZC" varname="product_group"/>
    <SetGlobalStep id="_1muD" varname="reader">
      <default>All Files</default>
    </SetGlobalStep>
    <SetGlobalStep id="_1oZB" varname="menu_item"/>
    <SetGlobalStep id="_1oWg" varname="product_group">
      <default>generic</default>
    </SetGlobalStep>
    <SetGlobalStep id="_1oX6" varname="product_group">
      <default>multispectral</default>
    </SetGlobalStep>
    <SetGlobalStep id="_1oXq" varname="product_group">
      <default>sar</default>
    </SetGlobalStep>
    <Procedure disabled="true" id="_1oMc" name="open_metadata_check_it">
      <variable name="metadata_name"/>
      <ProcedureCall id="_1oMo" procedure="get.metadata_node_id">
        <variable name="prod_id">0</variable>
      </ProcedureCall>
      <ProcedureCall id="_1oMf" procedure="get.additional_metadata_node_id">
        <variable name="prod_id">0</variable>
        <variable name="metadata_name">$(metadata_name)</variable>
      </ProcedureCall>
      <IfSequence id="_1oMg"
                  test="&#34;$(additional_metadata_node_id)&#34;&gt;=0">
        <ProcedureCall id="_1oMh" procedure="select.product_tree.metadata">
          <variable name="prod_id">0</variable>
          <variable name="group_id"/>
          <variable name="metadata_id">$(additional_metadata_node_id)</variable>
        </ProcedureCall>
        <ProcedureCall id="_1oMi" procedure="open.metadata_view"/>
        <TryStep id="_1oMj" name="check_view_title">
          <ProcedureCall id="_1oMk" procedure="check.view.title">
            <variable name="prod_nr">1</variable>
            <variable name="band_name">$(mn1)</variable>
          </ProcedureCall>
          <CatchSequence exception="TestException" id="_1oMl" maxerror="0">
            <ProcedureCall id="_1oMp" procedure="run-log.logError">
              <variable name="message">Metadata $(mn1) has not be opened</variable>
              <variable name="withScreenshots">true</variable>
            </ProcedureCall>
          </CatchSequence>
        </TryStep>
        <ElseSequence id="_1oMm">
          <ProcedureCall id="_1oMn" procedure="run-log.logError">
            <variable name="message">Metadata $(mn1) has not be found</variable>
            <variable name="withScreenshots">true</variable>
          </ProcedureCall>
        </ElseSequence>
      </IfSequence>
    </Procedure>
    <Procedure id="_E5Y" name="select_deselect_mask">
      <ProcedureCall id="_E5a" procedure="get.getRowCount">
        <variable name="id">Dialog2.maskTable</variable>
      </ProcedureCall>
      <ServerScriptStep id="_9pO" name="print">
        <code>print "Masks number = $(rowCount)"  </code>
      </ServerScriptStep>
      <IfSequence id="_E5h" test="$(rowCount)&gt;0">
        <RepeatSequence count="$(rowCount)" id="_E5i" name="check_masks"
                        var="m">
          <TryStep id="_E5k" name="select_visible">
            <ProcedureCall id="_E5l"
                           procedure="maskManager.help.checkin_visible">
              <variable name="line_nr">$(m)</variable>
            </ProcedureCall>
            <ProcedureCall disabled="true" id="_E5m"
                           procedure="maskManager.help.checkin_visible">
              <variable name="line_nr">$(m)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_E5n" maxerror="0">
              <ProcedureCall id="_E5p" procedure="scripts.error.error_text">
                <variable name="text">Mask $(m) cannot be selected.</variable>
              </ProcedureCall>
            </CatchSequence>
          </TryStep>
          <TryStep id="_E5z" name="deselect_visible">
            <ProcedureCall id="_E5+"
                           procedure="maskManager.help.checkin_visible">
              <variable name="line_nr">$(m)</variable>
            </ProcedureCall>
            <ProcedureCall disabled="true" id="_E5-"
                           procedure="maskManager.help.checkin_visible">
              <variable name="line_nr">$(m)</variable>
            </ProcedureCall>
            <CatchSequence exception="TestException" id="_E60" maxerror="0">
              <ProcedureCall id="_E61" procedure="scripts.error.error_text">
                <variable name="text">Mask $(m) cannot be selected.</variable>
              </ProcedureCall>
            </CatchSequence>
          </TryStep>
          <ProcedureCall id="_1kdi"
                         procedure="clicks.run_the_Garbage_Collector"/>
        </RepeatSequence>
        <ElseSequence id="_E5x">
          <ProcedureCall id="_E5y" procedure="scripts.error.error_text">
            <variable name="text">Mask Manager is empty</variable>
          </ProcedureCall>
        </ElseSequence>
      </IfSequence>
    </Procedure>
    <Procedure id="_BwH" name="open_product_check_masks_and_layers">
      <SetGlobalStep id="_1lXD" varname="prod_id_visat_tree">
        <default>0</default>
      </SetGlobalStep>
      <ProcedureCall id="_94u" procedure="preparing_for_test"/>
      <ProcedureCall id="_C-t"
                     procedure="checks.checkProductNotOpened_return_prodNotOpened_variable"/>
      <IfSequence id="_C-u"
                  test="&#34;$(prodNotOpened)&#34;==&#34;false&#34;">
        <IfSequence id="_1kX2"
                    test="&#34;$(view_opened)&#34;==&#34;true&#34;">
          <TestStep id="_DgH" name="check_mask_manager">
            <ProcedureCall id="_6Vn" procedure="opens.openMaskManagerDialog"/>
            <ProcedureCall id="_C4B" procedure="maskManager.check.header">
              <variable name="roi">true</variable>
            </ProcedureCall>
            <ProcedureCall id="_C4C"
                           procedure="maskManager.check.def_layout_MaskManager"/>
            <ProcedureCall disabled="true" id="_C4D"
                           procedure="selects.selectProductInVisatTree">
              <variable name="index">1</variable>
              <variable name="product_name">$(productName)</variable>
            </ProcedureCall>
            <ProcedureCall disabled="true" id="_C4E"
                           procedure="maskManager.check.header">
              <variable name="roi">false</variable>
            </ProcedureCall>
            <ProcedureCall disabled="true" id="_C4F"
                           procedure="maskManager.check.def_layout_MaskManager"/>
            <IfSequence disabled="true" id="_9MT"
                        test="&#34;$(bandGroup)&#34;==&#34;&#34;">
              <ProcedureCall id="_8No"
                             procedure="selects.selectBandInProductTree">
                <variable name="band">$(bandName)</variable>
                <variable name="index">1</variable>
                <variable name="product_name">$(productName)</variable>
              </ProcedureCall>
              <ElseSequence id="_9MU">
                <ProcedureCall id="_9MV"
                               procedure="selects.selectBandInProductTree">
                  <variable name="band">$(bandGroup)/$(bandName)</variable>
                  <variable name="index">1</variable>
                  <variable name="product_name">$(productName)</variable>
                </ProcedureCall>
              </ElseSequence>
            </IfSequence>
            <ProcedureCall disabled="true" id="_DcK"
                           procedure="maskManager.check.header">
              <variable name="roi">true</variable>
            </ProcedureCall>
            <IfSequence id="_E63"
                        test="&#34;$(prodType2)&#34;==&#34;sentinel_3&#34;">
              <ProcedureCall id="_E62"
                             procedure="maskManager.help.select_deselect_mask"/>
              <ProcedureCall id="_1kX8"
                             procedure="clicks.run_the_Garbage_Collector"/>
              <ProcedureCall id="_1kXZ"
                             procedure="clicks.run_the_Garbage_Collector"/>
              <ProcedureCall id="_1kXa"
                             procedure="clicks.run_the_Garbage_Collector"/>
              <ProcedureCall id="_E65" procedure="maskManager.get_mask_name">
                <variable name="maskId">0</variable>
              </ProcedureCall>
              <ElseSequence id="_E64">
                <ProcedureCall id="_DcL"
                               procedure="maskManager.check.masks_in_maskManager"/>
              </ElseSequence>
            </IfSequence>
            <SetGlobalStep id="_DtW" varname="mask_count">
              <default>$(rowCount)</default>
            </SetGlobalStep>
            <ProcedureCall id="_959" procedure="closes.closeMaskManager"/>
          </TestStep>
          <TestStep id="_DcW" name="check_masks_in_LayerManager">
            <ProcedureCall id="_DcX"
                           procedure="opens.LayerManager.openLayerManagerDialog"/>
            <ProcedureCall id="_Dql" procedure="layerManager.find_layer_node">
              <variable name="layer_name">$(masks_mask)</variable>
            </ProcedureCall>
            <IfSequence id="_E6G"
                        test="&#34;$(layer_node_found)&#34;==&#34;true&#34; and $(mask_count)&gt;0">
              <SetGlobalStep id="_E6H" varname="masks_nodeId">
                <default>$(layer_node_id)</default>
              </SetGlobalStep>
              <ProcedureCall id="_E6J"
                             procedure="opens.LayerManager.open_node">
                <variable name="node">$(masks_nodeId)</variable>
              </ProcedureCall>
              <IfSequence id="_E6I"
                          test="&#34;$(prodType2)&#34;==&#34;sentinel_3&#34;">
                <ProcedureCall id="_E7G"
                               procedure="layerManager.select_deselect_mask_layer">
                  <variable name="mask_node_id">$(masks_nodeId)</variable>
                </ProcedureCall>
                <ElseSequence id="_E6L">
                  <IfSequence id="_E6M"
                              test="&#34;$(prodType2)&#34;==&#34;avhrr_gac&#34;">
                    <ProcedureCall id="_E6N"
                                   procedure="layerManager.sytem_mask_names">
                      <variable name="prodType">$(prodType2)</variable>
                      <variable name="id">1</variable>
                      <variable name="basis_layer">$(bandName)</variable>
                    </ProcedureCall>
                    <ElseifSequence id="_E6O"
                                    test="&#34;$(masks)&#34;==&#34;unknow&#34;">
                      <ProcedureCall id="_E6P"
                                     procedure="layerManager.select_sytem_masks"/>
                    </ElseifSequence>
                    <ElseSequence id="_E6Q">
                      <ProcedureCall id="_E6R"
                                     procedure="opens.LayerManager.open_node">
                        <variable name="node">$(masks_nodeId)</variable>
                      </ProcedureCall>
                      <ProcedureCall id="_E6S"
                                     procedure="selects.layerManager.select_layer">
                        <variable name="node_id1">$(masks_nodeId)</variable>
                        <variable name="node_id2">0</variable>
                      </ProcedureCall>
                      <IfSequence id="_E6T"
                                  test="&#34;$(layer_node_found)&#34;==&#34;true&#34;">
                        <ProcedureCall id="_E6U"
                                       procedure="layerManager.sytem_mask_names">
                          <variable name="prodType">$(prodType)</variable>
                          <variable name="id">1</variable>
                          <variable name="basis_layer">$(bandName)</variable>
                        </ProcedureCall>
                        <ElseSequence id="_E6V">
                          <ProcedureCall id="_E6W"
                                         procedure="layerManager.sytem_mask_names">
                            <variable name="prodType">$(prodType)</variable>
                            <variable name="id">1</variable>
                            <variable name="basis_layer">$(bandName)</variable>
                          </ProcedureCall>
                        </ElseSequence>
                      </IfSequence>
                    </ElseSequence>
                  </IfSequence>
                </ElseSequence>
              </IfSequence>
            </IfSequence>
            <ProcedureCall id="_1kXb"
                           procedure="clicks.run_the_Garbage_Collector"/>
            <ProcedureCall id="_1kXc"
                           procedure="clicks.run_the_Garbage_Collector"/>
            <SetGlobalStep id="_E6X" varname="mask_count">
              <default>$(rowCount)</default>
            </SetGlobalStep>
            <ProcedureCall id="_Dct" procedure="closes.closeLayerManager"/>
          </TestStep>
        </IfSequence>
        <SetGlobalStep id="_Deh" varname="mask_number">
          <default>0</default>
        </SetGlobalStep>
        <SetGlobalStep id="_Dei" varname="masks">
          <default>unknow</default>
        </SetGlobalStep>
      </IfSequence>
    </Procedure>
    <Procedure id="_1lDV" name="band_statistics">
      <ProcedureCall id="_1lDW" procedure="import_data.raster_data">
        <variable name="import_data">sentinel3</variable>
      </ProcedureCall>
      <ProcedureCall id="_1lDX" procedure="open.statistics_dialog"/>
      <ProcedureCall id="_1lDY"
                     procedure="do_click.statistics_dialog.refreshButton"/>
      <ProcedureCall id="_1lDZ"
                     procedure="wait.disappear.computing_statistics_progress monitor"/>
      <TestStep id="_1lDa"
                name="S3A_OL_1_EFR____20130621T100921_20130621T101417_20140613T170503_0295_001_002______LN2_D_NR____">
        <comment>@teststep check statistics</comment>
        <CheckStringStep client="$(client)"
                         component="Dialog.labelOa05_radiance" id="_1lDb">
          <text>Oa05_radiance</text>
        </CheckStringStep>
        <Test id="_1lDc" name="pixel_total">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;0"
                           id="_1lDd">
            <text>31610547</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDe" name="minimum">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;1"
                           id="_1lDf">
            <text>50.1576</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDg" name="maximum">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;2"
                           id="_1lDh">
            <text>449.6000</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDi" name="mean">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;3"
                           id="_1lDj">
            <text>56.1415</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDk" name="sigma">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;4"
                           id="_1lDl">
            <text>23.6698</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDm" name="median">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;5"
                           id="_1lDn">
            <text>51.3201</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDo" name="p75_thereshold">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;6"
                           id="_1lDp">
            <text>58.9453</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDq" name="p80_thereshold">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;7"
                           id="_1lDr">
            <text>59.3447</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDs" name="p85_thereshold">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;8"
                           id="_1lDt">
            <text>59.3447</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDu" name="p90_thereshold">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;9"
                           id="_1lDv">
            <text>59.3447</text>
          </CheckStringStep>
        </Test>
        <Test id="_1lDw" name="max_error">
          <CheckStringStep checktype="item" client="$(client)"
                           component="Dialog.StatisticsToolView.Control.table.Value&amp;10"
                           id="_1lDx">
            <text>0.3994</text>
          </CheckStringStep>
        </Test>
        <CheckItemsStep checktype="column" client="$(client)"
                        component="Dialog.StatisticsToolView.Control.table.Value"
                        id="_1lDy">
          <item>31610547</item>
          <item>50.1576</item>
          <item>449.6000</item>
          <item>56.1415</item>
          <item>23.6698</item>
          <item>51.3201</item>
          <item>58.9453</item>
          <item>59.3447</item>
          <item>59.3447</item>
          <item>59.3447</item>
          <item>0.3994</item>
        </CheckItemsStep>
      </TestStep>
      <ProcedureCall id="_1lDz"
                     procedure="select.statistics_dialog.use_ROI_mask"/>
      <ProcedureCall id="_1lD+" procedure="select.statistics_dialog.mask">
        <variable name="mask">$(mask1)</variable>
      </ProcedureCall>
      <ProcedureCall id="_1lD-" procedure="select.statistics_dialog.mask">
        <variable name="mask">$(mask2)</variable>
      </ProcedureCall>
      <ProcedureCall id="_1lE0"
                     procedure="do_click.statistics_dialog.refreshButton"/>
      <ProcedureCall id="_1lE1"
                     procedure="wait.disappear.computing_statistics_progress monitor"/>
      <TestStep id="_1lE2" name="S3A_OL_1_EFR____201306_ROI">
        <comment>@teststep check statistics</comment>
        <CheckStringStep client="$(client)"
                         component="Dialog.labelOa05_radiance_with_ROI-mask_quality_flags_land"
                         id="_1lE3">
          <text>Oa05_radiance with ROI-mask quality_flags_land</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;0"
                         id="_1lE4">
          <text>17934466</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;1"
                         id="_1lE5">
          <text>50.1576</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;2"
                         id="_1lE6">
          <text>449.6000</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;3"
                         id="_1lE7">
          <text>52.7436</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;4"
                         id="_1lE8">
          <text>23.9450</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;5"
                         id="_1lE9">
          <text>50.9564</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;6"
                         id="_1lEA">
          <text>50.9564</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;7"
                         id="_1lEB">
          <text>50.9564</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;8"
                         id="_1lEC">
          <text>50.9564</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;9"
                         id="_1lED">
          <text>50.9564</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table2.Value&amp;10"
                         id="_1lEE">
          <text>0.3994</text>
        </CheckStringStep>
        <CheckStringStep client="$(client)"
                         component="Dialog.labelOa05_radiance_with_ROI-mask_quality_flags_coastline"
                         id="_1lEF">
          <text>Oa05_radiance with ROI-mask quality_flags_coastline</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;0"
                         id="_1lEG">
          <text>301024</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;1"
                         id="_1lEH">
          <text>50.5829</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;2"
                         id="_1lEI">
          <text>449.6000</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;3"
                         id="_1lEJ">
          <text>57.9296</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;4"
                         id="_1lEK">
          <text>20.5507</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;5"
                         id="_1lEL">
          <text>58.5633</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;6"
                         id="_1lEM">
          <text>58.9623</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;6"
                         id="_1lEN">
          <text>58.9623</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;7"
                         id="_1lEO">
          <text>58.9623</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;8"
                         id="_1lEP">
          <text>58.9623</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;9"
                         id="_1lEQ">
          <text>58.9623</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;10"
                         id="_1lER">
          <text>0.3990</text>
        </CheckStringStep>
        <CheckStringStep checktype="item" client="$(client)"
                         component="Dialog.StatisticsToolView.Control.table3.Value&amp;10"
                         id="_1lES">
          <text>0.3990</text>
        </CheckStringStep>
      </TestStep>
      <ProcedureCall disabled="true" id="_1lET" procedure="open.product">
        <variable name="prod_dir">$(dataInDir)</variable>
        <variable name="prod">$(fileName)</variable>
      </ProcedureCall>
      <ProcedureCall id="_1lEU" procedure="close.all_products"/>
    </Procedure>
    <Procedure id="_9XO" name="computeStatistics">
      <SetGlobalStep id="_DuY" varname="prod_id_visat_tree">
        <default>0</default>
      </SetGlobalStep>
      <TestStep id="_FSh" name="computeStatistics" postdelay="1000">
        <ProcedureCall id="_FSi" procedure="open.statisticDialog"/>
        <ProcedureCall id="_FSj"
                       procedure="select.statistics.deselect_checkBox_UseRoi"/>
        <ProcedureCall id="_FSk" postdelay="5000"
                       procedure="clicks.statistics.button_compute"/>
        <TestStep id="_1kiH"
                  name="wait_Computing_Statistics_progress_monitor_disappear">
          <TryStep id="_1kiI">
            <ProcedureCall id="_1kiJ" postdelay="2000"
                           procedure="wait.computeStatistics"/>
            <CatchSequence exception="TestException" id="_1kiK" maxerror="0"/>
          </TryStep>
          <TryStep id="_1kiL">
            <ProcedureCall id="_1kiM" postdelay="2000"
                           procedure="wait.computeStatistics"/>
            <CatchSequence exception="TestException" id="_1kiN" maxerror="0"/>
          </TryStep>
        </TestStep>
        <ProcedureCall disabled="true" id="_FSm" postdelay="2000"
                       procedure="checks.statistics.text_not_roi"/>
        <ProcedureCall id="_FSn"
                       procedure="checks.statistics.statistics_label">
          <variable name="txt">$(bandName)</variable>
        </ProcedureCall>
      </TestStep>
      <TestStep id="_FSo" name="computeStatistics_for_roi_mask">
        <IfSequence id="_FSp"
                    test="&#34;$(mask_name1)&#34;&lt;&gt;&#34;&#34; or &#34;$(mask_name2)&#34;&lt;&gt;&#34;&#34;">
          <IfSequence id="_FSq"
                      test="&#34;$(mask_name2)&#34;&lt;&gt;&#34;&#34;">
            <SetGlobalStep id="_FSr" local="true" varname="mask_name">
              <default>$(mask_name2)</default>
            </SetGlobalStep>
            <ElseifSequence id="_FSs"
                            test="&#34;$(mask_name1)&#34;&lt;&gt;&#34;&#34;">
              <SetGlobalStep id="_FSt" local="true" varname="mask_name">
                <default>$(mask_name1)</default>
              </SetGlobalStep>
            </ElseifSequence>
          </IfSequence>
          <IfSequence id="_FSu"
                      test="&#34;$(mask_name)&#34;&lt;&gt;&#34;no&#34;">
            <TestStep id="_FSv" name="compute_for_all_roi_mask"
                      postdelay="2000">
              <ProcedureCall id="_FSw"
                             procedure="select.statistics.checkBox_UseRoi"/>
              <ProcedureCall id="_FSx"
                             procedure="select.statistics.select_all"/>
              <ProcedureCall id="_FSy"
                             procedure="clicks.statistics.button_compute"/>
              <TestStep id="_1ki8"
                        name="wait_Computing_Statistics_progress_monitor_disappear">
                <TryStep id="_1ki9">
                  <ProcedureCall id="_1ki7" postdelay="2000"
                                 procedure="wait.computeStatistics"/>
                  <CatchSequence exception="TestException" id="_1kiA"
                                 maxerror="0"/>
                </TryStep>
                <TryStep id="_1kiB">
                  <ProcedureCall id="_1kiC" postdelay="2000"
                                 procedure="wait.computeStatistics"/>
                  <CatchSequence exception="TestException" id="_1kiD"
                                 maxerror="0"/>
                </TryStep>
              </TestStep>
              <ProcedureCall id="_FS+"
                             procedure="checks.statistics.text_statistics_for_all_roi"/>
              <ProcedureCall disabled="true" id="_FS-"
                             procedure="select.statistics.roi_mask">
                <variable name="roi_mask">$(mask_name)</variable>
              </ProcedureCall>
              <ProcedureCall disabled="true" id="_FT0"
                             procedure="checks.statistics.use_roi_selected"/>
              <ProcedureCall disabled="true" id="_FT1"
                             procedure="checks.statistics.use_roi_selected"/>
              <ProcedureCall disabled="true" id="_FT2"
                             procedure="select.statistics.roi_mask">
                <variable name="roi_mask">$(mask_name)</variable>
              </ProcedureCall>
              <ProcedureCall id="_FT3"
                             procedure="clicks.statistics.button_OK_failed_compute_statistics_shoot_error"/>
            </TestStep>
            <TestStep id="_FT4" name="compute_for_one_mask">
              <ProcedureCall id="_FT5"
                             procedure="select.statistics.select_none"/>
              <ProcedureCall id="_FT6" procedure="select.statistics.one_mask">
                <variable name="roi_mask">$(mask_name)</variable>
              </ProcedureCall>
              <ProcedureCall id="_FT7"
                             procedure="clicks.statistics.button_compute"/>
              <ProcedureCall id="_FT8" postdelay="2000"
                             procedure="wait.computeStatistics"/>
              <ProcedureCall id="_FT9"
                             procedure="checks.statistics.button_Compute_enabled"/>
              <IfSequence id="_FTA"
                          test="&#34;$(button_Compute_enabled)&#34;==&#34;true&#34;">
                <ProcedureCall id="_FTB"
                               procedure="clicks.statistics.button_compute_help"/>
              </IfSequence>
              <ProcedureCall id="_FTC" postdelay="2000"
                             procedure="wait.computeStatistics"/>
              <ProcedureCall id="_FTD"
                             procedure="checks.statistics.button_Compute_enabled"/>
              <IfSequence id="_FTE"
                          test="&#34;$(button_Compute_enabled)&#34;==&#34;true&#34;">
                <ProcedureCall id="_FTF"
                               procedure="clicks.statistics.button_compute_help"/>
              </IfSequence>
              <ProcedureCall id="_FTG" postdelay="2000"
                             procedure="wait.computeStatistics"/>
              <ProcedureCall id="_FTH"
                             procedure="checks.statistics.text_statistics_for_roi_mask">
                <variable name="roimask">$(mask_name)</variable>
              </ProcedureCall>
            </TestStep>
            <ProcedureCall id="_1kiO"
                           procedure="select.statistics.deselect_checkBox_UseRoi"/>
          </IfSequence>
        </IfSequence>
      </TestStep>
      <ProcedureCall id="_FTI"
                     procedure="clicks.statistics.button_OK_failed_compute_statistics_shoot_error"/>
      <ProcedureCall id="_1kid" procedure="scripts.make_screensot">
        <variable name="iw_name">computeStatistics</variable>
        <variable name="iw_name_example">error_dialog</variable>
      </ProcedureCall>
      <ServerScriptStep id="_FTK" name="An error">
        <code>rc.logError("'$(dataInDir)/$(productName)' could not be opened! Check the dataInDir or the product")</code>
      </ServerScriptStep>
      <ProcedureCall id="_DYC"
                     procedure="scripts.error.product_is_not_opened_in_VISAT">
        <variable name="product_name">$(dataInDir)/$(fileName)</variable>
      </ProcedureCall>
    </Procedure>
  </ExtraSequence>
  <WindowList id="_5"/>
</RootStep>
